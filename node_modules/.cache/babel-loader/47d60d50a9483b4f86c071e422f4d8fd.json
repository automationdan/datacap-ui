{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"active\", \"className\", \"withOverlay\", \"small\", \"description\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId';\nimport { usePrefix } from '../../internal/usePrefix';\nvar getInstanceId = setupGetInstanceId();\n\nfunction Loading(_ref) {\n  var _cx, _cx2;\n\n  var id = _ref.id,\n      active = _ref.active,\n      customClassName = _ref.className,\n      withOverlay = _ref.withOverlay,\n      small = _ref.small,\n      description = _ref.description,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useRef = useRef(getInstanceId()),\n      instanceId = _useRef.current;\n\n  var loadingClassName = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--loading\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--loading--small\"), small), _defineProperty(_cx, \"\".concat(prefix, \"--loading--stop\"), !active), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--loading-overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--loading-overlay--stop\"), !active), _cx2));\n  var loadingId = id || \"loading-id-\".concat(instanceId);\n  var loading = /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    \"aria-atomic\": \"true\",\n    \"aria-labelledby\": loadingId,\n    \"aria-live\": active ? 'assertive' : 'off',\n    className: loadingClassName\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    id: loadingId,\n    className: \"\".concat(prefix, \"--visually-hidden\")\n  }, description), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"\".concat(prefix, \"--loading__svg\"),\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/React.createElement(\"title\", null, description), small ? /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"\".concat(prefix, \"--loading__background\"),\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"44\"\n  }) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"\".concat(prefix, \"--loading__stroke\"),\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"44\"\n  })));\n  return withOverlay ? /*#__PURE__*/React.createElement(\"div\", {\n    className: overlayClassName\n  }, loading) : loading;\n}\n\nLoading.propTypes = {\n  /**\n   * Specify whether you want the loading indicator to be spinning or not\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Provide an optional className to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify a description that would be used to best describe the loading state\n   */\n  description: PropTypes.string,\n\n  /**\n   * Provide an `id` to uniquely identify the label\n   */\n  id: PropTypes.string,\n\n  /**\n   * Specify whether you would like the small variant of <Loading>\n   */\n  small: PropTypes.bool,\n\n  /**\n   * Specify whether you want the loader to be applied with an overlay\n   */\n  withOverlay: PropTypes.bool\n};\nLoading.defaultProps = {\n  active: true,\n  withOverlay: true,\n  small: false,\n  description: 'Active loading indicator'\n};\nexport default Loading;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/Loading/Loading.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","cx","PropTypes","React","useRef","setupGetInstanceId","usePrefix","getInstanceId","Loading","_ref","_cx","_cx2","id","active","customClassName","className","withOverlay","small","description","rest","prefix","_useRef","instanceId","current","loadingClassName","concat","overlayClassName","loadingId","loading","createElement","viewBox","cy","r","propTypes","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"active\", \"className\", \"withOverlay\", \"small\", \"description\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId';\nimport { usePrefix } from '../../internal/usePrefix';\nvar getInstanceId = setupGetInstanceId();\n\nfunction Loading(_ref) {\n  var _cx, _cx2;\n\n  var id = _ref.id,\n      active = _ref.active,\n      customClassName = _ref.className,\n      withOverlay = _ref.withOverlay,\n      small = _ref.small,\n      description = _ref.description,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useRef = useRef(getInstanceId()),\n      instanceId = _useRef.current;\n\n  var loadingClassName = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--loading\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--loading--small\"), small), _defineProperty(_cx, \"\".concat(prefix, \"--loading--stop\"), !active), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--loading-overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--loading-overlay--stop\"), !active), _cx2));\n  var loadingId = id || \"loading-id-\".concat(instanceId);\n  var loading = /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    \"aria-atomic\": \"true\",\n    \"aria-labelledby\": loadingId,\n    \"aria-live\": active ? 'assertive' : 'off',\n    className: loadingClassName\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    id: loadingId,\n    className: \"\".concat(prefix, \"--visually-hidden\")\n  }, description), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"\".concat(prefix, \"--loading__svg\"),\n    viewBox: \"0 0 100 100\"\n  }, /*#__PURE__*/React.createElement(\"title\", null, description), small ? /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"\".concat(prefix, \"--loading__background\"),\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"44\"\n  }) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"\".concat(prefix, \"--loading__stroke\"),\n    cx: \"50%\",\n    cy: \"50%\",\n    r: \"44\"\n  })));\n  return withOverlay ? /*#__PURE__*/React.createElement(\"div\", {\n    className: overlayClassName\n  }, loading) : loading;\n}\n\nLoading.propTypes = {\n  /**\n   * Specify whether you want the loading indicator to be spinning or not\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Provide an optional className to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify a description that would be used to best describe the loading state\n   */\n  description: PropTypes.string,\n\n  /**\n   * Provide an `id` to uniquely identify the label\n   */\n  id: PropTypes.string,\n\n  /**\n   * Specify whether you would like the small variant of <Loading>\n   */\n  small: PropTypes.bool,\n\n  /**\n   * Specify whether you want the loader to be applied with an overlay\n   */\n  withOverlay: PropTypes.bool\n};\nLoading.defaultProps = {\n  active: true,\n  withOverlay: true,\n  small: false,\n  description: 'Active loading indicator'\n};\nexport default Loading;"]},"metadata":{},"sourceType":"module"}