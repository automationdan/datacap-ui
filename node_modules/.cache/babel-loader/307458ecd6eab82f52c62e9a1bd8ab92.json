{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accept\", \"className\", \"id\", \"disabled\", \"labelText\", \"multiple\", \"name\", \"onAddFiles\", \"pattern\", \"role\", \"tabIndex\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { keys, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction FileUploaderDropContainer(_ref) {\n  var _classNames2;\n\n  var accept = _ref.accept,\n      className = _ref.className,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      labelText = _ref.labelText,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      onAddFiles = _ref.onAddFiles,\n      pattern = _ref.pattern,\n      role = _ref.role,\n      tabIndex = _ref.tabIndex,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var inputRef = useRef(null);\n\n  var _useRef = useRef(id || uniqueId()),\n      uid = _useRef.current;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isActive = _useState2[0],\n      setActive = _useState2[1];\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--file-browse-btn\"), _defineProperty({}, \"\".concat(prefix, \"--file-browse-btn--disabled\"), disabled));\n  var dropareaClasses = classNames(\"\".concat(prefix, \"--file__drop-container\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--file__drop-container--drag-over\"), isActive), _defineProperty(_classNames2, className, className), _classNames2));\n  /**\n   * Filters the array of added files based on file type restrictions\n   * @param {Event} event - Event object, used to get the list of files added\n   */\n\n  function validateFiles(event) {\n    var transferredFiles = event.type === 'drop' ? _toConsumableArray(event.dataTransfer.files) : _toConsumableArray(event.target.files);\n\n    if (!accept.length) {\n      return transferredFiles;\n    }\n\n    var acceptedTypes = new Set(accept);\n    return transferredFiles.reduce(function (acc, curr) {\n      var name = curr.name,\n          _curr$type = curr.type,\n          mimeType = _curr$type === void 0 ? '' : _curr$type;\n      var fileExtensionRegExp = new RegExp(pattern, 'i');\n      var hasFileExtension = fileExtensionRegExp.test(name);\n\n      if (!hasFileExtension) {\n        return acc;\n      }\n\n      var _name$match = name.match(fileExtensionRegExp),\n          _name$match2 = _slicedToArray(_name$match, 1),\n          fileExtension = _name$match2[0];\n\n      if (acceptedTypes.has(mimeType) || acceptedTypes.has(fileExtension)) {\n        return acc.concat([curr]);\n      }\n\n      curr.invalidFileType = true;\n      return acc.concat([curr]);\n    }, []);\n  }\n\n  function handleChange(event) {\n    var addedFiles = validateFiles(event);\n    return onAddFiles(event, {\n      addedFiles: addedFiles\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--file\"),\n    onDragOver: function onDragOver(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      if (disabled) {\n        return;\n      }\n\n      setActive(true);\n      evt.dataTransfer.dropEffect = 'copy';\n    },\n    onDragLeave: function onDragLeave(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      if (disabled) {\n        return;\n      }\n\n      setActive(false);\n      evt.dataTransfer.dropEffect = 'move';\n    },\n    onDrop: function onDrop(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      if (disabled) {\n        return;\n      }\n\n      setActive(false);\n      handleChange(evt);\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: labelClasses,\n    htmlFor: uid,\n    tabIndex: tabIndex || 0,\n    onKeyDown: function onKeyDown(evt) {\n      if (matches(evt, [keys.Enter, keys.Space])) {\n        inputRef.current.click();\n      }\n    }\n  }, rest), /*#__PURE__*/React.createElement(\"div\", {\n    className: dropareaClasses,\n    role: role || 'button'\n  }, labelText), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: uid,\n    className: \"\".concat(prefix, \"--file-input\"),\n    ref: inputRef,\n    tabIndex: \"-1\",\n    disabled: disabled,\n    accept: accept,\n    name: name,\n    multiple: multiple,\n    onChange: handleChange,\n    onClick: function onClick(evt) {\n      evt.target.value = null;\n    }\n  })));\n}\n\nFileUploaderDropContainer.propTypes = {\n  /**\n   * Specify the types of files that this input should be able to receive\n   */\n  accept: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * Provide a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether file input is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a unique id for the underlying `<input>` node\n   */\n  id: PropTypes.string,\n\n  /**\n   * Provide the label text to be read by screen readers when interacting with\n   * this control\n   */\n  labelText: PropTypes.string.isRequired,\n\n  /**\n   * Specify if the component should accept multiple files to upload\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Provide a name for the underlying `<input>` node\n   */\n  name: PropTypes.string,\n\n  /**\n   * Event handler that is called after files are added to the uploader\n   * The event handler signature looks like `onAddFiles(evt, { addedFiles })`\n   */\n  onAddFiles: PropTypes.func,\n\n  /**\n   * Provide a custom regex pattern for the acceptedTypes\n   */\n  pattern: PropTypes.string,\n\n  /**\n   * Provide an accessibility role for the <FileUploaderButton>\n   */\n  role: PropTypes.string,\n\n  /**\n   * Specify the size of the uploaded items, from a list of available\n   * sizes. For `default` buttons, this prop can remain unspecified.\n   * V11: `default`, `field`, and `small` will be removed\n   */\n  size: PropTypes.oneOf(['default', 'field', 'small', 'sm', 'md', 'lg']),\n\n  /**\n   * Provide a custom tabIndex value for the <FileUploaderButton>\n   */\n  tabIndex: PropTypes.number\n};\nFileUploaderDropContainer.defaultProps = {\n  tabIndex: 0,\n  labelText: 'Add file',\n  multiple: false,\n  onAddFiles: function onAddFiles() {},\n  accept: [],\n  pattern: '.[0-9a-z]+$'\n};\nexport default FileUploaderDropContainer;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/FileUploader/FileUploaderDropContainer.js"],"names":["_extends","_toConsumableArray","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","React","useRef","useState","PropTypes","classNames","keys","matches","uniqueId","usePrefix","FileUploaderDropContainer","_ref","_classNames2","accept","className","id","disabled","labelText","multiple","name","onAddFiles","pattern","role","tabIndex","rest","prefix","inputRef","_useRef","uid","current","_useState","_useState2","isActive","setActive","labelClasses","concat","dropareaClasses","validateFiles","event","transferredFiles","type","dataTransfer","files","target","length","acceptedTypes","Set","reduce","acc","curr","_curr$type","mimeType","fileExtensionRegExp","RegExp","hasFileExtension","test","_name$match","match","_name$match2","fileExtension","has","invalidFileType","handleChange","addedFiles","createElement","onDragOver","evt","stopPropagation","preventDefault","dropEffect","onDragLeave","onDrop","htmlFor","onKeyDown","Enter","Space","click","ref","onChange","onClick","value","propTypes","arrayOf","string","bool","isRequired","func","size","oneOf","number","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accept\", \"className\", \"id\", \"disabled\", \"labelText\", \"multiple\", \"name\", \"onAddFiles\", \"pattern\", \"role\", \"tabIndex\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { keys, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction FileUploaderDropContainer(_ref) {\n  var _classNames2;\n\n  var accept = _ref.accept,\n      className = _ref.className,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      labelText = _ref.labelText,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      onAddFiles = _ref.onAddFiles,\n      pattern = _ref.pattern,\n      role = _ref.role,\n      tabIndex = _ref.tabIndex,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var inputRef = useRef(null);\n\n  var _useRef = useRef(id || uniqueId()),\n      uid = _useRef.current;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isActive = _useState2[0],\n      setActive = _useState2[1];\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--file-browse-btn\"), _defineProperty({}, \"\".concat(prefix, \"--file-browse-btn--disabled\"), disabled));\n  var dropareaClasses = classNames(\"\".concat(prefix, \"--file__drop-container\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--file__drop-container--drag-over\"), isActive), _defineProperty(_classNames2, className, className), _classNames2));\n  /**\n   * Filters the array of added files based on file type restrictions\n   * @param {Event} event - Event object, used to get the list of files added\n   */\n\n  function validateFiles(event) {\n    var transferredFiles = event.type === 'drop' ? _toConsumableArray(event.dataTransfer.files) : _toConsumableArray(event.target.files);\n\n    if (!accept.length) {\n      return transferredFiles;\n    }\n\n    var acceptedTypes = new Set(accept);\n    return transferredFiles.reduce(function (acc, curr) {\n      var name = curr.name,\n          _curr$type = curr.type,\n          mimeType = _curr$type === void 0 ? '' : _curr$type;\n      var fileExtensionRegExp = new RegExp(pattern, 'i');\n      var hasFileExtension = fileExtensionRegExp.test(name);\n\n      if (!hasFileExtension) {\n        return acc;\n      }\n\n      var _name$match = name.match(fileExtensionRegExp),\n          _name$match2 = _slicedToArray(_name$match, 1),\n          fileExtension = _name$match2[0];\n\n      if (acceptedTypes.has(mimeType) || acceptedTypes.has(fileExtension)) {\n        return acc.concat([curr]);\n      }\n\n      curr.invalidFileType = true;\n      return acc.concat([curr]);\n    }, []);\n  }\n\n  function handleChange(event) {\n    var addedFiles = validateFiles(event);\n    return onAddFiles(event, {\n      addedFiles: addedFiles\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--file\"),\n    onDragOver: function onDragOver(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      if (disabled) {\n        return;\n      }\n\n      setActive(true);\n      evt.dataTransfer.dropEffect = 'copy';\n    },\n    onDragLeave: function onDragLeave(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      if (disabled) {\n        return;\n      }\n\n      setActive(false);\n      evt.dataTransfer.dropEffect = 'move';\n    },\n    onDrop: function onDrop(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      if (disabled) {\n        return;\n      }\n\n      setActive(false);\n      handleChange(evt);\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: labelClasses,\n    htmlFor: uid,\n    tabIndex: tabIndex || 0,\n    onKeyDown: function onKeyDown(evt) {\n      if (matches(evt, [keys.Enter, keys.Space])) {\n        inputRef.current.click();\n      }\n    }\n  }, rest), /*#__PURE__*/React.createElement(\"div\", {\n    className: dropareaClasses,\n    role: role || 'button'\n  }, labelText), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: uid,\n    className: \"\".concat(prefix, \"--file-input\"),\n    ref: inputRef,\n    tabIndex: \"-1\",\n    disabled: disabled,\n    accept: accept,\n    name: name,\n    multiple: multiple,\n    onChange: handleChange,\n    onClick: function onClick(evt) {\n      evt.target.value = null;\n    }\n  })));\n}\n\nFileUploaderDropContainer.propTypes = {\n  /**\n   * Specify the types of files that this input should be able to receive\n   */\n  accept: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * Provide a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether file input is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a unique id for the underlying `<input>` node\n   */\n  id: PropTypes.string,\n\n  /**\n   * Provide the label text to be read by screen readers when interacting with\n   * this control\n   */\n  labelText: PropTypes.string.isRequired,\n\n  /**\n   * Specify if the component should accept multiple files to upload\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Provide a name for the underlying `<input>` node\n   */\n  name: PropTypes.string,\n\n  /**\n   * Event handler that is called after files are added to the uploader\n   * The event handler signature looks like `onAddFiles(evt, { addedFiles })`\n   */\n  onAddFiles: PropTypes.func,\n\n  /**\n   * Provide a custom regex pattern for the acceptedTypes\n   */\n  pattern: PropTypes.string,\n\n  /**\n   * Provide an accessibility role for the <FileUploaderButton>\n   */\n  role: PropTypes.string,\n\n  /**\n   * Specify the size of the uploaded items, from a list of available\n   * sizes. For `default` buttons, this prop can remain unspecified.\n   * V11: `default`, `field`, and `small` will be removed\n   */\n  size: PropTypes.oneOf(['default', 'field', 'small', 'sm', 'md', 'lg']),\n\n  /**\n   * Provide a custom tabIndex value for the <FileUploaderButton>\n   */\n  tabIndex: PropTypes.number\n};\nFileUploaderDropContainer.defaultProps = {\n  tabIndex: 0,\n  labelText: 'Add file',\n  multiple: false,\n  onAddFiles: function onAddFiles() {},\n  accept: [],\n  pattern: '.[0-9a-z]+$'\n};\nexport default FileUploaderDropContainer;"]},"metadata":{},"sourceType":"module"}