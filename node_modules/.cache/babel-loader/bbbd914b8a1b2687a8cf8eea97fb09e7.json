{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"light\"],\n    _excluded2 = [\"children\", \"className\", \"clicked\", \"handleClick\", \"handleKeyDown\", \"href\", \"light\", \"onClick\", \"onKeyDown\"],\n    _excluded3 = [\"children\", \"className\", \"disabled\", \"handleClick\", \"handleKeyDown\", \"iconDescription\", \"id\", \"light\", \"name\", \"onClick\", \"onChange\", \"onKeyDown\", \"selected\", \"tabIndex\", \"title\", \"value\"],\n    _excluded4 = [\"tabIndex\", \"className\", \"children\", \"expanded\", \"tileMaxHeight\", \"tilePadding\", \"onClick\", \"onKeyUp\", \"tileCollapsedIconText\", \"tileExpandedIconText\", \"tileCollapsedLabel\", \"tileExpandedLabel\", \"onBeforeClick\", \"light\"];\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Checkbox16, CheckboxCheckedFilled16, ChevronDown16 } from '@carbon/icons-react';\nimport Link from '../../Link';\nimport { keys, matches } from '../../../internal/keyboard';\nimport deprecate from '../../../prop-types/deprecate';\nimport { composeEventHandlers } from '../../../tools/events';\nimport { usePrefix } from '../../../internal/usePrefix';\nimport useIsomorphicEffect from '../../../internal/useIsomorphicEffect';\nexport var Tile = /*#__PURE__*/React.forwardRef(function Tile(_ref, ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$light = _ref.light,\n      light = _ref$light === void 0 ? false : _ref$light,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var tileClasses = cx(\"\".concat(prefix, \"--tile\"), _defineProperty({}, \"\".concat(prefix, \"--tile--light\"), light), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.')\n};\nexport var ClickableTile = /*#__PURE__*/React.forwardRef(function ClickableTile(_ref2, ref) {\n  var _cx2;\n\n  var children = _ref2.children,\n      className = _ref2.className,\n      _ref2$clicked = _ref2.clicked,\n      clicked = _ref2$clicked === void 0 ? false : _ref2$clicked,\n      handleClick = _ref2.handleClick,\n      handleKeyDown = _ref2.handleKeyDown,\n      href = _ref2.href,\n      _ref2$light = _ref2.light,\n      light = _ref2$light === void 0 ? false : _ref2$light,\n      _ref2$onClick = _ref2.onClick,\n      onClick = _ref2$onClick === void 0 ? function () {} : _ref2$onClick,\n      _ref2$onKeyDown = _ref2.onKeyDown,\n      onKeyDown = _ref2$onKeyDown === void 0 ? function () {} : _ref2$onKeyDown,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var prefix = usePrefix();\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--clickable\"), (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--tile--is-clicked\"), clicked), _defineProperty(_cx2, \"\".concat(prefix, \"--tile--light\"), light), _cx2), className);\n\n  var _useState = useState(clicked),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setIsSelected = _useState2[1]; // TODO: replace with onClick when handleClick prop is deprecated\n\n\n  var clickHandler = handleClick || onClick; // TODO: replace with onClick when handleClick prop is deprecated\n\n  var keyDownHandler = handleKeyDown || onKeyDown;\n\n  function handleOnClick(evt) {\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n  }\n\n  function handleOnKeyDown(evt) {\n    evt.persist();\n\n    if (matches(evt, [keys.Enter, keys.Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      keyDownHandler(evt);\n    }\n\n    keyDownHandler(evt);\n  }\n\n  return /*#__PURE__*/React.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    ref: ref\n  }, rest), children);\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n\n  /**\n   * Deprecated in v11. Use 'onClick' instead.\n   */\n  handleClick: deprecate(PropTypes.func, 'The handleClick prop for ClickableTile has been deprecated in favor of onClick. It will be removed in the next major release.'),\n\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  handleKeyDown: deprecate(PropTypes.func, 'The handleKeyDown prop for ClickableTile has been deprecated in favor of onKeyDown. It will be removed in the next major release.'),\n\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string\n};\nexport var SelectableTile = /*#__PURE__*/React.forwardRef(function SelectableTile(_ref3, ref) {\n  var _cx3;\n\n  var children = _ref3.children,\n      className = _ref3.className,\n      disabled = _ref3.disabled,\n      handleClick = _ref3.handleClick,\n      handleKeyDown = _ref3.handleKeyDown,\n      iconDescription = _ref3.iconDescription,\n      id = _ref3.id,\n      _ref3$light = _ref3.light,\n      light = _ref3$light === void 0 ? false : _ref3$light,\n      name = _ref3.name,\n      _ref3$onClick = _ref3.onClick,\n      onClick = _ref3$onClick === void 0 ? function () {} : _ref3$onClick,\n      _ref3$onChange = _ref3.onChange,\n      onChange = _ref3$onChange === void 0 ? function () {} : _ref3$onChange,\n      _ref3$onKeyDown = _ref3.onKeyDown,\n      onKeyDown = _ref3$onKeyDown === void 0 ? function () {} : _ref3$onKeyDown,\n      _ref3$selected = _ref3.selected,\n      selected = _ref3$selected === void 0 ? false : _ref3$selected,\n      _ref3$tabIndex = _ref3.tabIndex,\n      tabIndex = _ref3$tabIndex === void 0 ? 0 : _ref3$tabIndex,\n      _ref3$title = _ref3.title,\n      title = _ref3$title === void 0 ? 'title' : _ref3$title,\n      _ref3$value = _ref3.value,\n      value = _ref3$value === void 0 ? 'value' : _ref3$value,\n      rest = _objectWithoutProperties(_ref3, _excluded3);\n\n  var prefix = usePrefix(); // TODO: replace with onClick when handleClick prop is deprecated\n\n  var clickHandler = handleClick || onClick; // TODO: replace with onKeyDown when handleKeyDown prop is deprecated\n\n  var keyDownHandler = handleKeyDown || onKeyDown;\n\n  var _useState3 = useState(selected),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSelected = _useState4[0],\n      setIsSelected = _useState4[1];\n\n  var _useState5 = useState(selected),\n      _useState6 = _slicedToArray(_useState5, 2),\n      prevSelected = _useState6[0],\n      setPrevSelected = _useState6[1];\n\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--selectable\"), (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--tile--is-selected\"), isSelected), _defineProperty(_cx3, \"\".concat(prefix, \"--tile--light\"), light), _defineProperty(_cx3, \"\".concat(prefix, \"--tile--disabled\"), disabled), _cx3), className);\n  var inputClasses = cx(\"\".concat(prefix, \"--tile-input\"), _defineProperty({}, \"\".concat(prefix, \"--tile-input--checked\"), isSelected)); // TODO: rename to handleClick when handleClick prop is deprecated\n\n  function handleOnClick(evt) {\n    evt.preventDefault();\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt);\n  } // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n\n\n  function handleOnKeyDown(evt) {\n    evt.persist();\n\n    if (matches(evt, [keys.Enter, keys.Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt);\n    }\n\n    keyDownHandler(evt);\n  }\n\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event);\n  }\n\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    checked: isSelected,\n    className: inputClasses,\n    disabled: disabled,\n    id: id,\n    name: name,\n    onChange: !disabled ? handleChange : null,\n    ref: ref,\n    tabIndex: -1,\n    title: title,\n    type: \"checkbox\",\n    value: value\n  }), /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: classes,\n    htmlFor: id,\n    onClick: !disabled ? handleOnClick : null,\n    onKeyDown: !disabled ? handleOnKeyDown : null // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    ,\n    tabIndex: !disabled ? tabIndex : null\n  }, rest), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile__checkmark \").concat(prefix, \"--tile__checkmark--persistent\")\n  }, isSelected ? /*#__PURE__*/React.createElement(CheckboxCheckedFilled16, null) : /*#__PURE__*/React.createElement(Checkbox16, null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, children)));\n});\nSelectableTile.displayName = 'SelectableTile';\nSelectableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  handleClick: deprecate(PropTypes.func, 'The `handleClick` prop for `SelectableTile` has been deprecated in favor of `onClick`. It will be removed in the next major release.'),\n\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  handleKeyDown: deprecate(PropTypes.func, 'The `handleKeyDown` prop for `SelectableTile` has been deprecated in favor of `onKeyDown`. It will be removed in the next major release.'),\n\n  /**\n   * The description of the checkmark icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop for `SelectableTile` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.'),\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n\n  /**\n   * The `name` of the `<input>`.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The value of the `<input>`.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nexport function ExpandableTile(_ref4) {\n  var _cx5;\n\n  var tabIndex = _ref4.tabIndex,\n      className = _ref4.className,\n      children = _ref4.children,\n      expanded = _ref4.expanded,\n      tileMaxHeight = _ref4.tileMaxHeight,\n      tilePadding = _ref4.tilePadding,\n      onClick = _ref4.onClick,\n      onKeyUp = _ref4.onKeyUp,\n      tileCollapsedIconText = _ref4.tileCollapsedIconText,\n      tileExpandedIconText = _ref4.tileExpandedIconText,\n      tileCollapsedLabel = _ref4.tileCollapsedLabel,\n      tileExpandedLabel = _ref4.tileExpandedLabel,\n      onBeforeClick = _ref4.onBeforeClick,\n      light = _ref4.light,\n      rest = _objectWithoutProperties(_ref4, _excluded4);\n\n  var _useState7 = useState(tileMaxHeight),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isTileMaxHeight = _useState8[0],\n      setIsTileMaxHeight = _useState8[1];\n\n  var _useState9 = useState(tilePadding),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isTilePadding = _useState10[0],\n      setIsTilePadding = _useState10[1];\n\n  var _useState11 = useState(expanded),\n      _useState12 = _slicedToArray(_useState11, 2),\n      prevExpanded = _useState12[0],\n      setPrevExpanded = _useState12[1];\n\n  var _useState13 = useState(tileMaxHeight),\n      _useState14 = _slicedToArray(_useState13, 2),\n      prevTileMaxHeight = _useState14[0],\n      setPrevTileMaxHeight = _useState14[1];\n\n  var _useState15 = useState(tilePadding),\n      _useState16 = _slicedToArray(_useState15, 2),\n      prevTilePadding = _useState16[0],\n      setPrevTilePadding = _useState16[1];\n\n  var _useState17 = useState(expanded),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isExpanded = _useState18[0],\n      setIsExpanded = _useState18[1];\n\n  var aboveTheFold = useRef(null);\n  var tileContent = useRef(null);\n  var tile = useRef(null);\n  var prefix = usePrefix();\n\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n\n  function setMaxHeight() {\n    if (isExpanded) {\n      setIsTileMaxHeight(tileContent.current.getBoundingClientRect().height);\n    }\n\n    setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n  }\n\n  function handleClick(evt) {\n    if (!onBeforeClick(evt) || evt.target.tagName === 'INPUT') {\n      return;\n    }\n\n    evt.persist();\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n\n    if (onClick) {\n      onClick(evt);\n    }\n  }\n\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current) {\n      if (matches(evt, [keys.Enter, keys.Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n\n  function getChildren() {\n    return React.Children.toArray(children);\n  }\n\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--expandable\"), (_cx5 = {}, _defineProperty(_cx5, \"\".concat(prefix, \"--tile--is-expanded\"), isExpanded), _defineProperty(_cx5, \"\".concat(prefix, \"--tile--light\"), light), _cx5), className);\n  var tileStyle = {\n    maxHeight: isExpanded ? null : isTileMaxHeight + isTilePadding\n  };\n  var childrenAsArray = getChildren();\n  useIsomorphicEffect(function () {\n    var getStyle = window.getComputedStyle(tile.current, null);\n    var node = aboveTheFold.current;\n\n    var _node$getBoundingClie = node.getBoundingClientRect(),\n        height = _node$getBoundingClie.height;\n\n    var paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    var paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, []);\n  useEffect(function () {\n    var resizeObserver = new ResizeObserver(function (entries) {\n      var _entries = _slicedToArray(entries, 1),\n          aboveTheFold = _entries[0];\n\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return function () {\n      return resizeObserver.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\",\n    ref: tile,\n    style: tileStyle,\n    className: classes,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[0]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tile__chevron\")\n  }, /*#__PURE__*/React.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), /*#__PURE__*/React.createElement(ChevronDown16, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[1])));\n}\nExpandableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n\n  /**\n   * optional handler to decide whether to ignore a click. returns false if click should be ignored\n   */\n  onBeforeClick: PropTypes.func,\n\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.defaultProps = {\n  tabIndex: 0,\n  expanded: false,\n  tileMaxHeight: 0,\n  tilePadding: 0,\n  onBeforeClick: function onBeforeClick() {\n    return true;\n  },\n  onClick: function onClick() {},\n  tileCollapsedIconText: 'Interact to expand Tile',\n  tileExpandedIconText: 'Interact to collapse Tile'\n};\nExpandableTile.displayName = 'ExpandableTile';\nexport var TileAboveTheFoldContent = /*#__PURE__*/React.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  var children = _ref5.children;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__above-the-fold\")\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nexport var TileBelowTheFoldContent = /*#__PURE__*/React.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  var children = _ref6.children;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__below-the-fold\")\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/Tile/next/Tile.js"],"names":["_slicedToArray","_extends","_defineProperty","_objectWithoutProperties","_excluded","_excluded2","_excluded3","_excluded4","React","useEffect","useRef","useState","PropTypes","cx","Checkbox16","CheckboxCheckedFilled16","ChevronDown16","Link","keys","matches","deprecate","composeEventHandlers","usePrefix","useIsomorphicEffect","Tile","forwardRef","_ref","ref","children","className","_ref$light","light","rest","prefix","tileClasses","concat","createElement","displayName","propTypes","node","string","bool","ClickableTile","_ref2","_cx2","_ref2$clicked","clicked","handleClick","handleKeyDown","href","_ref2$light","_ref2$onClick","onClick","_ref2$onKeyDown","onKeyDown","classes","_useState","_useState2","isSelected","setIsSelected","clickHandler","keyDownHandler","handleOnClick","evt","persist","handleOnKeyDown","Enter","Space","preventDefault","func","rel","SelectableTile","_ref3","_cx3","disabled","iconDescription","id","_ref3$light","name","_ref3$onClick","_ref3$onChange","onChange","_ref3$onKeyDown","_ref3$selected","selected","_ref3$tabIndex","tabIndex","_ref3$title","title","_ref3$value","value","_useState3","_useState4","_useState5","_useState6","prevSelected","setPrevSelected","inputClasses","handleChange","event","target","checked","Fragment","type","htmlFor","number","oneOfType","isRequired","ExpandableTile","_ref4","_cx5","expanded","tileMaxHeight","tilePadding","onKeyUp","tileCollapsedIconText","tileExpandedIconText","tileCollapsedLabel","tileExpandedLabel","onBeforeClick","_useState7","_useState8","isTileMaxHeight","setIsTileMaxHeight","_useState9","_useState10","isTilePadding","setIsTilePadding","_useState11","_useState12","prevExpanded","setPrevExpanded","_useState13","_useState14","prevTileMaxHeight","setPrevTileMaxHeight","_useState15","_useState16","prevTilePadding","setPrevTilePadding","_useState17","_useState18","isExpanded","setIsExpanded","aboveTheFold","tileContent","tile","setMaxHeight","current","getBoundingClientRect","height","tagName","handleKeyUp","getChildren","Children","toArray","tileStyle","maxHeight","childrenAsArray","getStyle","window","getComputedStyle","_node$getBoundingClie","paddingTop","parseInt","getPropertyValue","paddingBottom","resizeObserver","ResizeObserver","entries","_entries","contentRect","observe","disconnect","style","defaultProps","TileAboveTheFoldContent","TilAboveTheFoldContent","_ref5","TileBelowTheFoldContent","_ref6"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"light\"],\n    _excluded2 = [\"children\", \"className\", \"clicked\", \"handleClick\", \"handleKeyDown\", \"href\", \"light\", \"onClick\", \"onKeyDown\"],\n    _excluded3 = [\"children\", \"className\", \"disabled\", \"handleClick\", \"handleKeyDown\", \"iconDescription\", \"id\", \"light\", \"name\", \"onClick\", \"onChange\", \"onKeyDown\", \"selected\", \"tabIndex\", \"title\", \"value\"],\n    _excluded4 = [\"tabIndex\", \"className\", \"children\", \"expanded\", \"tileMaxHeight\", \"tilePadding\", \"onClick\", \"onKeyUp\", \"tileCollapsedIconText\", \"tileExpandedIconText\", \"tileCollapsedLabel\", \"tileExpandedLabel\", \"onBeforeClick\", \"light\"];\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Checkbox16, CheckboxCheckedFilled16, ChevronDown16 } from '@carbon/icons-react';\nimport Link from '../../Link';\nimport { keys, matches } from '../../../internal/keyboard';\nimport deprecate from '../../../prop-types/deprecate';\nimport { composeEventHandlers } from '../../../tools/events';\nimport { usePrefix } from '../../../internal/usePrefix';\nimport useIsomorphicEffect from '../../../internal/useIsomorphicEffect';\nexport var Tile = /*#__PURE__*/React.forwardRef(function Tile(_ref, ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$light = _ref.light,\n      light = _ref$light === void 0 ? false : _ref$light,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var tileClasses = cx(\"\".concat(prefix, \"--tile\"), _defineProperty({}, \"\".concat(prefix, \"--tile--light\"), light), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.')\n};\nexport var ClickableTile = /*#__PURE__*/React.forwardRef(function ClickableTile(_ref2, ref) {\n  var _cx2;\n\n  var children = _ref2.children,\n      className = _ref2.className,\n      _ref2$clicked = _ref2.clicked,\n      clicked = _ref2$clicked === void 0 ? false : _ref2$clicked,\n      handleClick = _ref2.handleClick,\n      handleKeyDown = _ref2.handleKeyDown,\n      href = _ref2.href,\n      _ref2$light = _ref2.light,\n      light = _ref2$light === void 0 ? false : _ref2$light,\n      _ref2$onClick = _ref2.onClick,\n      onClick = _ref2$onClick === void 0 ? function () {} : _ref2$onClick,\n      _ref2$onKeyDown = _ref2.onKeyDown,\n      onKeyDown = _ref2$onKeyDown === void 0 ? function () {} : _ref2$onKeyDown,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var prefix = usePrefix();\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--clickable\"), (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--tile--is-clicked\"), clicked), _defineProperty(_cx2, \"\".concat(prefix, \"--tile--light\"), light), _cx2), className);\n\n  var _useState = useState(clicked),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setIsSelected = _useState2[1]; // TODO: replace with onClick when handleClick prop is deprecated\n\n\n  var clickHandler = handleClick || onClick; // TODO: replace with onClick when handleClick prop is deprecated\n\n  var keyDownHandler = handleKeyDown || onKeyDown;\n\n  function handleOnClick(evt) {\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n  }\n\n  function handleOnKeyDown(evt) {\n    evt.persist();\n\n    if (matches(evt, [keys.Enter, keys.Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      keyDownHandler(evt);\n    }\n\n    keyDownHandler(evt);\n  }\n\n  return /*#__PURE__*/React.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    ref: ref\n  }, rest), children);\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n\n  /**\n   * Deprecated in v11. Use 'onClick' instead.\n   */\n  handleClick: deprecate(PropTypes.func, 'The handleClick prop for ClickableTile has been deprecated in favor of onClick. It will be removed in the next major release.'),\n\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  handleKeyDown: deprecate(PropTypes.func, 'The handleKeyDown prop for ClickableTile has been deprecated in favor of onKeyDown. It will be removed in the next major release.'),\n\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string\n};\nexport var SelectableTile = /*#__PURE__*/React.forwardRef(function SelectableTile(_ref3, ref) {\n  var _cx3;\n\n  var children = _ref3.children,\n      className = _ref3.className,\n      disabled = _ref3.disabled,\n      handleClick = _ref3.handleClick,\n      handleKeyDown = _ref3.handleKeyDown,\n      iconDescription = _ref3.iconDescription,\n      id = _ref3.id,\n      _ref3$light = _ref3.light,\n      light = _ref3$light === void 0 ? false : _ref3$light,\n      name = _ref3.name,\n      _ref3$onClick = _ref3.onClick,\n      onClick = _ref3$onClick === void 0 ? function () {} : _ref3$onClick,\n      _ref3$onChange = _ref3.onChange,\n      onChange = _ref3$onChange === void 0 ? function () {} : _ref3$onChange,\n      _ref3$onKeyDown = _ref3.onKeyDown,\n      onKeyDown = _ref3$onKeyDown === void 0 ? function () {} : _ref3$onKeyDown,\n      _ref3$selected = _ref3.selected,\n      selected = _ref3$selected === void 0 ? false : _ref3$selected,\n      _ref3$tabIndex = _ref3.tabIndex,\n      tabIndex = _ref3$tabIndex === void 0 ? 0 : _ref3$tabIndex,\n      _ref3$title = _ref3.title,\n      title = _ref3$title === void 0 ? 'title' : _ref3$title,\n      _ref3$value = _ref3.value,\n      value = _ref3$value === void 0 ? 'value' : _ref3$value,\n      rest = _objectWithoutProperties(_ref3, _excluded3);\n\n  var prefix = usePrefix(); // TODO: replace with onClick when handleClick prop is deprecated\n\n  var clickHandler = handleClick || onClick; // TODO: replace with onKeyDown when handleKeyDown prop is deprecated\n\n  var keyDownHandler = handleKeyDown || onKeyDown;\n\n  var _useState3 = useState(selected),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSelected = _useState4[0],\n      setIsSelected = _useState4[1];\n\n  var _useState5 = useState(selected),\n      _useState6 = _slicedToArray(_useState5, 2),\n      prevSelected = _useState6[0],\n      setPrevSelected = _useState6[1];\n\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--selectable\"), (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--tile--is-selected\"), isSelected), _defineProperty(_cx3, \"\".concat(prefix, \"--tile--light\"), light), _defineProperty(_cx3, \"\".concat(prefix, \"--tile--disabled\"), disabled), _cx3), className);\n  var inputClasses = cx(\"\".concat(prefix, \"--tile-input\"), _defineProperty({}, \"\".concat(prefix, \"--tile-input--checked\"), isSelected)); // TODO: rename to handleClick when handleClick prop is deprecated\n\n  function handleOnClick(evt) {\n    evt.preventDefault();\n    evt.persist();\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt);\n  } // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n\n\n  function handleOnKeyDown(evt) {\n    evt.persist();\n\n    if (matches(evt, [keys.Enter, keys.Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt);\n    }\n\n    keyDownHandler(evt);\n  }\n\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event);\n  }\n\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    checked: isSelected,\n    className: inputClasses,\n    disabled: disabled,\n    id: id,\n    name: name,\n    onChange: !disabled ? handleChange : null,\n    ref: ref,\n    tabIndex: -1,\n    title: title,\n    type: \"checkbox\",\n    value: value\n  }), /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: classes,\n    htmlFor: id,\n    onClick: !disabled ? handleOnClick : null,\n    onKeyDown: !disabled ? handleOnKeyDown : null // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    ,\n    tabIndex: !disabled ? tabIndex : null\n  }, rest), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile__checkmark \").concat(prefix, \"--tile__checkmark--persistent\")\n  }, isSelected ? /*#__PURE__*/React.createElement(CheckboxCheckedFilled16, null) : /*#__PURE__*/React.createElement(Checkbox16, null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, children)));\n});\nSelectableTile.displayName = 'SelectableTile';\nSelectableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  handleClick: deprecate(PropTypes.func, 'The `handleClick` prop for `SelectableTile` has been deprecated in favor of `onClick`. It will be removed in the next major release.'),\n\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  handleKeyDown: deprecate(PropTypes.func, 'The `handleKeyDown` prop for `SelectableTile` has been deprecated in favor of `onKeyDown`. It will be removed in the next major release.'),\n\n  /**\n   * The description of the checkmark icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop for `SelectableTile` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.'),\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n\n  /**\n   * The `name` of the `<input>`.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The value of the `<input>`.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nexport function ExpandableTile(_ref4) {\n  var _cx5;\n\n  var tabIndex = _ref4.tabIndex,\n      className = _ref4.className,\n      children = _ref4.children,\n      expanded = _ref4.expanded,\n      tileMaxHeight = _ref4.tileMaxHeight,\n      tilePadding = _ref4.tilePadding,\n      onClick = _ref4.onClick,\n      onKeyUp = _ref4.onKeyUp,\n      tileCollapsedIconText = _ref4.tileCollapsedIconText,\n      tileExpandedIconText = _ref4.tileExpandedIconText,\n      tileCollapsedLabel = _ref4.tileCollapsedLabel,\n      tileExpandedLabel = _ref4.tileExpandedLabel,\n      onBeforeClick = _ref4.onBeforeClick,\n      light = _ref4.light,\n      rest = _objectWithoutProperties(_ref4, _excluded4);\n\n  var _useState7 = useState(tileMaxHeight),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isTileMaxHeight = _useState8[0],\n      setIsTileMaxHeight = _useState8[1];\n\n  var _useState9 = useState(tilePadding),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isTilePadding = _useState10[0],\n      setIsTilePadding = _useState10[1];\n\n  var _useState11 = useState(expanded),\n      _useState12 = _slicedToArray(_useState11, 2),\n      prevExpanded = _useState12[0],\n      setPrevExpanded = _useState12[1];\n\n  var _useState13 = useState(tileMaxHeight),\n      _useState14 = _slicedToArray(_useState13, 2),\n      prevTileMaxHeight = _useState14[0],\n      setPrevTileMaxHeight = _useState14[1];\n\n  var _useState15 = useState(tilePadding),\n      _useState16 = _slicedToArray(_useState15, 2),\n      prevTilePadding = _useState16[0],\n      setPrevTilePadding = _useState16[1];\n\n  var _useState17 = useState(expanded),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isExpanded = _useState18[0],\n      setIsExpanded = _useState18[1];\n\n  var aboveTheFold = useRef(null);\n  var tileContent = useRef(null);\n  var tile = useRef(null);\n  var prefix = usePrefix();\n\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n\n  function setMaxHeight() {\n    if (isExpanded) {\n      setIsTileMaxHeight(tileContent.current.getBoundingClientRect().height);\n    }\n\n    setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n  }\n\n  function handleClick(evt) {\n    if (!onBeforeClick(evt) || evt.target.tagName === 'INPUT') {\n      return;\n    }\n\n    evt.persist();\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n\n    if (onClick) {\n      onClick(evt);\n    }\n  }\n\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current) {\n      if (matches(evt, [keys.Enter, keys.Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n\n  function getChildren() {\n    return React.Children.toArray(children);\n  }\n\n  var classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--expandable\"), (_cx5 = {}, _defineProperty(_cx5, \"\".concat(prefix, \"--tile--is-expanded\"), isExpanded), _defineProperty(_cx5, \"\".concat(prefix, \"--tile--light\"), light), _cx5), className);\n  var tileStyle = {\n    maxHeight: isExpanded ? null : isTileMaxHeight + isTilePadding\n  };\n  var childrenAsArray = getChildren();\n  useIsomorphicEffect(function () {\n    var getStyle = window.getComputedStyle(tile.current, null);\n    var node = aboveTheFold.current;\n\n    var _node$getBoundingClie = node.getBoundingClientRect(),\n        height = _node$getBoundingClie.height;\n\n    var paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    var paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, []);\n  useEffect(function () {\n    var resizeObserver = new ResizeObserver(function (entries) {\n      var _entries = _slicedToArray(entries, 1),\n          aboveTheFold = _entries[0];\n\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return function () {\n      return resizeObserver.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\",\n    ref: tile,\n    style: tileStyle,\n    className: classes,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[0]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tile__chevron\")\n  }, /*#__PURE__*/React.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), /*#__PURE__*/React.createElement(ChevronDown16, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[1])));\n}\nExpandableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n\n  /**\n   * optional handler to decide whether to ignore a click. returns false if click should be ignored\n   */\n  onBeforeClick: PropTypes.func,\n\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.defaultProps = {\n  tabIndex: 0,\n  expanded: false,\n  tileMaxHeight: 0,\n  tilePadding: 0,\n  onBeforeClick: function onBeforeClick() {\n    return true;\n  },\n  onClick: function onClick() {},\n  tileCollapsedIconText: 'Interact to expand Tile',\n  tileExpandedIconText: 'Interact to collapse Tile'\n};\nExpandableTile.displayName = 'ExpandableTile';\nexport var TileAboveTheFoldContent = /*#__PURE__*/React.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  var children = _ref5.children;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__above-the-fold\")\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nexport var TileBelowTheFoldContent = /*#__PURE__*/React.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  var children = _ref6.children;\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__below-the-fold\")\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';"]},"metadata":{},"sourceType":"module"}