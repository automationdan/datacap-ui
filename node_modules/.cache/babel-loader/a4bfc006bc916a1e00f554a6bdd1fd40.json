{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkmark16 } from '@carbon/icons-react';\nimport MenuOption from './MenuOption';\n\nfunction MenuSelectableItem(_ref) {\n  var label = _ref.label,\n      initialChecked = _ref.initialChecked,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n\n  var _useState = useState(initialChecked),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  function handleClick() {\n    setChecked(!checked);\n    onChange(!checked);\n  }\n\n  return /*#__PURE__*/React.createElement(MenuOption, {\n    role: \"menuitemcheckbox\",\n    \"aria-checked\": checked,\n    renderIcon: checked ? Checkmark16 : null,\n    label: label,\n    indented: true,\n    onClick: handleClick\n  });\n}\n\nMenuSelectableItem.propTypes = {\n  /**\n   * Whether the option should be checked by default\n   */\n  initialChecked: PropTypes.bool,\n\n  /**\n   * Rendered label for the MenuOptionContent\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Callback function when selection the has been changed\n   */\n  onChange: PropTypes.func\n};\nexport default MenuSelectableItem;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/Menu/MenuSelectableItem.js"],"names":["_slicedToArray","React","useState","PropTypes","Checkmark16","MenuOption","MenuSelectableItem","_ref","label","initialChecked","_ref$onChange","onChange","_useState","_useState2","checked","setChecked","handleClick","createElement","role","renderIcon","indented","onClick","propTypes","bool","node","isRequired","func"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,cAAc,GAAGF,IAAI,CAACE,cAD1B;AAAA,MAEIC,aAAa,GAAGH,IAAI,CAACI,QAFzB;AAAA,MAGIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,YAAY,CAAE,CAAzC,GAA4CA,aAH3D;;AAKA,MAAIE,SAAS,GAAGV,QAAQ,CAACO,cAAD,CAAxB;AAAA,MACII,UAAU,GAAGb,cAAc,CAACY,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,OAAO,GAAGD,UAAU,CAAC,CAAD,CAFxB;AAAA,MAGIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAH3B;;AAKA,WAASG,WAAT,GAAuB;AACrBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAH,IAAAA,QAAQ,CAAC,CAACG,OAAF,CAAR;AACD;;AAED,SAAO,aAAab,KAAK,CAACgB,aAAN,CAAoBZ,UAApB,EAAgC;AAClDa,IAAAA,IAAI,EAAE,kBAD4C;AAElD,oBAAgBJ,OAFkC;AAGlDK,IAAAA,UAAU,EAAEL,OAAO,GAAGV,WAAH,GAAiB,IAHc;AAIlDI,IAAAA,KAAK,EAAEA,KAJ2C;AAKlDY,IAAAA,QAAQ,EAAE,IALwC;AAMlDC,IAAAA,OAAO,EAAEL;AANyC,GAAhC,CAApB;AAQD;;AAEDV,kBAAkB,CAACgB,SAAnB,GAA+B;AAC7B;AACF;AACA;AACEb,EAAAA,cAAc,EAAEN,SAAS,CAACoB,IAJG;;AAM7B;AACF;AACA;AACEf,EAAAA,KAAK,EAAEL,SAAS,CAACqB,IAAV,CAAeC,UATO;;AAW7B;AACF;AACA;AACEd,EAAAA,QAAQ,EAAER,SAAS,CAACuB;AAdS,CAA/B;AAgBA,eAAepB,kBAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkmark16 } from '@carbon/icons-react';\nimport MenuOption from './MenuOption';\n\nfunction MenuSelectableItem(_ref) {\n  var label = _ref.label,\n      initialChecked = _ref.initialChecked,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n\n  var _useState = useState(initialChecked),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  function handleClick() {\n    setChecked(!checked);\n    onChange(!checked);\n  }\n\n  return /*#__PURE__*/React.createElement(MenuOption, {\n    role: \"menuitemcheckbox\",\n    \"aria-checked\": checked,\n    renderIcon: checked ? Checkmark16 : null,\n    label: label,\n    indented: true,\n    onClick: handleClick\n  });\n}\n\nMenuSelectableItem.propTypes = {\n  /**\n   * Whether the option should be checked by default\n   */\n  initialChecked: PropTypes.bool,\n\n  /**\n   * Rendered label for the MenuOptionContent\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Callback function when selection the has been changed\n   */\n  onChange: PropTypes.func\n};\nexport default MenuSelectableItem;"]},"metadata":{},"sourceType":"module"}