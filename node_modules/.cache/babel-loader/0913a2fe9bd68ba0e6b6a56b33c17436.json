{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"success\", \"status\", \"iconDescription\", \"description\", \"onSuccess\", \"successDelay\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { CheckmarkFilled16, ErrorFilled16 } from '@carbon/icons-react';\nimport deprecate from '../../prop-types/deprecate';\nimport Loading from '../Loading';\nimport { usePrefix } from '../../internal/usePrefix';\nexport default function InlineLoading(_ref) {\n  var className = _ref.className,\n      success = _ref.success,\n      _ref$status = _ref.status,\n      status = _ref$status === void 0 ? success ? 'finished' : 'active' : _ref$status,\n      iconDescription = _ref.iconDescription,\n      description = _ref.description,\n      onSuccess = _ref.onSuccess,\n      successDelay = _ref.successDelay,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var loadingClasses = classNames(\"\".concat(prefix, \"--inline-loading\"), className);\n\n  var getLoading = function getLoading() {\n    if (status === 'error') {\n      return /*#__PURE__*/React.createElement(ErrorFilled16, {\n        className: \"\".concat(prefix, \"--inline-loading--error\")\n      }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n    }\n\n    if (status === 'finished') {\n      setTimeout(function () {\n        if (onSuccess) {\n          onSuccess();\n        }\n      }, successDelay);\n      return /*#__PURE__*/React.createElement(CheckmarkFilled16, {\n        className: \"\".concat(prefix, \"--inline-loading__checkmark-container\")\n      }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n    }\n\n    if (status === 'inactive' || status === 'active') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        small: true,\n        description: iconDescription,\n        withOverlay: false,\n        active: status === 'active'\n      });\n    }\n\n    return undefined;\n  };\n\n  var loadingText = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__text\")\n  }, description);\n  var loading = getLoading();\n  var loadingAnimation = loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__animation\")\n  }, loading);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: loadingClasses\n  }, other, {\n    \"aria-live\": 'assertive' || other['aria-live']\n  }), loadingAnimation, description && loadingText);\n}\nInlineLoading.propTypes = {\n  /**\n   * Specify a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the description for the inline loading text\n   */\n  description: PropTypes.node,\n\n  /**\n   * Specify the description for the inline loading text\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Provide an optional handler to be invoked when <InlineLoading> is\n   * successful\n   */\n  onSuccess: PropTypes.func,\n\n  /**\n   * Specify the loading status\n   */\n  status: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n\n  /**\n   * Specify whether the load was successful\n   */\n  success: deprecate(PropTypes.bool, \"\\nThe prop `success` for InlineLoading has been deprecated in favor of `status`. Please use `status=\\\"finished\\\"` instead.\"),\n\n  /**\n   * Provide a delay for the `setTimeout` for success\n   */\n  successDelay: PropTypes.number\n};\nInlineLoading.defaultProps = {\n  successDelay: 1500\n};","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/InlineLoading/InlineLoading.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","PropTypes","classNames","CheckmarkFilled16","ErrorFilled16","deprecate","Loading","usePrefix","InlineLoading","_ref","className","success","_ref$status","status","iconDescription","description","onSuccess","successDelay","other","prefix","loadingClasses","concat","getLoading","createElement","setTimeout","small","withOverlay","active","undefined","loadingText","loading","loadingAnimation","propTypes","string","node","func","oneOf","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"success\", \"status\", \"iconDescription\", \"description\", \"onSuccess\", \"successDelay\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { CheckmarkFilled16, ErrorFilled16 } from '@carbon/icons-react';\nimport deprecate from '../../prop-types/deprecate';\nimport Loading from '../Loading';\nimport { usePrefix } from '../../internal/usePrefix';\nexport default function InlineLoading(_ref) {\n  var className = _ref.className,\n      success = _ref.success,\n      _ref$status = _ref.status,\n      status = _ref$status === void 0 ? success ? 'finished' : 'active' : _ref$status,\n      iconDescription = _ref.iconDescription,\n      description = _ref.description,\n      onSuccess = _ref.onSuccess,\n      successDelay = _ref.successDelay,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var loadingClasses = classNames(\"\".concat(prefix, \"--inline-loading\"), className);\n\n  var getLoading = function getLoading() {\n    if (status === 'error') {\n      return /*#__PURE__*/React.createElement(ErrorFilled16, {\n        className: \"\".concat(prefix, \"--inline-loading--error\")\n      }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n    }\n\n    if (status === 'finished') {\n      setTimeout(function () {\n        if (onSuccess) {\n          onSuccess();\n        }\n      }, successDelay);\n      return /*#__PURE__*/React.createElement(CheckmarkFilled16, {\n        className: \"\".concat(prefix, \"--inline-loading__checkmark-container\")\n      }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n    }\n\n    if (status === 'inactive' || status === 'active') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        small: true,\n        description: iconDescription,\n        withOverlay: false,\n        active: status === 'active'\n      });\n    }\n\n    return undefined;\n  };\n\n  var loadingText = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__text\")\n  }, description);\n  var loading = getLoading();\n  var loadingAnimation = loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__animation\")\n  }, loading);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: loadingClasses\n  }, other, {\n    \"aria-live\": 'assertive' || other['aria-live']\n  }), loadingAnimation, description && loadingText);\n}\nInlineLoading.propTypes = {\n  /**\n   * Specify a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the description for the inline loading text\n   */\n  description: PropTypes.node,\n\n  /**\n   * Specify the description for the inline loading text\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Provide an optional handler to be invoked when <InlineLoading> is\n   * successful\n   */\n  onSuccess: PropTypes.func,\n\n  /**\n   * Specify the loading status\n   */\n  status: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n\n  /**\n   * Specify whether the load was successful\n   */\n  success: deprecate(PropTypes.bool, \"\\nThe prop `success` for InlineLoading has been deprecated in favor of `status`. Please use `status=\\\"finished\\\"` instead.\"),\n\n  /**\n   * Provide a delay for the `setTimeout` for success\n   */\n  successDelay: PropTypes.number\n};\nInlineLoading.defaultProps = {\n  successDelay: 1500\n};"]},"metadata":{},"sourceType":"module"}