{"ast":null,"code":"import _classCallCheck from\"/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import http from\"../http-common\";var UploadFilesService=/*#__PURE__*/function(){function UploadFilesService(){_classCallCheck(this,UploadFilesService);}_createClass(UploadFilesService,[{key:\"upload\",value:function upload(file,page,onUploadProgress){var formData=new FormData();formData.append(\"uploadFile\",file);return http.post(\"/uploadAndPrepare/\"+page,formData,{headers:{\"Content-Type\":\"multipart/form-data\"},onUploadProgress:onUploadProgress});}},{key:\"executeRules\",value:function executeRules(transactionalId,application,workflow,rules,onUploadProgress){var formData=new FormData();var url=\"/executeRules/\"+transactionalId+\"/\"+application+\"/\"+workflow+\"/\"+rules+\"/xml\";console.log(url);return http.post(url,formData,{headers:{\"Content-Type\":\"multipart/form-data\"},onUploadProgress:onUploadProgress});}},{key:\"getFiles\",value:function getFiles(){return http.get(\"/files\");}}]);return UploadFilesService;}();export default new UploadFilesService();","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/src/services/upload-files.service.js"],"names":["http","UploadFilesService","file","page","onUploadProgress","formData","FormData","append","post","headers","transactionalId","application","workflow","rules","url","console","log","get"],"mappings":"0XAAA,MAAOA,CAAAA,IAAP,KAAiB,gBAAjB,C,GAEMC,CAAAA,kB,sJACJ,gBAAOC,IAAP,CAAYC,IAAZ,CAAkBC,gBAAlB,CAAoC,CAClC,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAf,CAEAD,QAAQ,CAACE,MAAT,CAAgB,YAAhB,CAA8BL,IAA9B,EAEA,MAAOF,CAAAA,IAAI,CAACQ,IAAL,CAAU,qBAAuBL,IAAjC,CAAuCE,QAAvC,CAAiD,CACtDI,OAAO,CAAE,CACP,eAAgB,qBADT,CAD6C,CAItDL,gBAAgB,CAAhBA,gBAJsD,CAAjD,CAAP,CAMD,C,4BAED,sBAAaM,eAAb,CAA6BC,WAA7B,CAA0CC,QAA1C,CAAoDC,KAApD,CAA2DT,gBAA3D,CAA6E,CAC3E,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAf,CAEA,GAAIQ,CAAAA,GAAG,CAAG,iBAAmBJ,eAAnB,CAAqC,GAArC,CAA2CC,WAA3C,CAAyD,GAAzD,CAA6DC,QAA7D,CAAuE,GAAvE,CAA2EC,KAA3E,CAAiF,MAA3F,CACAE,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAEA,MAAOd,CAAAA,IAAI,CAACQ,IAAL,CAAUM,GAAV,CAAeT,QAAf,CAAyB,CAC9BI,OAAO,CAAE,CACP,eAAgB,qBADT,CADqB,CAI9BL,gBAAgB,CAAhBA,gBAJ8B,CAAzB,CAAP,CAMD,C,wBAED,mBAAW,CACT,MAAOJ,CAAAA,IAAI,CAACiB,GAAL,CAAS,QAAT,CAAP,CACD,C,kCAGH,cAAe,IAAIhB,CAAAA,kBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass UploadFilesService {\n  upload(file,page, onUploadProgress) {\n    let formData = new FormData();\n\n    formData.append(\"uploadFile\", file);\n\n    return http.post(\"/uploadAndPrepare/\" + page, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  executeRules(transactionalId,application, workflow, rules, onUploadProgress) {\n    let formData = new FormData();\n\n    let url = \"/executeRules/\" + transactionalId + \"/\" + application + \"/\"+workflow +\"/\"+rules+\"/xml\"\n    console.log(url)\n\n    return http.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new UploadFilesService();\n"]},"metadata":{},"sourceType":"module"}