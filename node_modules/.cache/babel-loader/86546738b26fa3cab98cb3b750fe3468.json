{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/Icon/Icon.js"],"names":["_defineProperty","_objectWithoutProperties","_extends","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","invariant","PropTypes","React","icons","iconsList","findIcon","name","iconsObj","undefined","icon","obj","Error","setIconsList","list","getSvgData","iconName","svgData","svgShapes","svgElements","map","svgProp","data","circle","index","circleProps","cx","cy","r","concat","createElement","path","d","polygon","points","isPrefixed","process","env","NODE_ENV","split","Icon","_ref","className","iconTitle","description","fill","fillRule","height","role","style","width","iconRef","other","props","viewBox","ref","svgContent","propTypes","string","isRequired","shape","func","defaultProps"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"]},"metadata":{},"sourceType":"module"}