{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useEffect, useRef, useState } from 'react';\nimport { warning } from './warning';\nexport function useControllableState(controlledState, controlledSetState, defaultValue) {\n  var controlled = useRef(controlledState !== undefined);\n\n  var _useState = useState(function () {\n    if (controlled.current === true) {\n      return controlledState;\n    }\n\n    return defaultValue;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      internalSetState = _useState2[1]; // If the owner is controlling the component prop value, keep the controlled\n  // state value and the internal state value in sync.\n  //\n  // We guard on `undefined` to prevent downstream breakage of controlled\n  // components (like <input>). When the controlled state switches to\n  // `undefined`, we are moving from controlled to uncontrolled.\n\n\n  if (controlled.current === true && controlledState !== state && controlledState !== undefined) {\n    internalSetState(controlledState);\n  }\n\n  function setState(stateOrUpdater) {\n    if (controlled.current === true) {\n      controlledSetState(stateOrUpdater);\n    } else {\n      internalSetState(stateOrUpdater);\n    }\n  }\n\n  useEffect(function () {\n    // Uncontrolled -> Controlled\n    // If the component prop is uncontrolled, the prop value should be undefined\n    if (controlled.current === false && controlledState !== undefined) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing an uncontrolled component to be controlled. ' + 'This is likely caused by the value changing to a defined value ' + 'from undefined. Decide between using a controlled or uncontrolled ' + 'value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components') : void 0;\n    } // Controlled -> Uncontrolled\n    // If the component prop is controlled, the prop value should be defined\n\n\n    if (controlled.current === true && controlledState === undefined) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing a controlled component to be uncontrolled. ' + 'This is likely caused by the value changing to an undefined value ' + 'from a defined one. Decide between using a controlled or ' + 'uncontrolled value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components') : void 0;\n    }\n  }, [controlledState]);\n  return [state, setState];\n}","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/internal/useControllableState.js"],"names":["_slicedToArray","useEffect","useRef","useState","warning","useControllableState","controlledState","controlledSetState","defaultValue","controlled","undefined","_useState","current","_useState2","state","internalSetState","setState","stateOrUpdater","process","env","NODE_ENV"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,SAASC,oBAAT,CAA8BC,eAA9B,EAA+CC,kBAA/C,EAAmEC,YAAnE,EAAiF;AACtF,MAAIC,UAAU,GAAGP,MAAM,CAACI,eAAe,KAAKI,SAArB,CAAvB;;AAEA,MAAIC,SAAS,GAAGR,QAAQ,CAAC,YAAY;AACnC,QAAIM,UAAU,CAACG,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,aAAON,eAAP;AACD;;AAED,WAAOE,YAAP;AACD,GANuB,CAAxB;AAAA,MAOIK,UAAU,GAAGb,cAAc,CAACW,SAAD,EAAY,CAAZ,CAP/B;AAAA,MAQIG,KAAK,GAAGD,UAAU,CAAC,CAAD,CARtB;AAAA,MASIE,gBAAgB,GAAGF,UAAU,CAAC,CAAD,CATjC,CAHsF,CAYhD;AACtC;AACA;AACA;AACA;AACA;;;AAGA,MAAIJ,UAAU,CAACG,OAAX,KAAuB,IAAvB,IAA+BN,eAAe,KAAKQ,KAAnD,IAA4DR,eAAe,KAAKI,SAApF,EAA+F;AAC7FK,IAAAA,gBAAgB,CAACT,eAAD,CAAhB;AACD;;AAED,WAASU,QAAT,CAAkBC,cAAlB,EAAkC;AAChC,QAAIR,UAAU,CAACG,OAAX,KAAuB,IAA3B,EAAiC;AAC/BL,MAAAA,kBAAkB,CAACU,cAAD,CAAlB;AACD,KAFD,MAEO;AACLF,MAAAA,gBAAgB,CAACE,cAAD,CAAhB;AACD;AACF;;AAEDhB,EAAAA,SAAS,CAAC,YAAY;AACpB;AACA;AACA,QAAIQ,UAAU,CAACG,OAAX,KAAuB,KAAvB,IAAgCN,eAAe,KAAKI,SAAxD,EAAmE;AACjEQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChB,OAAO,CAAC,KAAD,EAAQ,yEAAyE,iEAAzE,GAA6I,oEAA7I,GAAoN,2CAApN,GAAkQ,2DAA1Q,CAA/C,GAAwX,KAAK,CAA7X;AACD,KALmB,CAKlB;AACF;;;AAGA,QAAIK,UAAU,CAACG,OAAX,KAAuB,IAAvB,IAA+BN,eAAe,KAAKI,SAAvD,EAAkE;AAChEQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChB,OAAO,CAAC,KAAD,EAAQ,wEAAwE,oEAAxE,GAA+I,2DAA/I,GAA6M,wDAA7M,GAAwQ,2DAAhR,CAA/C,GAA8X,KAAK,CAAnY;AACD;AACF,GAZQ,EAYN,CAACE,eAAD,CAZM,CAAT;AAaA,SAAO,CAACQ,KAAD,EAAQE,QAAR,CAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useEffect, useRef, useState } from 'react';\nimport { warning } from './warning';\nexport function useControllableState(controlledState, controlledSetState, defaultValue) {\n  var controlled = useRef(controlledState !== undefined);\n\n  var _useState = useState(function () {\n    if (controlled.current === true) {\n      return controlledState;\n    }\n\n    return defaultValue;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      internalSetState = _useState2[1]; // If the owner is controlling the component prop value, keep the controlled\n  // state value and the internal state value in sync.\n  //\n  // We guard on `undefined` to prevent downstream breakage of controlled\n  // components (like <input>). When the controlled state switches to\n  // `undefined`, we are moving from controlled to uncontrolled.\n\n\n  if (controlled.current === true && controlledState !== state && controlledState !== undefined) {\n    internalSetState(controlledState);\n  }\n\n  function setState(stateOrUpdater) {\n    if (controlled.current === true) {\n      controlledSetState(stateOrUpdater);\n    } else {\n      internalSetState(stateOrUpdater);\n    }\n  }\n\n  useEffect(function () {\n    // Uncontrolled -> Controlled\n    // If the component prop is uncontrolled, the prop value should be undefined\n    if (controlled.current === false && controlledState !== undefined) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing an uncontrolled component to be controlled. ' + 'This is likely caused by the value changing to a defined value ' + 'from undefined. Decide between using a controlled or uncontrolled ' + 'value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components') : void 0;\n    } // Controlled -> Uncontrolled\n    // If the component prop is controlled, the prop value should be defined\n\n\n    if (controlled.current === true && controlledState === undefined) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'A component is changing a controlled component to be uncontrolled. ' + 'This is likely caused by the value changing to an undefined value ' + 'from a defined one. Decide between using a controlled or ' + 'uncontrolled value for the lifetime of the component. ' + 'More info: https://reactjs.org/link/controlled-components') : void 0;\n    }\n  }, [controlledState]);\n  return [state, setState];\n}"]},"metadata":{},"sourceType":"module"}