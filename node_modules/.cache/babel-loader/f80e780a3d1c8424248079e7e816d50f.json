{"ast":null,"code":"var _jsxFileName = \"/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/src/components/DocumentUnderstanding/DocumentUnderstanding.js\";\nimport React, { Component } from \"react\";\nimport UploadService from \"../../services/upload-files.service\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, FileUploaderDropContainer, Breadcrumb, BreadcrumbItem, InlineLoading } from 'carbon-components-react';\nimport ResultsList from './ResultsList';\nimport { Grid, Row, Column } from 'carbon-components-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"Please Upload Your Document\",\n      results: [],\n      docUrls: [{\n        fileData: ''\n      }],\n      fileInfos: [],\n      docUrl: undefined,\n      docStatus: \"Begin\"\n    };\n  }\n\n  selectFile(event) {\n    //console.log(event.target.files)\n    let thepage = this.props.page;\n    /*this.setState({\n      selectedFiles: event.target.files,\n    });*/\n\n    let currentFile = event.target.files[0];\n    UploadService.upload(currentFile, thepage, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      console.log(response.data.transactionalId);\n      var getImagePath = URL.createObjectURL(currentFile);\n      console.log(getImagePath);\n      this.setState({\n        transactionalId: response.data.transactionalId,\n        message: \"Uploaded Document\",\n        docUrl: \"/api/documentunderstanding/getdoc/\" + response.data.transactionalId + \"/pdf\",\n        selectedFiles: event.target.files\n      });\n    });\n  }\n\n  upload() {\n    let application = this.props.application;\n    let workflow = this.props.workflow;\n    let rules = this.props.rules;\n    console.log(\"upload\" + this.state.transactionalId);\n    this.setState({\n      docStatus: \"Processing\"\n    });\n    UploadService.executeRules(this.state.transactionalId, application, workflow, rules, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        results: response.data.values,\n        message: \"Document Processed\",\n        transactionId: response.data.transactionalId,\n        docStatus: \"Done\"\n      });\n      console.log(this.state);\n      return \"stuff\";\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bx--row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\",\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n              \"aria-label\": \"Page navigation\",\n              children: /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  children: [this.props.workflow, \":\", this.props.page, \":\", this.props.application, \":\", this.props.rules]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"landing-page__heading\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bx--row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\",\n            children: /*#__PURE__*/_jsxDEV(FileUploaderDropContainer, {\n              accept: ['.jpg', '.pdf'],\n              onAddFiles: this.selectFile,\n              buttonkind: \"primary\",\n              buttonlabel: \"Add files\",\n              filenamestatus: \"edit\",\n              icondescription: \"Clear file\",\n              labelText: \"Add File to this container\",\n              className: \"bx--file__container\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bx--row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !selectedFiles,\n              onClick: this.upload,\n              children: \"Process Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bx--row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bx--col-lg-12 bx--col-md-6 bx--col-sm-1\",\n            children: [this.state.docStatus === \"Processing\" && /*#__PURE__*/_jsxDEV(InlineLoading, {\n              description: \"Processing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 11\n            }, this), this.state.message === \"Document Processed\" && /*#__PURE__*/_jsxDEV(ResultsList, {\n              results: this.state.results\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bx--col-lg-4 bx--col-md-2 bx--col-sm-1\",\n            children: this.state.docUrl !== undefined && /*#__PURE__*/_jsxDEV(FileViewer, {\n              fileType: \"pdf\",\n              filePath: this.state.docUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/src/components/DocumentUnderstanding/DocumentUnderstanding.js"],"names":["React","Component","UploadService","FileViewer","Button","FileUploaderDropContainer","Breadcrumb","BreadcrumbItem","InlineLoading","ResultsList","Grid","Row","Column","UploadFiles","constructor","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","results","docUrls","fileData","fileInfos","docUrl","docStatus","event","thepage","page","target","files","setState","Math","round","loaded","total","then","response","console","log","data","transactionalId","getImagePath","URL","createObjectURL","application","workflow","rules","executeRules","values","transactionId","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UploadService from \"../../services/upload-files.service\";\nimport FileViewer from 'react-file-viewer';\nimport { Button,FileUploaderDropContainer,Breadcrumb,BreadcrumbItem,InlineLoading } from 'carbon-components-react';\nimport ResultsList from './ResultsList'\nimport { Grid, Row, Column } from 'carbon-components-react';\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"Please Upload Your Document\",\n      results: [],\n      docUrls: [ { fileData: '' } ],\n      fileInfos: [],\n      docUrl: undefined,\n      docStatus: \"Begin\"\n    };\n  }\n\n  selectFile(event) {\n    //console.log(event.target.files)\n    let thepage = this.props.page\n    /*this.setState({\n      selectedFiles: event.target.files,\n    });*/\n    let currentFile = event.target.files[0];\n    UploadService.upload(currentFile,thepage, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    }).then((response) => {\n        console.log(response.data.transactionalId);\n        var getImagePath = URL.createObjectURL(currentFile);\n        console.log(getImagePath);\n        this.setState({\n            transactionalId: response.data.transactionalId,\n            message: \"Uploaded Document\",\n            docUrl: \"/api/documentunderstanding/getdoc/\" + response.data.transactionalId+ \"/pdf\",\n            selectedFiles: event.target.files\n        })\n      })\n\n\n\n\n\n  }\n\n  upload() {\n\n    let application = this.props.application\n    let workflow = this.props.workflow\n    let rules = this.props.rules\n    console.log(\"upload\" + this.state.transactionalId);\n    this.setState({\n      docStatus: \"Processing\",\n    });\n    UploadService.executeRules(this.state.transactionalId,application,workflow,rules,(event) =>{\n        this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    }).then((response)=>{\n      console.log(response.data)\n\n      this.setState({\n        results: response.data.values,\n        message: \"Document Processed\",\n        transactionId: response.data.transactionalId,\n        docStatus: \"Done\"\n      });\n      console.log(this.state);\n      return \"stuff\"\n    })\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n\n\n  render() {\n    const {\n      selectedFiles\n    } = this.state;\n\n    return (\n  <div>\n\n  <Grid>\n    <div className=\"bx--row\">\n      <div className=\"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\">\n      <Breadcrumb aria-label=\"Page navigation\">\n        <BreadcrumbItem>\n          <a href=\"/\">{this.props.workflow}:{this.props.page}:{this.props.application}:{this.props.rules}</a>\n          </BreadcrumbItem>\n          </Breadcrumb>\n        <h1 className=\"landing-page__heading\">{this.state.message}</h1>\n      </div>\n    </div>\n    <div className=\"bx--row\">\n      <div className=\"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\">\n        <FileUploaderDropContainer\n          accept={[\n            '.jpg',\n            '.pdf'\n          ]}\n          onAddFiles={this.selectFile}\n          buttonkind=\"primary\"\n          buttonlabel=\"Add files\"\n          filenamestatus=\"edit\"\n          icondescription=\"Clear file\"\n          labelText=\"Add File to this container\"\n          className=\"bx--file__container\"\n          ></FileUploaderDropContainer>\n\n      </div>\n    </div>\n    <div className=\"bx--row\">\n      <div className=\"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\">\n       <Button disabled={!selectedFiles} onClick={this.upload} >\n         Process Document\n         </Button>\n      </div>\n    </div>\n    <div className=\"bx--row\">\n      <div className=\"bx--col-lg-12 bx--col-md-6 bx--col-sm-1\">\n        {this.state.docStatus===\"Processing\" &&\n          <InlineLoading description=\"Processing...\" />\n        }\n        {this.state.message===\"Document Processed\" &&\n\n          <ResultsList results={this.state.results} />\n\n        }\n      </div>\n      <div className=\"bx--col-lg-4 bx--col-md-2 bx--col-sm-1\">\n      {this.state.docUrl !== undefined  &&\n\n\n       <FileViewer fileType=\"pdf\" filePath={this.state.docUrl} />\n\n      }\n      </div>\n\n\n    </div>\n</Grid>\n\n\n\n\n\n\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}