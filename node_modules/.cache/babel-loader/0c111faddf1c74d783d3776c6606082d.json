{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Create an adapter that converts an object of props with potentially deprecated\n * prop names to the replacement prop names in a newer version. Useful for guarding\n * against breaking changes when a prop has been renamed\n *\n * @param {Array} spec - an array of options which specify a text or regex\n * matcher alongside a replacement if there is a match\n * @returns {Function}\n */\n\nfunction createPropAdapter(spec) {\n  // if props aren't passed in we should default the prop to empty object\n  return function () {\n    var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var output = {};\n    Object.keys(input).forEach(function (key) {\n      var match = spec.find(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            regex = _ref2[0];\n\n        return key.match(regex);\n      });\n\n      if (match) {\n        var _match = _slicedToArray(match, 2),\n            regex = _match[0],\n            replacer = _match[1];\n\n        output[key.replace(regex, replacer)] = input[key];\n        return;\n      }\n\n      output[key] = input[key];\n    });\n    return output;\n  };\n}\n/**\n * TODO: REMOVE IN v11\n * props staring with \"default...\" were changed to \"initial...\" in Downshift v3\n *\n * @see https://github.com/downshift-js/downshift/releases/tag/v3.0.0\n */\n\n\nvar mapDownshiftProps = createPropAdapter([[/^default/g, 'initial']]);\nexport { mapDownshiftProps };","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/tools/createPropAdapter.js"],"names":["_slicedToArray","createPropAdapter","spec","input","arguments","length","undefined","output","Object","keys","forEach","key","match","find","_ref","_ref2","regex","_match","replacer","replace","mapDownshiftProps"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B;AACA,SAAO,YAAY;AACjB,QAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,QAAIG,MAAM,GAAG,EAAb;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,OAAnB,CAA2B,UAAUC,GAAV,EAAe;AACxC,UAAIC,KAAK,GAAGV,IAAI,CAACW,IAAL,CAAU,UAAUC,IAAV,EAAgB;AACpC,YAAIC,KAAK,GAAGf,cAAc,CAACc,IAAD,EAAO,CAAP,CAA1B;AAAA,YACIE,KAAK,GAAGD,KAAK,CAAC,CAAD,CADjB;;AAGA,eAAOJ,GAAG,CAACC,KAAJ,CAAUI,KAAV,CAAP;AACD,OALW,CAAZ;;AAOA,UAAIJ,KAAJ,EAAW;AACT,YAAIK,MAAM,GAAGjB,cAAc,CAACY,KAAD,EAAQ,CAAR,CAA3B;AAAA,YACII,KAAK,GAAGC,MAAM,CAAC,CAAD,CADlB;AAAA,YAEIC,QAAQ,GAAGD,MAAM,CAAC,CAAD,CAFrB;;AAIAV,QAAAA,MAAM,CAACI,GAAG,CAACQ,OAAJ,CAAYH,KAAZ,EAAmBE,QAAnB,CAAD,CAAN,GAAuCf,KAAK,CAACQ,GAAD,CAA5C;AACA;AACD;;AAEDJ,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcR,KAAK,CAACQ,GAAD,CAAnB;AACD,KAlBD;AAmBA,WAAOJ,MAAP;AACD,GAvBD;AAwBD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIa,iBAAiB,GAAGnB,iBAAiB,CAAC,CAAC,CAAC,WAAD,EAAc,SAAd,CAAD,CAAD,CAAzC;AACA,SAASmB,iBAAT","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Create an adapter that converts an object of props with potentially deprecated\n * prop names to the replacement prop names in a newer version. Useful for guarding\n * against breaking changes when a prop has been renamed\n *\n * @param {Array} spec - an array of options which specify a text or regex\n * matcher alongside a replacement if there is a match\n * @returns {Function}\n */\nfunction createPropAdapter(spec) {\n  // if props aren't passed in we should default the prop to empty object\n  return function () {\n    var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var output = {};\n    Object.keys(input).forEach(function (key) {\n      var match = spec.find(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            regex = _ref2[0];\n\n        return key.match(regex);\n      });\n\n      if (match) {\n        var _match = _slicedToArray(match, 2),\n            regex = _match[0],\n            replacer = _match[1];\n\n        output[key.replace(regex, replacer)] = input[key];\n        return;\n      }\n\n      output[key] = input[key];\n    });\n    return output;\n  };\n}\n/**\n * TODO: REMOVE IN v11\n * props staring with \"default...\" were changed to \"initial...\" in Downshift v3\n *\n * @see https://github.com/downshift-js/downshift/releases/tag/v3.0.0\n */\n\n\nvar mapDownshiftProps = createPropAdapter([[/^default/g, 'initial']]);\nexport { mapDownshiftProps };"]},"metadata":{},"sourceType":"module"}