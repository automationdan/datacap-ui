{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkmark16 } from '@carbon/icons-react';\nimport MenuOption from './MenuOption';\n\nfunction MenuRadioGroupOptions(_ref) {\n  var items = _ref.items,\n      initialSelectedItem = _ref.initialSelectedItem,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n\n  var _useState = useState(initialSelectedItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  function handleClick(option) {\n    setSelected(option);\n    onChange(option);\n  }\n\n  var options = items.map(function (option, i) {\n    var isSelected = selected === option;\n    return /*#__PURE__*/React.createElement(MenuOption, {\n      key: i,\n      role: \"menuitemradio\",\n      \"aria-checked\": isSelected,\n      renderIcon: isSelected ? Checkmark16 : null,\n      label: option,\n      indented: true,\n      onClick: function onClick() {\n        handleClick(option);\n      }\n    });\n  });\n  return options;\n}\n\nMenuRadioGroupOptions.propTypes = {\n  /**\n   * Whether the option should be checked by default\n   */\n  initialSelectedItem: PropTypes.string,\n\n  /**\n   * Array of the radio options\n   */\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n  /**\n   * Callback function when selection the has been changed\n   */\n  onChange: PropTypes.func\n};\nexport default MenuRadioGroupOptions;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/Menu/MenuRadioGroupOptions.js"],"names":["_slicedToArray","React","useState","PropTypes","Checkmark16","MenuOption","MenuRadioGroupOptions","_ref","items","initialSelectedItem","_ref$onChange","onChange","_useState","_useState2","selected","setSelected","handleClick","option","options","map","i","isSelected","createElement","key","role","renderIcon","label","indented","onClick","propTypes","string","arrayOf","isRequired","func"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AACnC,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,mBAAmB,GAAGF,IAAI,CAACE,mBAD/B;AAAA,MAEIC,aAAa,GAAGH,IAAI,CAACI,QAFzB;AAAA,MAGIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,YAAY,CAAE,CAAzC,GAA4CA,aAH3D;;AAKA,MAAIE,SAAS,GAAGV,QAAQ,CAACO,mBAAD,CAAxB;AAAA,MACII,UAAU,GAAGb,cAAc,CAACY,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,QAAQ,GAAGD,UAAU,CAAC,CAAD,CAFzB;AAAA,MAGIE,WAAW,GAAGF,UAAU,CAAC,CAAD,CAH5B;;AAKA,WAASG,WAAT,CAAqBC,MAArB,EAA6B;AAC3BF,IAAAA,WAAW,CAACE,MAAD,CAAX;AACAN,IAAAA,QAAQ,CAACM,MAAD,CAAR;AACD;;AAED,MAAIC,OAAO,GAAGV,KAAK,CAACW,GAAN,CAAU,UAAUF,MAAV,EAAkBG,CAAlB,EAAqB;AAC3C,QAAIC,UAAU,GAAGP,QAAQ,KAAKG,MAA9B;AACA,WAAO,aAAahB,KAAK,CAACqB,aAAN,CAAoBjB,UAApB,EAAgC;AAClDkB,MAAAA,GAAG,EAAEH,CAD6C;AAElDI,MAAAA,IAAI,EAAE,eAF4C;AAGlD,sBAAgBH,UAHkC;AAIlDI,MAAAA,UAAU,EAAEJ,UAAU,GAAGjB,WAAH,GAAiB,IAJW;AAKlDsB,MAAAA,KAAK,EAAET,MAL2C;AAMlDU,MAAAA,QAAQ,EAAE,IANwC;AAOlDC,MAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1BZ,QAAAA,WAAW,CAACC,MAAD,CAAX;AACD;AATiD,KAAhC,CAApB;AAWD,GAba,CAAd;AAcA,SAAOC,OAAP;AACD;;AAEDZ,qBAAqB,CAACuB,SAAtB,GAAkC;AAChC;AACF;AACA;AACEpB,EAAAA,mBAAmB,EAAEN,SAAS,CAAC2B,MAJC;;AAMhC;AACF;AACA;AACEtB,EAAAA,KAAK,EAAEL,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC2B,MAA5B,EAAoCE,UATX;;AAWhC;AACF;AACA;AACErB,EAAAA,QAAQ,EAAER,SAAS,CAAC8B;AAdY,CAAlC;AAgBA,eAAe3B,qBAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkmark16 } from '@carbon/icons-react';\nimport MenuOption from './MenuOption';\n\nfunction MenuRadioGroupOptions(_ref) {\n  var items = _ref.items,\n      initialSelectedItem = _ref.initialSelectedItem,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n\n  var _useState = useState(initialSelectedItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  function handleClick(option) {\n    setSelected(option);\n    onChange(option);\n  }\n\n  var options = items.map(function (option, i) {\n    var isSelected = selected === option;\n    return /*#__PURE__*/React.createElement(MenuOption, {\n      key: i,\n      role: \"menuitemradio\",\n      \"aria-checked\": isSelected,\n      renderIcon: isSelected ? Checkmark16 : null,\n      label: option,\n      indented: true,\n      onClick: function onClick() {\n        handleClick(option);\n      }\n    });\n  });\n  return options;\n}\n\nMenuRadioGroupOptions.propTypes = {\n  /**\n   * Whether the option should be checked by default\n   */\n  initialSelectedItem: PropTypes.string,\n\n  /**\n   * Array of the radio options\n   */\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n  /**\n   * Callback function when selection the has been changed\n   */\n  onChange: PropTypes.func\n};\nexport default MenuRadioGroupOptions;"]},"metadata":{},"sourceType":"module"}