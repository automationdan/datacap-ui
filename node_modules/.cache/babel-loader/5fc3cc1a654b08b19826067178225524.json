{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelText\", \"className\", \"disabled\", \"id\", \"placeholder\", \"onChange\", \"onClick\", \"hideLabel\", \"inline\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"tooltipPosition\", \"tooltipAlignment\", \"type\", \"hidePasswordLabel\", \"showPasswordLabel\", \"size\", \"onTogglePasswordVisibility\", \"warn\", \"warnText\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { settings } from 'carbon-components';\nimport { View16, ViewOff16 } from '@carbon/icons-react';\nimport { useNormalizedInputProps } from '../../internal/useNormalizedInputProps';\nimport { textInputProps } from './util';\nimport { FormContext } from '../FluidForm';\nvar prefix = settings.prefix;\nvar PasswordInput = /*#__PURE__*/React.forwardRef(function PasswordInput(_ref, ref) {\n  var _classNames, _classNames2, _classNames3, _classNames4, _classNames7, _classNames8;\n\n  var labelText = _ref.labelText,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      id = _ref.id,\n      placeholder = _ref.placeholder,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      hideLabel = _ref.hideLabel,\n      inline = _ref.inline,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      _ref$tooltipPosition = _ref.tooltipPosition,\n      tooltipPosition = _ref$tooltipPosition === void 0 ? 'bottom' : _ref$tooltipPosition,\n      _ref$tooltipAlignment = _ref.tooltipAlignment,\n      tooltipAlignment = _ref$tooltipAlignment === void 0 ? 'center' : _ref$tooltipAlignment,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'password' : _ref$type,\n      _ref$hidePasswordLabe = _ref.hidePasswordLabel,\n      hidePasswordLabel = _ref$hidePasswordLabe === void 0 ? 'Hide password' : _ref$hidePasswordLabe,\n      _ref$showPasswordLabe = _ref.showPasswordLabel,\n      showPasswordLabel = _ref$showPasswordLabe === void 0 ? 'Show password' : _ref$showPasswordLabe,\n      size = _ref.size,\n      onTogglePasswordVisibility = _ref.onTogglePasswordVisibility,\n      warn = _ref.warn,\n      warnText = _ref.warnText,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(type),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputType = _useState2[0],\n      setInputType = _useState2[1];\n\n  var normalizedProps = useNormalizedInputProps({\n    id: id,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText\n  });\n\n  var handleTogglePasswordVisibility = function handleTogglePasswordVisibility(event) {\n    setInputType(inputType === 'password' ? 'text' : 'password');\n    onTogglePasswordVisibility && onTogglePasswordVisibility(event);\n  };\n\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), normalizedProps.invalid), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--warning\"), normalizedProps.warn), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--\").concat(size), size), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: inputType,\n    className: textInputClasses,\n    ref: ref\n  }, other);\n\n  var inputWrapperClasses = classNames(\"\".concat(prefix, \"--form-item\"), \"\".concat(prefix, \"--text-input-wrapper\"), \"\".concat(prefix, \"--password-input-wrapper\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--light\"), light), _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--inline\"), inline), _classNames2));\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--disabled\"), disabled), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline\"), inline), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline--\").concat(size), inline && !!size), _classNames3));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled), _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--inline\"), inline), _classNames4));\n  var fieldOuterWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-outer-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-outer-wrapper--inline\"), inline));\n  var fieldWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-wrapper--warning\"), normalizedProps.warn));\n  var iconClasses = classNames((_classNames7 = {}, _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon\"), normalizedProps.invalid || normalizedProps.warn), _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon--warning\"), normalizedProps.warn), _classNames7));\n  var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  var passwordIsVisible = inputType === 'text';\n  var passwordVisibilityIcon = passwordIsVisible ? /*#__PURE__*/React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : /*#__PURE__*/React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var passwordVisibilityToggleClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility__toggle\"), \"\".concat(prefix, \"--btn\"), \"\".concat(prefix, \"--btn--icon-only\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--a11y\"), (_classNames8 = {}, _defineProperty(_classNames8, \"\".concat(prefix, \"--btn--disabled\"), disabled), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--\").concat(tooltipPosition), tooltipPosition), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--align-\").concat(tooltipAlignment), tooltipAlignment), _classNames8));\n  var input = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, textInputProps({\n    sharedTextInputProps: sharedTextInputProps,\n    invalid: normalizedProps.invalid,\n    invalidId: normalizedProps.invalidId,\n    warn: normalizedProps.warn,\n    warnId: normalizedProps.warnId\n  }), {\n    disabled: disabled,\n    \"data-toggle-password-visibility\": inputType === 'password'\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: passwordVisibilityToggleClasses,\n    disabled: disabled,\n    onClick: handleTogglePasswordVisibility\n  }, !disabled && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, passwordIsVisible ? hidePasswordLabel : showPasswordLabel), passwordVisibilityIcon));\n\n  var _useContext = useContext(FormContext),\n      isFluid = _useContext.isFluid;\n\n  useEffect(function () {\n    setInputType(type);\n  }, [type]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputWrapperClasses\n  }, !inline ? label : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__label-helper-wrapper\")\n  }, label, !isFluid && helper), /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldOuterWrapperClasses\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldWrapperClasses,\n    \"data-invalid\": normalizedProps.invalid || null\n  }, normalizedProps.icon && /*#__PURE__*/React.createElement(normalizedProps.icon, {\n    className: iconClasses\n  }), input, isFluid && !inline && normalizedProps.validation), !isFluid && !inline && (normalizedProps.validation || helper)));\n});\nPasswordInput.displayName = 'PasswordInput';\nPasswordInput.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<input>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   */\n  hidePasswordLabel: PropTypes.string,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * `true` to use the inline version.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function that is called whenever the toggle password visibility\n   * button is clicked\n   */\n  onTogglePasswordVisibility: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   */\n  showPasswordLabel: PropTypes.string,\n\n  /**\n   * Specify the size of the Text Input. Currently supports either `small` or `large` as an option. If omitted, defaults to standard size\n   */\n  size: PropTypes.string,\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end']),\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * The input type, either password or text\n   */\n  type: PropTypes.oneOf(['password', 'text']),\n\n  /**\n   * Provide the current value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nPasswordInput.defaultProps = {\n  className: '${prefix}--text__input',\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false,\n  size: ''\n};\nexport default PasswordInput;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/TextInput/PasswordInput.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useContext","useEffect","useState","classNames","PropTypes","settings","View16","ViewOff16","useNormalizedInputProps","textInputProps","FormContext","prefix","PasswordInput","forwardRef","_ref","ref","_classNames","_classNames2","_classNames3","_classNames4","_classNames7","_classNames8","labelText","className","disabled","id","placeholder","_onChange","onChange","_onClick","onClick","hideLabel","inline","invalid","invalidText","helperText","light","_ref$tooltipPosition","tooltipPosition","_ref$tooltipAlignment","tooltipAlignment","_ref$type","type","_ref$hidePasswordLabe","hidePasswordLabel","_ref$showPasswordLabe","showPasswordLabel","size","onTogglePasswordVisibility","warn","warnText","other","_useState","_useState2","inputType","setInputType","normalizedProps","handleTogglePasswordVisibility","event","textInputClasses","concat","sharedTextInputProps","evt","inputWrapperClasses","labelClasses","helperTextClasses","fieldOuterWrapperClasses","fieldWrapperClasses","iconClasses","label","createElement","htmlFor","helper","passwordIsVisible","passwordVisibilityIcon","passwordVisibilityToggleClasses","input","Fragment","invalidId","warnId","_useContext","isFluid","icon","validation","displayName","propTypes","string","defaultValue","oneOfType","number","bool","node","isRequired","func","oneOf","value","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelText\", \"className\", \"disabled\", \"id\", \"placeholder\", \"onChange\", \"onClick\", \"hideLabel\", \"inline\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"tooltipPosition\", \"tooltipAlignment\", \"type\", \"hidePasswordLabel\", \"showPasswordLabel\", \"size\", \"onTogglePasswordVisibility\", \"warn\", \"warnText\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { settings } from 'carbon-components';\nimport { View16, ViewOff16 } from '@carbon/icons-react';\nimport { useNormalizedInputProps } from '../../internal/useNormalizedInputProps';\nimport { textInputProps } from './util';\nimport { FormContext } from '../FluidForm';\nvar prefix = settings.prefix;\nvar PasswordInput = /*#__PURE__*/React.forwardRef(function PasswordInput(_ref, ref) {\n  var _classNames, _classNames2, _classNames3, _classNames4, _classNames7, _classNames8;\n\n  var labelText = _ref.labelText,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      id = _ref.id,\n      placeholder = _ref.placeholder,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      hideLabel = _ref.hideLabel,\n      inline = _ref.inline,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      _ref$tooltipPosition = _ref.tooltipPosition,\n      tooltipPosition = _ref$tooltipPosition === void 0 ? 'bottom' : _ref$tooltipPosition,\n      _ref$tooltipAlignment = _ref.tooltipAlignment,\n      tooltipAlignment = _ref$tooltipAlignment === void 0 ? 'center' : _ref$tooltipAlignment,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'password' : _ref$type,\n      _ref$hidePasswordLabe = _ref.hidePasswordLabel,\n      hidePasswordLabel = _ref$hidePasswordLabe === void 0 ? 'Hide password' : _ref$hidePasswordLabe,\n      _ref$showPasswordLabe = _ref.showPasswordLabel,\n      showPasswordLabel = _ref$showPasswordLabe === void 0 ? 'Show password' : _ref$showPasswordLabe,\n      size = _ref.size,\n      onTogglePasswordVisibility = _ref.onTogglePasswordVisibility,\n      warn = _ref.warn,\n      warnText = _ref.warnText,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(type),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputType = _useState2[0],\n      setInputType = _useState2[1];\n\n  var normalizedProps = useNormalizedInputProps({\n    id: id,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText\n  });\n\n  var handleTogglePasswordVisibility = function handleTogglePasswordVisibility(event) {\n    setInputType(inputType === 'password' ? 'text' : 'password');\n    onTogglePasswordVisibility && onTogglePasswordVisibility(event);\n  };\n\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), normalizedProps.invalid), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--warning\"), normalizedProps.warn), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--\").concat(size), size), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: inputType,\n    className: textInputClasses,\n    ref: ref\n  }, other);\n\n  var inputWrapperClasses = classNames(\"\".concat(prefix, \"--form-item\"), \"\".concat(prefix, \"--text-input-wrapper\"), \"\".concat(prefix, \"--password-input-wrapper\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--light\"), light), _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--inline\"), inline), _classNames2));\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--disabled\"), disabled), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline\"), inline), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline--\").concat(size), inline && !!size), _classNames3));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled), _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--inline\"), inline), _classNames4));\n  var fieldOuterWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-outer-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-outer-wrapper--inline\"), inline));\n  var fieldWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-wrapper--warning\"), normalizedProps.warn));\n  var iconClasses = classNames((_classNames7 = {}, _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon\"), normalizedProps.invalid || normalizedProps.warn), _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon--warning\"), normalizedProps.warn), _classNames7));\n  var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  var passwordIsVisible = inputType === 'text';\n  var passwordVisibilityIcon = passwordIsVisible ? /*#__PURE__*/React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : /*#__PURE__*/React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var passwordVisibilityToggleClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility__toggle\"), \"\".concat(prefix, \"--btn\"), \"\".concat(prefix, \"--btn--icon-only\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--a11y\"), (_classNames8 = {}, _defineProperty(_classNames8, \"\".concat(prefix, \"--btn--disabled\"), disabled), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--\").concat(tooltipPosition), tooltipPosition), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--align-\").concat(tooltipAlignment), tooltipAlignment), _classNames8));\n  var input = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, textInputProps({\n    sharedTextInputProps: sharedTextInputProps,\n    invalid: normalizedProps.invalid,\n    invalidId: normalizedProps.invalidId,\n    warn: normalizedProps.warn,\n    warnId: normalizedProps.warnId\n  }), {\n    disabled: disabled,\n    \"data-toggle-password-visibility\": inputType === 'password'\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: passwordVisibilityToggleClasses,\n    disabled: disabled,\n    onClick: handleTogglePasswordVisibility\n  }, !disabled && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, passwordIsVisible ? hidePasswordLabel : showPasswordLabel), passwordVisibilityIcon));\n\n  var _useContext = useContext(FormContext),\n      isFluid = _useContext.isFluid;\n\n  useEffect(function () {\n    setInputType(type);\n  }, [type]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputWrapperClasses\n  }, !inline ? label : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__label-helper-wrapper\")\n  }, label, !isFluid && helper), /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldOuterWrapperClasses\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldWrapperClasses,\n    \"data-invalid\": normalizedProps.invalid || null\n  }, normalizedProps.icon && /*#__PURE__*/React.createElement(normalizedProps.icon, {\n    className: iconClasses\n  }), input, isFluid && !inline && normalizedProps.validation), !isFluid && !inline && (normalizedProps.validation || helper)));\n});\nPasswordInput.displayName = 'PasswordInput';\nPasswordInput.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<input>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   */\n  hidePasswordLabel: PropTypes.string,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * `true` to use the inline version.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function that is called whenever the toggle password visibility\n   * button is clicked\n   */\n  onTogglePasswordVisibility: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   */\n  showPasswordLabel: PropTypes.string,\n\n  /**\n   * Specify the size of the Text Input. Currently supports either `small` or `large` as an option. If omitted, defaults to standard size\n   */\n  size: PropTypes.string,\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end']),\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * The input type, either password or text\n   */\n  type: PropTypes.oneOf(['password', 'text']),\n\n  /**\n   * Provide the current value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nPasswordInput.defaultProps = {\n  className: '${prefix}--text__input',\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false,\n  size: ''\n};\nexport default PasswordInput;"]},"metadata":{},"sourceType":"module"}