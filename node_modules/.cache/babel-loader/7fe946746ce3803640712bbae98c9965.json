{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ChevronDown20 } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nvar SideNavSwitcher = /*#__PURE__*/React.forwardRef(function SideNavSwitcher(props, ref) {\n  var prefix = usePrefix();\n  var customClassName = props.className,\n      labelText = props.labelText,\n      onChange = props.onChange,\n      options = props.options;\n  var className = cx(\"\".concat(prefix, \"--side-nav__switcher\"), customClassName); // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"side-nav-switcher\",\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, labelText), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"carbon-side-nav-switcher\",\n    className: \"\".concat(prefix, \"--side-nav__select\"),\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      className: \"\".concat(prefix, \"--side-nav__option\"),\n      value: option\n    }, option);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__switcher-chevron\")\n  }, /*#__PURE__*/React.createElement(ChevronDown20, null)));\n});\nSideNavSwitcher.displayName = 'SideNavSwitcher';\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide the label for the switcher. This will be the first visible option\n   * when someone views this control\n   */\n  labelText: PropTypes.string.isRequired,\n\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  options: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default SideNavSwitcher;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/UIShell/SideNavSwitcher.js"],"names":["ChevronDown20","cx","PropTypes","React","usePrefix","SideNavSwitcher","forwardRef","props","ref","prefix","customClassName","className","labelText","onChange","options","concat","createElement","htmlFor","id","defaultValue","onBlur","disabled","hidden","value","map","option","key","displayName","propTypes","string","isRequired","func","arrayOf"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ChevronDown20 } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nvar SideNavSwitcher = /*#__PURE__*/React.forwardRef(function SideNavSwitcher(props, ref) {\n  var prefix = usePrefix();\n  var customClassName = props.className,\n      labelText = props.labelText,\n      onChange = props.onChange,\n      options = props.options;\n  var className = cx(\"\".concat(prefix, \"--side-nav__switcher\"), customClassName); // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"side-nav-switcher\",\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, labelText), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"carbon-side-nav-switcher\",\n    className: \"\".concat(prefix, \"--side-nav__select\"),\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      className: \"\".concat(prefix, \"--side-nav__option\"),\n      value: option\n    }, option);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__switcher-chevron\")\n  }, /*#__PURE__*/React.createElement(ChevronDown20, null)));\n});\nSideNavSwitcher.displayName = 'SideNavSwitcher';\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide the label for the switcher. This will be the first visible option\n   * when someone views this control\n   */\n  labelText: PropTypes.string.isRequired,\n\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  options: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default SideNavSwitcher;"]},"metadata":{},"sourceType":"module"}