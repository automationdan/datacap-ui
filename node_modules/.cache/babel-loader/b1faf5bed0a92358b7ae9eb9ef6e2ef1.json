{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"expanded\", \"defaultExpanded\", \"isChildOfHeader\", \"aria-label\", \"aria-labelledby\", \"children\", \"onToggle\", \"className\", \"isFixedNav\", \"isRail\", \"isPersistent\", \"addFocusListeners\", \"addMouseListeners\", \"onOverlayClick\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { useState, useRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes';\nimport { CARBON_SIDENAV_ITEMS } from './_utils';\nimport { usePrefix } from '../../internal/usePrefix'; // TO-DO: comment back in when footer is added for rails\n// import SideNavFooter from './SideNavFooter';\n\nvar SideNav = /*#__PURE__*/React.forwardRef(function SideNav(props, ref) {\n  var _cx, _cx2;\n\n  var expandedProp = props.expanded,\n      defaultExpanded = props.defaultExpanded,\n      isChildOfHeader = props.isChildOfHeader,\n      ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      children = props.children,\n      onToggle = props.onToggle,\n      customClassName = props.className,\n      isFixedNav = props.isFixedNav,\n      isRail = props.isRail,\n      isPersistent = props.isPersistent,\n      addFocusListeners = props.addFocusListeners,\n      addMouseListeners = props.addMouseListeners,\n      onOverlayClick = props.onOverlayClick,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useRef = useRef(expandedProp !== undefined),\n      controlled = _useRef.current;\n\n  var _useState = useState(defaultExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      setExpandedState = _useState2[1];\n\n  var _useState3 = useState(defaultExpanded),\n      _useState4 = _slicedToArray(_useState3, 2),\n      expandedViaHoverState = _useState4[0],\n      setExpandedViaHoverState = _useState4[1];\n\n  var expanded = controlled ? expandedProp : expandedState;\n\n  var handleToggle = function handleToggle(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n\n    if (!controlled) {\n      setExpandedState(value);\n    }\n\n    if (onToggle) {\n      onToggle(event, value);\n    }\n\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value);\n    }\n  };\n\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  }; // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--expanded\"), expanded || expandedViaHoverState), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--collapsed\"), !expanded && isFixedNav), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--rail\"), isRail), _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--ux\"), isChildOfHeader), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--hidden\"), !isPersistent), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay-active\"), expanded || expandedViaHoverState), _cx2));\n  var childrenToRender = children; // if a rail, pass the expansion state as a prop, so children can update themselves to match\n\n  if (isRail) {\n    childrenToRender = React.Children.map(children, function (child) {\n      var _child$type$displayNa, _child$type, _child$type2; // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n\n\n      var currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded; // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n\n      return /*#__PURE__*/React.cloneElement(child, _objectSpread({}, CARBON_SIDENAV_ITEMS.includes((_child$type$displayNa = (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) !== null && _child$type$displayNa !== void 0 ? _child$type$displayNa : (_child$type2 = child.type) === null || _child$type2 === void 0 ? void 0 : _child$type2.name) ? {\n        isSideNavExpanded: currentExpansionState\n      } : {}));\n    });\n  }\n\n  var eventHandlers = {};\n\n  if (addFocusListeners) {\n    eventHandlers.onFocus = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, true);\n      }\n    };\n\n    eventHandlers.onBlur = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n    };\n  }\n\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = function () {\n      return handleToggle(true, true);\n    };\n\n    eventHandlers.onMouseLeave = function () {\n      return handleToggle(false, false);\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFixedNav ? null :\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-hidden\": !expanded,\n    ref: ref,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className)\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n});\nSideNav.displayName = 'SideNav';\nSideNav.defaultProps = {\n  // TO-DO: comment back in when footer is added for rails\n  // translateById: (id) => {\n  //   const translations = {\n  //     'carbon.sidenav.state.open': 'Close',\n  //     'carbon.sidenav.state.closed': 'Open',\n  //   };\n  //   return translations[id];\n  // },\n  defaultExpanded: false,\n  isChildOfHeader: true,\n  isFixedNav: false,\n  isPersistent: true,\n  addFocusListeners: true,\n  addMouseListeners: true\n};\nSideNav.propTypes = _objectSpread(_objectSpread({}, AriaLabelPropType), {}, {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  translateById: PropTypes.func\n});\nexport default SideNav;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/UIShell/SideNav.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useState","useRef","cx","PropTypes","AriaLabelPropType","CARBON_SIDENAV_ITEMS","usePrefix","SideNav","forwardRef","props","ref","_cx","_cx2","expandedProp","expanded","defaultExpanded","isChildOfHeader","ariaLabel","ariaLabelledBy","children","onToggle","customClassName","className","isFixedNav","isRail","isPersistent","addFocusListeners","addMouseListeners","onOverlayClick","other","prefix","_useRef","undefined","controlled","current","_useState","_useState2","expandedState","setExpandedState","_useState3","_useState4","expandedViaHoverState","setExpandedViaHoverState","handleToggle","event","value","accessibilityLabel","concat","overlayClassName","childrenToRender","Children","map","child","_child$type$displayNa","_child$type","_child$type2","currentExpansionState","cloneElement","includes","type","displayName","name","isSideNavExpanded","eventHandlers","onFocus","currentTarget","contains","relatedTarget","onBlur","onMouseEnter","onMouseLeave","createElement","Fragment","onClick","defaultProps","propTypes","bool","string","func","translateById"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"expanded\", \"defaultExpanded\", \"isChildOfHeader\", \"aria-label\", \"aria-labelledby\", \"children\", \"onToggle\", \"className\", \"isFixedNav\", \"isRail\", \"isPersistent\", \"addFocusListeners\", \"addMouseListeners\", \"onOverlayClick\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState, useRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes';\nimport { CARBON_SIDENAV_ITEMS } from './_utils';\nimport { usePrefix } from '../../internal/usePrefix'; // TO-DO: comment back in when footer is added for rails\n// import SideNavFooter from './SideNavFooter';\n\nvar SideNav = /*#__PURE__*/React.forwardRef(function SideNav(props, ref) {\n  var _cx, _cx2;\n\n  var expandedProp = props.expanded,\n      defaultExpanded = props.defaultExpanded,\n      isChildOfHeader = props.isChildOfHeader,\n      ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      children = props.children,\n      onToggle = props.onToggle,\n      customClassName = props.className,\n      isFixedNav = props.isFixedNav,\n      isRail = props.isRail,\n      isPersistent = props.isPersistent,\n      addFocusListeners = props.addFocusListeners,\n      addMouseListeners = props.addMouseListeners,\n      onOverlayClick = props.onOverlayClick,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useRef = useRef(expandedProp !== undefined),\n      controlled = _useRef.current;\n\n  var _useState = useState(defaultExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      setExpandedState = _useState2[1];\n\n  var _useState3 = useState(defaultExpanded),\n      _useState4 = _slicedToArray(_useState3, 2),\n      expandedViaHoverState = _useState4[0],\n      setExpandedViaHoverState = _useState4[1];\n\n  var expanded = controlled ? expandedProp : expandedState;\n\n  var handleToggle = function handleToggle(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n\n    if (!controlled) {\n      setExpandedState(value);\n    }\n\n    if (onToggle) {\n      onToggle(event, value);\n    }\n\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value);\n    }\n  };\n\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  }; // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--expanded\"), expanded || expandedViaHoverState), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--collapsed\"), !expanded && isFixedNav), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--rail\"), isRail), _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--ux\"), isChildOfHeader), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--hidden\"), !isPersistent), _cx));\n  var overlayClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--side-nav__overlay-active\"), expanded || expandedViaHoverState), _cx2));\n  var childrenToRender = children; // if a rail, pass the expansion state as a prop, so children can update themselves to match\n\n  if (isRail) {\n    childrenToRender = React.Children.map(children, function (child) {\n      var _child$type$displayNa, _child$type, _child$type2;\n\n      // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n      var currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded; // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n\n      return /*#__PURE__*/React.cloneElement(child, _objectSpread({}, CARBON_SIDENAV_ITEMS.includes((_child$type$displayNa = (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) !== null && _child$type$displayNa !== void 0 ? _child$type$displayNa : (_child$type2 = child.type) === null || _child$type2 === void 0 ? void 0 : _child$type2.name) ? {\n        isSideNavExpanded: currentExpansionState\n      } : {}));\n    });\n  }\n\n  var eventHandlers = {};\n\n  if (addFocusListeners) {\n    eventHandlers.onFocus = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, true);\n      }\n    };\n\n    eventHandlers.onBlur = function (event) {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n    };\n  }\n\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = function () {\n      return handleToggle(true, true);\n    };\n\n    eventHandlers.onMouseLeave = function () {\n      return handleToggle(false, false);\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFixedNav ? null :\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-hidden\": !expanded,\n    ref: ref,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className)\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n});\nSideNav.displayName = 'SideNav';\nSideNav.defaultProps = {\n  // TO-DO: comment back in when footer is added for rails\n  // translateById: (id) => {\n  //   const translations = {\n  //     'carbon.sidenav.state.open': 'Close',\n  //     'carbon.sidenav.state.closed': 'Open',\n  //   };\n  //   return translations[id];\n  // },\n  defaultExpanded: false,\n  isChildOfHeader: true,\n  isFixedNav: false,\n  isPersistent: true,\n  addFocusListeners: true,\n  addMouseListeners: true\n};\nSideNav.propTypes = _objectSpread(_objectSpread({}, AriaLabelPropType), {}, {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  translateById: PropTypes.func\n});\nexport default SideNav;"]},"metadata":{},"sourceType":"module"}