{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"iconDescription\", \"className\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Copy16 } from '@carbon/icons-react';\nimport Copy from '../Copy';\nimport { usePrefix } from '../../internal/usePrefix';\nexport default function CopyButton(_ref) {\n  var iconDescription = _ref.iconDescription,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(Copy, _extends({\n    className: classnames(className, \"\".concat(prefix, \"--copy-btn\")),\n    \"aria-label\": iconDescription,\n    title: iconDescription\n  }, other), /*#__PURE__*/React.createElement(Copy16, {\n    className: \"\".concat(prefix, \"--snippet__icon\")\n  }));\n}\nCopyButton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the underlying `<button>`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the string that is displayed when the button is clicked and the\n   * content is copied\n   */\n  feedback: PropTypes.string,\n\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  feedbackTimeout: PropTypes.number,\n\n  /**\n   * Provide a description for the icon representing the copy action that can\n   * be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * `<button>` is clicked\n   */\n  onClick: PropTypes.func\n};\nCopyButton.defaultProps = {\n  iconDescription: 'Copy to clipboard',\n  feedback: 'Copied!',\n  feedbackTimeout: 2000,\n  onClick: function onClick() {}\n};","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/CopyButton/CopyButton.js"],"names":["_extends","_objectWithoutProperties","_excluded","PropTypes","React","classnames","Copy16","Copy","usePrefix","CopyButton","_ref","iconDescription","className","other","prefix","createElement","concat","title","propTypes","string","feedback","feedbackTimeout","number","onClick","func","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,iBAAD,EAAoB,WAApB,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACvC,MAAIC,eAAe,GAAGD,IAAI,CAACC,eAA3B;AAAA,MACIC,SAAS,GAAGF,IAAI,CAACE,SADrB;AAAA,MAEIC,KAAK,GAAGZ,wBAAwB,CAACS,IAAD,EAAOR,SAAP,CAFpC;;AAIA,MAAIY,MAAM,GAAGN,SAAS,EAAtB;AACA,SAAO,aAAaJ,KAAK,CAACW,aAAN,CAAoBR,IAApB,EAA0BP,QAAQ,CAAC;AACrDY,IAAAA,SAAS,EAAEP,UAAU,CAACO,SAAD,EAAY,GAAGI,MAAH,CAAUF,MAAV,EAAkB,YAAlB,CAAZ,CADgC;AAErD,kBAAcH,eAFuC;AAGrDM,IAAAA,KAAK,EAAEN;AAH8C,GAAD,EAInDE,KAJmD,CAAlC,EAIT,aAAaT,KAAK,CAACW,aAAN,CAAoBT,MAApB,EAA4B;AAClDM,IAAAA,SAAS,EAAE,GAAGI,MAAH,CAAUF,MAAV,EAAkB,iBAAlB;AADuC,GAA5B,CAJJ,CAApB;AAOD;AACDL,UAAU,CAACS,SAAX,GAAuB;AACrB;AACF;AACA;AACEN,EAAAA,SAAS,EAAET,SAAS,CAACgB,MAJA;;AAMrB;AACF;AACA;AACA;AACEC,EAAAA,QAAQ,EAAEjB,SAAS,CAACgB,MAVC;;AAYrB;AACF;AACA;AACEE,EAAAA,eAAe,EAAElB,SAAS,CAACmB,MAfN;;AAiBrB;AACF;AACA;AACA;AACEX,EAAAA,eAAe,EAAER,SAAS,CAACgB,MArBN;;AAuBrB;AACF;AACA;AACA;AACEI,EAAAA,OAAO,EAAEpB,SAAS,CAACqB;AA3BE,CAAvB;AA6BAf,UAAU,CAACgB,YAAX,GAA0B;AACxBd,EAAAA,eAAe,EAAE,mBADO;AAExBS,EAAAA,QAAQ,EAAE,SAFc;AAGxBC,EAAAA,eAAe,EAAE,IAHO;AAIxBE,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAE;AAJN,CAA1B","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"iconDescription\", \"className\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Copy16 } from '@carbon/icons-react';\nimport Copy from '../Copy';\nimport { usePrefix } from '../../internal/usePrefix';\nexport default function CopyButton(_ref) {\n  var iconDescription = _ref.iconDescription,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(Copy, _extends({\n    className: classnames(className, \"\".concat(prefix, \"--copy-btn\")),\n    \"aria-label\": iconDescription,\n    title: iconDescription\n  }, other), /*#__PURE__*/React.createElement(Copy16, {\n    className: \"\".concat(prefix, \"--snippet__icon\")\n  }));\n}\nCopyButton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the underlying `<button>`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the string that is displayed when the button is clicked and the\n   * content is copied\n   */\n  feedback: PropTypes.string,\n\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  feedbackTimeout: PropTypes.number,\n\n  /**\n   * Provide a description for the icon representing the copy action that can\n   * be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * `<button>` is clicked\n   */\n  onClick: PropTypes.func\n};\nCopyButton.defaultProps = {\n  iconDescription: 'Copy to clipboard',\n  feedback: 'Copied!',\n  feedbackTimeout: 2000,\n  onClick: function onClick() {}\n};"]},"metadata":{},"sourceType":"module"}