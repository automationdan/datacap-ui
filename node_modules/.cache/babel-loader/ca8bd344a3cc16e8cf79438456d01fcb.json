{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar SideNavItem = function SideNavItem(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      _ref$large = _ref.large,\n      large = _ref$large === void 0 ? false : _ref$large;\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item--large\"), large), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: className\n  }, children);\n};\n\nSideNavItem.propTypes = {\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if this is a large variation of the SideNavItem\n   */\n  large: PropTypes.bool\n};\nexport default SideNavItem;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/UIShell/SideNavItem.js"],"names":["_defineProperty","cx","PropTypes","React","usePrefix","SideNavItem","_ref","_cx","customClassName","className","children","_ref$large","large","prefix","concat","createElement","propTypes","node","isRequired","string","bool"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uCAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAC3C,MAAIC,GAAJ;;AAEA,MAAIC,eAAe,GAAGF,IAAI,CAACG,SAA3B;AAAA,MACIC,QAAQ,GAAGJ,IAAI,CAACI,QADpB;AAAA,MAEIC,UAAU,GAAGL,IAAI,CAACM,KAFtB;AAAA,MAGIA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAApB,GAAwB,KAAxB,GAAgCA,UAH5C;AAIA,MAAIE,MAAM,GAAGT,SAAS,EAAtB;AACA,MAAIK,SAAS,GAAGR,EAAE,EAAEM,GAAG,GAAG,EAAN,EAAUP,eAAe,CAACO,GAAD,EAAM,GAAGO,MAAH,CAAUD,MAAV,EAAkB,kBAAlB,CAAN,EAA6C,IAA7C,CAAzB,EAA6Eb,eAAe,CAACO,GAAD,EAAM,GAAGO,MAAH,CAAUD,MAAV,EAAkB,yBAAlB,CAAN,EAAoDD,KAApD,CAA5F,EAAwJZ,eAAe,CAACO,GAAD,EAAMC,eAAN,EAAuB,CAAC,CAACA,eAAzB,CAAvK,EAAkND,GAApN,EAAlB;AACA,SAAO,aAAaJ,KAAK,CAACY,aAAN,CAAoB,IAApB,EAA0B;AAC5CN,IAAAA,SAAS,EAAEA;AADiC,GAA1B,EAEjBC,QAFiB,CAApB;AAGD,CAZD;;AAcAL,WAAW,CAACW,SAAZ,GAAwB;AACtB;AACF;AACA;AACA;AACEN,EAAAA,QAAQ,EAAER,SAAS,CAACe,IAAV,CAAeC,UALH;;AAOtB;AACF;AACA;AACET,EAAAA,SAAS,EAAEP,SAAS,CAACiB,MAVC;;AAYtB;AACF;AACA;AACEP,EAAAA,KAAK,EAAEV,SAAS,CAACkB;AAfK,CAAxB;AAiBA,eAAef,WAAf","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar SideNavItem = function SideNavItem(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      _ref$large = _ref.large,\n      large = _ref$large === void 0 ? false : _ref$large;\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item--large\"), large), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: className\n  }, children);\n};\n\nSideNavItem.propTypes = {\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if this is a large variation of the SideNavItem\n   */\n  large: PropTypes.bool\n};\nexport default SideNavItem;"]},"metadata":{},"sourceType":"module"}