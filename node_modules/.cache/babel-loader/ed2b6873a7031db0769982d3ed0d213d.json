{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"headers\", \"rowCount\", \"columnCount\", \"zebra\", \"compact\", \"className\", \"showHeader\", \"showToolbar\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar DataTableSkeleton = function DataTableSkeleton(_ref) {\n  var _cx;\n\n  var headers = _ref.headers,\n      rowCount = _ref.rowCount,\n      columnCount = _ref.columnCount,\n      zebra = _ref.zebra,\n      compact = _ref.compact,\n      className = _ref.className,\n      showHeader = _ref.showHeader,\n      showToolbar = _ref.showToolbar,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var dataTableSkeletonClasses = cx(className, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--zebra\"), zebra), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--compact\"), compact), _cx));\n  var rowRepeat = rowCount;\n  var rows = Array(rowRepeat);\n  var columnsArray = Array.from({\n    length: columnCount\n  }, function (_, index) {\n    return index;\n  });\n\n  for (var i = 0; i < rowRepeat; i++) {\n    rows[i] = /*#__PURE__*/React.createElement(\"tr\", {\n      key: i\n    }, columnsArray.map(function (j) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j\n      }, /*#__PURE__*/React.createElement(\"span\", null));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--data-table-container\")\n  }, showHeader ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__title\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__description\")\n  })) : null, showToolbar ? /*#__PURE__*/React.createElement(\"section\", {\n    \"aria-label\": \"data table toolbar\",\n    className: \"\".concat(prefix, \"--table-toolbar\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toolbar-content\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--btn \").concat(prefix, \"--btn--sm\")\n  }))) : null, /*#__PURE__*/React.createElement(\"table\", _extends({\n    className: dataTableSkeletonClasses\n  }, rest), /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, columnsArray.map(function (i) {\n    var _headers$i;\n\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: i\n    }, headers ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bx--table-header-label\"\n    }, (_headers$i = headers[i]) === null || _headers$i === void 0 ? void 0 : _headers$i.header) : /*#__PURE__*/React.createElement(\"span\", null));\n  }))), /*#__PURE__*/React.createElement(\"tbody\", null, rows)));\n};\n\nDataTableSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the number of columns that you want to render in the skeleton state\n   */\n  columnCount: PropTypes.number,\n\n  /**\n   * Optionally specify whether you want the Skeleton to be rendered as a\n   * compact DataTable\n   */\n  compact: PropTypes.bool,\n\n  /**\n   * Optionally specify the displayed headers\n   */\n  headers: PropTypes.oneOfType([PropTypes.array, PropTypes.shape({\n    key: PropTypes.string\n  })]),\n\n  /**\n   * Specify the number of rows that you want to render in the skeleton state\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify if the table header should be rendered as part of the skeleton.\n   */\n  showHeader: PropTypes.bool,\n\n  /**\n   * Specify if the table toolbar should be rendered as part of the skeleton.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Optionally specify whether you want the DataTable to be zebra striped\n   */\n  zebra: PropTypes.bool\n};\nDataTableSkeleton.defaultProps = {\n  rowCount: 5,\n  columnCount: 5,\n  zebra: false,\n  compact: false,\n  showHeader: true,\n  showToolbar: true\n};\nexport default DataTableSkeleton;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/DataTableSkeleton/DataTableSkeleton.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","PropTypes","React","cx","settings","prefix","DataTableSkeleton","_ref","_cx","headers","rowCount","columnCount","zebra","compact","className","showHeader","showToolbar","rest","dataTableSkeletonClasses","concat","rowRepeat","rows","Array","columnsArray","from","length","_","index","i","createElement","key","map","j","_headers$i","header","propTypes","string","number","bool","oneOfType","array","shape","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"headers\", \"rowCount\", \"columnCount\", \"zebra\", \"compact\", \"className\", \"showHeader\", \"showToolbar\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar DataTableSkeleton = function DataTableSkeleton(_ref) {\n  var _cx;\n\n  var headers = _ref.headers,\n      rowCount = _ref.rowCount,\n      columnCount = _ref.columnCount,\n      zebra = _ref.zebra,\n      compact = _ref.compact,\n      className = _ref.className,\n      showHeader = _ref.showHeader,\n      showToolbar = _ref.showToolbar,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var dataTableSkeletonClasses = cx(className, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--zebra\"), zebra), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--compact\"), compact), _cx));\n  var rowRepeat = rowCount;\n  var rows = Array(rowRepeat);\n  var columnsArray = Array.from({\n    length: columnCount\n  }, function (_, index) {\n    return index;\n  });\n\n  for (var i = 0; i < rowRepeat; i++) {\n    rows[i] = /*#__PURE__*/React.createElement(\"tr\", {\n      key: i\n    }, columnsArray.map(function (j) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j\n      }, /*#__PURE__*/React.createElement(\"span\", null));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--data-table-container\")\n  }, showHeader ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__title\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__description\")\n  })) : null, showToolbar ? /*#__PURE__*/React.createElement(\"section\", {\n    \"aria-label\": \"data table toolbar\",\n    className: \"\".concat(prefix, \"--table-toolbar\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toolbar-content\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--btn \").concat(prefix, \"--btn--sm\")\n  }))) : null, /*#__PURE__*/React.createElement(\"table\", _extends({\n    className: dataTableSkeletonClasses\n  }, rest), /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, columnsArray.map(function (i) {\n    var _headers$i;\n\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: i\n    }, headers ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bx--table-header-label\"\n    }, (_headers$i = headers[i]) === null || _headers$i === void 0 ? void 0 : _headers$i.header) : /*#__PURE__*/React.createElement(\"span\", null));\n  }))), /*#__PURE__*/React.createElement(\"tbody\", null, rows)));\n};\n\nDataTableSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the number of columns that you want to render in the skeleton state\n   */\n  columnCount: PropTypes.number,\n\n  /**\n   * Optionally specify whether you want the Skeleton to be rendered as a\n   * compact DataTable\n   */\n  compact: PropTypes.bool,\n\n  /**\n   * Optionally specify the displayed headers\n   */\n  headers: PropTypes.oneOfType([PropTypes.array, PropTypes.shape({\n    key: PropTypes.string\n  })]),\n\n  /**\n   * Specify the number of rows that you want to render in the skeleton state\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify if the table header should be rendered as part of the skeleton.\n   */\n  showHeader: PropTypes.bool,\n\n  /**\n   * Specify if the table toolbar should be rendered as part of the skeleton.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Optionally specify whether you want the DataTable to be zebra striped\n   */\n  zebra: PropTypes.bool\n};\nDataTableSkeleton.defaultProps = {\n  rowCount: 5,\n  columnCount: 5,\n  zebra: false,\n  compact: false,\n  showHeader: true,\n  showToolbar: true\n};\nexport default DataTableSkeleton;"]},"metadata":{},"sourceType":"module"}