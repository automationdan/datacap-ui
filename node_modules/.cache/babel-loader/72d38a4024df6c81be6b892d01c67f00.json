{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"open\", \"count\", \"className\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport SkeletonText from '../SkeletonText';\nimport deprecate from '../../prop-types/deprecate';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction AccordionSkeleton(_ref) {\n  var align = _ref.align,\n      open = _ref.open,\n      count = _ref.count,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var classes = cx(\"\".concat(prefix, \"--accordion\"), \"\".concat(prefix, \"--skeleton\"), className, _defineProperty({}, \"\".concat(prefix, \"--accordion--\").concat(align), align));\n  var numSkeletonItems = open ? count - 1 : count;\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    className: classes\n  }, rest), open && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\".concat(prefix, \"--accordion__item \").concat(prefix, \"--accordion__item--active\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--accordion__heading\")\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    className: \"\".concat(prefix, \"--accordion__title\")\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"90%\"\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"80%\"\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"95%\"\n  }))), Array.from({\n    length: numSkeletonItems\n  }).map(function (_, i) {\n    return /*#__PURE__*/React.createElement(AccordionSkeletonItem, {\n      key: i\n    });\n  }));\n}\n\nAccordionSkeleton.propTypes = {\n  /**\n   * Specify the alignment of the accordion heading title and chevron.\n   */\n  align: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set number of items to render\n   */\n  count: PropTypes.number,\n\n  /**\n   * `false` to not display the first item opened\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Set unique identifier to generate unique item keys\n   */\n  uid: deprecate(PropTypes.any)\n};\nAccordionSkeleton.defaultProps = {\n  open: true,\n  count: 4,\n  align: 'end'\n};\n\nfunction AccordionSkeletonItem() {\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\".concat(prefix, \"--accordion__item\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--accordion__heading\")\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    className: \"\".concat(prefix, \"--accordion__title\")\n  })));\n}\n\nexport default AccordionSkeleton;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/Accordion/Accordion.Skeleton.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","PropTypes","React","cx","ChevronRight16","SkeletonText","deprecate","usePrefix","AccordionSkeleton","_ref","align","open","count","className","rest","prefix","classes","concat","numSkeletonItems","createElement","width","Array","from","length","map","_","i","AccordionSkeletonItem","key","propTypes","oneOf","string","number","bool","uid","any","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"open\", \"count\", \"className\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport SkeletonText from '../SkeletonText';\nimport deprecate from '../../prop-types/deprecate';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction AccordionSkeleton(_ref) {\n  var align = _ref.align,\n      open = _ref.open,\n      count = _ref.count,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var classes = cx(\"\".concat(prefix, \"--accordion\"), \"\".concat(prefix, \"--skeleton\"), className, _defineProperty({}, \"\".concat(prefix, \"--accordion--\").concat(align), align));\n  var numSkeletonItems = open ? count - 1 : count;\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    className: classes\n  }, rest), open && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\".concat(prefix, \"--accordion__item \").concat(prefix, \"--accordion__item--active\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--accordion__heading\")\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    className: \"\".concat(prefix, \"--accordion__title\")\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"90%\"\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"80%\"\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"95%\"\n  }))), Array.from({\n    length: numSkeletonItems\n  }).map(function (_, i) {\n    return /*#__PURE__*/React.createElement(AccordionSkeletonItem, {\n      key: i\n    });\n  }));\n}\n\nAccordionSkeleton.propTypes = {\n  /**\n   * Specify the alignment of the accordion heading title and chevron.\n   */\n  align: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set number of items to render\n   */\n  count: PropTypes.number,\n\n  /**\n   * `false` to not display the first item opened\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Set unique identifier to generate unique item keys\n   */\n  uid: deprecate(PropTypes.any)\n};\nAccordionSkeleton.defaultProps = {\n  open: true,\n  count: 4,\n  align: 'end'\n};\n\nfunction AccordionSkeletonItem() {\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\".concat(prefix, \"--accordion__item\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--accordion__heading\")\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    className: \"\".concat(prefix, \"--accordion__title\")\n  })));\n}\n\nexport default AccordionSkeleton;"]},"metadata":{},"sourceType":"module"}