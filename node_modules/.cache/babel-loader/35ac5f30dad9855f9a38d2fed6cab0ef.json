{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"children\", \"className\", \"iconDescription\", \"open\", \"onHeadingClick\", \"renderExpando\", \"title\", \"disabled\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Text } from '../Text';\nimport { match, keys } from '../../internal/keyboard';\nimport { useId } from '../../internal/useId';\nimport deprecate from '../../prop-types/deprecate';\nvar prefix = settings.prefix;\n\nvar defaultRenderExpando = function defaultRenderExpando(props) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\"\n  }, props));\n};\n\nfunction AccordionItem(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className,\n      iconDescription = _ref.iconDescription,\n      _ref$open = _ref.open,\n      open = _ref$open === void 0 ? false : _ref$open,\n      onHeadingClick = _ref.onHeadingClick,\n      _ref$renderExpando = _ref.renderExpando,\n      Expando = _ref$renderExpando === void 0 ? defaultRenderExpando : _ref$renderExpando,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'title' : _ref$title,\n      disabled = _ref.disabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(open),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(open),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevIsOpen = _useState4[0],\n      setPrevIsOpen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animation = _useState6[0],\n      setAnimation = _useState6[1];\n\n  var id = useId('accordion-item');\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--active\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--\").concat(animation), animation), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--disabled\"), disabled), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n\n  if (open !== prevIsOpen) {\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(open);\n    setPrevIsOpen(open);\n  } // When the AccordionItem heading is clicked, toggle the open state of the\n  // panel\n\n\n  function onClick(event) {\n    var nextValue = !isOpen;\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(nextValue);\n\n    if (onHeadingClick) {\n      // TODO: normalize signature, potentially:\n      // onHeadingClick :: (event: Event, state: { isOpen: Boolean }) => any\n      onHeadingClick({\n        isOpen: nextValue,\n        event: event\n      });\n    }\n  } // If the AccordionItem is open, and the user hits the ESC key, then close it\n\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, keys.Escape)) {\n      setIsOpen(false);\n    }\n  }\n\n  function handleAnimationEnd(event) {\n    if (rest.handleAnimationEnd) {\n      rest.handleAnimationEnd(event);\n    }\n\n    setAnimation('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: className\n  }, rest, {\n    onAnimationEnd: handleAnimationEnd\n  }), /*#__PURE__*/React.createElement(Expando, {\n    disabled: disabled,\n    \"aria-controls\": id,\n    \"aria-expanded\": isOpen,\n    className: \"\".concat(prefix, \"--accordion__heading\"),\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(Text, {\n    as: \"div\",\n    className: \"\".concat(prefix, \"--accordion__title\")\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, children));\n}\n\nAccordionItem.propTypes = {\n  /**\n   * Provide the contents of your AccordionItem\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether an individual AccordionItem should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The description of the expando icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop has been deprecated as it is no longer ' + 'required. Feel free to remove this prop from <AccordionItem>. This ' + 'prop will be removed in the next major release of ' + '`carbon-components-react`'),\n\n  /**\n   * The handler of the massaged `click` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The handler of the massaged `click` event on the heading.\n   */\n  onHeadingClick: PropTypes.func,\n\n  /**\n   * `true` to open the expando.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The callback function to render the expando button.\n   * Can be a React component class.\n   */\n  renderExpando: PropTypes.func,\n\n  /**\n   * The accordion title.\n   */\n  title: PropTypes.node\n};\nexport default AccordionItem;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/Accordion/AccordionItem.js"],"names":["_defineProperty","_slicedToArray","_objectWithoutProperties","_extends","_excluded","ChevronRight16","settings","cx","PropTypes","React","useState","Text","match","keys","useId","deprecate","prefix","defaultRenderExpando","props","createElement","type","AccordionItem","_ref","_cx","children","customClassName","className","iconDescription","_ref$open","open","onHeadingClick","_ref$renderExpando","renderExpando","Expando","_ref$title","title","disabled","rest","_useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","prevIsOpen","setPrevIsOpen","_useState5","_useState6","animation","setAnimation","id","concat","onClick","event","nextValue","onKeyDown","Escape","handleAnimationEnd","onAnimationEnd","as","propTypes","node","string","bool","func"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"children\", \"className\", \"iconDescription\", \"open\", \"onHeadingClick\", \"renderExpando\", \"title\", \"disabled\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Text } from '../Text';\nimport { match, keys } from '../../internal/keyboard';\nimport { useId } from '../../internal/useId';\nimport deprecate from '../../prop-types/deprecate';\nvar prefix = settings.prefix;\n\nvar defaultRenderExpando = function defaultRenderExpando(props) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\"\n  }, props));\n};\n\nfunction AccordionItem(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className,\n      iconDescription = _ref.iconDescription,\n      _ref$open = _ref.open,\n      open = _ref$open === void 0 ? false : _ref$open,\n      onHeadingClick = _ref.onHeadingClick,\n      _ref$renderExpando = _ref.renderExpando,\n      Expando = _ref$renderExpando === void 0 ? defaultRenderExpando : _ref$renderExpando,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'title' : _ref$title,\n      disabled = _ref.disabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(open),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(open),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevIsOpen = _useState4[0],\n      setPrevIsOpen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animation = _useState6[0],\n      setAnimation = _useState6[1];\n\n  var id = useId('accordion-item');\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--active\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--\").concat(animation), animation), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--disabled\"), disabled), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n\n  if (open !== prevIsOpen) {\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(open);\n    setPrevIsOpen(open);\n  } // When the AccordionItem heading is clicked, toggle the open state of the\n  // panel\n\n\n  function onClick(event) {\n    var nextValue = !isOpen;\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(nextValue);\n\n    if (onHeadingClick) {\n      // TODO: normalize signature, potentially:\n      // onHeadingClick :: (event: Event, state: { isOpen: Boolean }) => any\n      onHeadingClick({\n        isOpen: nextValue,\n        event: event\n      });\n    }\n  } // If the AccordionItem is open, and the user hits the ESC key, then close it\n\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, keys.Escape)) {\n      setIsOpen(false);\n    }\n  }\n\n  function handleAnimationEnd(event) {\n    if (rest.handleAnimationEnd) {\n      rest.handleAnimationEnd(event);\n    }\n\n    setAnimation('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: className\n  }, rest, {\n    onAnimationEnd: handleAnimationEnd\n  }), /*#__PURE__*/React.createElement(Expando, {\n    disabled: disabled,\n    \"aria-controls\": id,\n    \"aria-expanded\": isOpen,\n    className: \"\".concat(prefix, \"--accordion__heading\"),\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(Text, {\n    as: \"div\",\n    className: \"\".concat(prefix, \"--accordion__title\")\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, children));\n}\n\nAccordionItem.propTypes = {\n  /**\n   * Provide the contents of your AccordionItem\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether an individual AccordionItem should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The description of the expando icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop has been deprecated as it is no longer ' + 'required. Feel free to remove this prop from <AccordionItem>. This ' + 'prop will be removed in the next major release of ' + '`carbon-components-react`'),\n\n  /**\n   * The handler of the massaged `click` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The handler of the massaged `click` event on the heading.\n   */\n  onHeadingClick: PropTypes.func,\n\n  /**\n   * `true` to open the expando.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The callback function to render the expando button.\n   * Can be a React component class.\n   */\n  renderExpando: PropTypes.func,\n\n  /**\n   * The accordion title.\n   */\n  title: PropTypes.node\n};\nexport default AccordionItem;"]},"metadata":{},"sourceType":"module"}