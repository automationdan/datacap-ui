{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"type\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction CodeSnippetSkeleton(_ref) {\n  var _cx;\n\n  var containerClassName = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'single' : _ref$type,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--snippet\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--single\"), type === 'single'), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--multi\"), type === 'multi'), _cx));\n\n  if (type === 'single') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n\n  if (type === 'multi') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n}\n\nCodeSnippetSkeleton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * The type of the code snippet, including single or multi\n   */\n  type: PropTypes.oneOf(['single', 'multi'])\n};\nexport default CodeSnippetSkeleton;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/CodeSnippet/CodeSnippet.Skeleton.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","cx","PropTypes","React","usePrefix","CodeSnippetSkeleton","_ref","_cx","containerClassName","className","_ref$type","type","rest","prefix","concat","createElement","propTypes","string","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"type\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction CodeSnippetSkeleton(_ref) {\n  var _cx;\n\n  var containerClassName = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'single' : _ref$type,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--snippet\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--single\"), type === 'single'), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--multi\"), type === 'multi'), _cx));\n\n  if (type === 'single') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n\n  if (type === 'multi') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n}\n\nCodeSnippetSkeleton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * The type of the code snippet, including single or multi\n   */\n  type: PropTypes.oneOf(['single', 'multi'])\n};\nexport default CodeSnippetSkeleton;"]},"metadata":{},"sourceType":"module"}