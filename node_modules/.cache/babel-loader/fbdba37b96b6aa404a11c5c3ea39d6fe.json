{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"ariaLabelInput\", \"className\", \"hideTextInput\", \"id\", \"min\", \"minLabel\", \"max\", \"maxLabel\", \"formatLabel\", \"labelText\", \"step\", \"stepMuliplier\", \"stepMultiplier\", \"inputType\", \"required\", \"disabled\", \"name\", \"light\"];\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport throttle from 'lodash.throttle';\nimport * as keys from '../../internal/keyboard/keys';\nimport { matches } from '../../internal/keyboard/match';\nimport deprecate from '../../prop-types/deprecate';\nimport { FeatureFlagContext } from '../FeatureFlags';\nvar prefix = settings.prefix;\n\nvar defaultFormatLabel = function defaultFormatLabel(value, label) {\n  return typeof label === 'function' ? label(value) : \"\".concat(value).concat(label);\n};\n/**\n * Minimum time between processed \"drag\" events.\n */\n\n\nvar EVENT_THROTTLE = 16; // ms\n\n/**\n * Event types that trigger \"drags\".\n */\n\nvar DRAG_EVENT_TYPES = new Set(['mousemove', 'touchmove']);\n/**\n * Event types that trigger a \"drag\" to stop.\n */\n\nvar DRAG_STOP_EVENT_TYPES = new Set(['mouseup', 'touchend', 'touchcancel']);\n\nvar Slider = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n\n  var _super = _createSuper(Slider);\n\n  function Slider() {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: _this.props.value,\n      left: 0,\n      needsOnRelease: false,\n      isValid: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStart\", function (evt) {\n      // Do nothing if component is disabled\n      if (_this.props.disabled) {\n        return;\n      } // Register drag stop handlers\n\n\n      DRAG_STOP_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.addEventListener(element, _this.onDragStop);\n      }); // Register drag handlers\n\n      DRAG_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.addEventListener(element, _this.onDrag);\n      }); // Perform first recalculation since we probably didn't click exactly in the\n      // middle of the thumb\n\n      _this.onDrag(evt);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStop\", function () {\n      // Do nothing if component is disabled\n      if (_this.props.disabled) {\n        return;\n      } // Remove drag stop handlers\n\n\n      DRAG_STOP_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.removeEventListener(element, _this.onDragStop);\n      }); // Remove drag handlers\n\n      DRAG_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.removeEventListener(element, _this.onDrag);\n      }); // Set needsOnRelease flag so event fires on next update\n\n      _this.setState({\n        needsOnRelease: true,\n        isValid: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onDrag\", function (evt) {\n      // Do nothing if component is disabled or we have no event\n      if (_this.props.disabled || !evt) {\n        return;\n      }\n\n      var clientX;\n\n      if ('clientX' in evt) {\n        clientX = evt.clientX;\n      } else if ('touches' in evt && 0 in evt.touches && 'clientX' in evt.touches[0]) {\n        clientX = evt.touches[0].clientX;\n      } else {\n        // Do nothing if we have no valid clientX\n        return;\n      }\n\n      var _this$calcValue = _this.calcValue({\n        clientX: clientX\n      }),\n          value = _this$calcValue.value,\n          left = _this$calcValue.left;\n\n      _this.setState({\n        value: value,\n        left: left,\n        isValid: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDrag\", throttle(_this._onDrag, EVENT_THROTTLE, {\n      leading: true,\n      trailing: false\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (evt) {\n      // Do nothing if component is disabled or we don't have a valid event\n      if (_this.props.disabled || !('which' in evt)) {\n        return;\n      }\n\n      var which = Number.parseInt(evt.which);\n      var delta = 0;\n\n      if (matches(which, [keys.ArrowDown, keys.ArrowLeft])) {\n        delta = -_this.props.step;\n      } else if (matches(which, [keys.ArrowUp, keys.ArrowRight])) {\n        delta = _this.props.step;\n      } else {\n        // Ignore keys we don't want to handle\n        return;\n      } // If shift was held, account for the stepMultiplier\n\n\n      if (evt.shiftKey) {\n        var stepMultiplier = _this.props.stepMultiplier || _this.props.stepMuliplier;\n        delta *= stepMultiplier;\n      }\n\n      Math.floor(_this.state.value / _this.props.step) * _this.props.step;\n\n      var _this$calcValue2 = _this.calcValue({\n        // Ensures custom value from `<input>` won't cause skipping next stepping point with right arrow key,\n        // e.g. Typing 51 in `<input>`, moving focus onto the thumb and the hitting right arrow key should yield 52 instead of 54\n        value: (delta > 0 ? Math.floor(_this.state.value / _this.props.step) * _this.props.step : _this.state.value) + delta\n      }),\n          value = _this$calcValue2.value,\n          left = _this$calcValue2.left;\n\n      _this.setState({\n        value: value,\n        left: left,\n        isValid: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (evt) {\n      // Do nothing if component is disabled\n      if (_this.props.disabled) {\n        return;\n      } // Do nothing if we have no valid event, target, or value\n\n\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n\n      var targetValue = Number.parseFloat(evt.target.value); // Avoid calling calcValue for invalid numbers, but still update the state\n\n      if (isNaN(targetValue)) {\n        _this.setState({\n          value: evt.target.value\n        });\n      } else {\n        var _this$calcValue3 = _this.calcValue({\n          value: targetValue,\n          useRawValue: true\n        }),\n            value = _this$calcValue3.value,\n            left = _this$calcValue3.left;\n\n        _this.setState({\n          value: value,\n          left: left,\n          needsOnRelease: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function (evt) {\n      // Do nothing if we have no valid event, target, or value\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      } // determine validity of input change after clicking out of input\n\n\n      var validity = evt.target.checkValidity();\n\n      _this.setState({\n        isValid: validity\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calcValue\", function (_ref) {\n      var _ref$clientX = _ref.clientX,\n          clientX = _ref$clientX === void 0 ? null : _ref$clientX,\n          _ref$value = _ref.value,\n          value = _ref$value === void 0 ? null : _ref$value,\n          _ref$useRawValue = _ref.useRawValue,\n          useRawValue = _ref$useRawValue === void 0 ? false : _ref$useRawValue;\n      var range = _this.props.max - _this.props.min;\n\n      var boundingRect = _this.element.getBoundingClientRect();\n\n      var totalSteps = range / _this.props.step;\n      var width = boundingRect.right - boundingRect.left; // Enforce a minimum width of at least 1 for calculations\n\n      if (width <= 0) {\n        width = 1;\n      } // If a clientX is specified, use it to calculate the leftPercent. If not,\n      // use the provided value or state's value to calculate it instead.\n\n\n      var leftPercent;\n\n      if (clientX != null) {\n        var leftOffset = clientX - boundingRect.left;\n        leftPercent = leftOffset / width;\n      } else {\n        if (value == null) {\n          value = _this.state.value;\n        } // prevent NaN calculation if the range is 0\n\n\n        leftPercent = range === 0 ? 0 : (value - _this.props.min) / range;\n      }\n\n      if (useRawValue) {\n        // Adjusts only for min/max of thumb position\n        return {\n          value: value,\n          left: Math.min(1, Math.max(0, leftPercent)) * 100\n        };\n      }\n\n      var steppedValue = Math.round(leftPercent * totalSteps) * _this.props.step;\n\n      var steppedPercent = _this.clamp(steppedValue / range, 0, 1);\n\n      steppedValue = _this.clamp(steppedValue + _this.props.min, _this.props.min, _this.props.max);\n      return {\n        value: steppedValue,\n        left: steppedPercent * 100\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Sets up initial slider position and value in response to component mount.\n     */\n    function componentDidMount() {\n      if (this.element) {\n        var _this$calcValue4 = this.calcValue({\n          useRawValue: true\n        }),\n            value = _this$calcValue4.value,\n            left = _this$calcValue4.left;\n\n        this.setState({\n          value: value,\n          left: left\n        });\n      }\n    }\n    /**\n     * Handles firing of `onChange` and `onRelease` callbacks to parent in\n     * response to state changes.\n     *\n     * @param {*} prevProps prevProps\n     * @param {*} prevState The previous Slider state, used to see if callbacks\n     * should be called.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // Fire onChange event handler if present, if there's a usable value, and\n      // if the value is different from the last one\n      if (this.state.value !== '' && prevState.value !== this.state.value && typeof this.props.onChange === 'function') {\n        // TODO: pass event object as first param (breaking change/feat for v11)\n        this.props.onChange({\n          value: this.state.value\n        });\n      } // Fire onRelease event handler if present and if needed\n\n\n      if (this.state.needsOnRelease && typeof this.props.onRelease === 'function') {\n        // TODO: pass event object as first param (breaking change/feat for v11)\n        this.props.onRelease({\n          value: this.state.value\n        }); // Reset the flag\n\n        this.setState({\n          needsOnRelease: false\n        });\n      } // If value from props does not change, do nothing here.\n      // Otherwise, do prop -> state sync without \"value capping\".\n\n\n      if (prevProps.value === this.props.value && prevProps.max === this.props.max && prevProps.min === this.props.min) {\n        return;\n      }\n\n      this.setState(this.calcValue({\n        value: this.props.value,\n        useRawValue: true\n      }));\n    }\n    /**\n     * Synonymous to ECMA2017+ `Math.clamp`.\n     *\n     * @param {number} val\n     * @param {number} min\n     * @param {number} max\n     *\n     * @returns `val` if `max>=val>=min`; `min` if `val<min`; `max` if `val>max`.\n     */\n\n  }, {\n    key: \"clamp\",\n    value: function clamp(val, min, max) {\n      return Math.max(min, Math.min(val, max));\n    }\n    /**\n     * Sets up \"drag\" event handlers and calls `this.onDrag` in case dragging\n     * started on somewhere other than the thumb without a corresponding \"move\"\n     * event.\n     *\n     * @param {Event} evt The event.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames3,\n          _this2 = this;\n\n      var _this$props = this.props,\n          ariaLabelInput = _this$props.ariaLabelInput,\n          className = _this$props.className,\n          hideTextInput = _this$props.hideTextInput,\n          _this$props$id = _this$props.id,\n          id = _this$props$id === void 0 ? this.inputId = this.inputId || \"__carbon-slider_\".concat(Math.random().toString(36).substr(2)) : _this$props$id,\n          min = _this$props.min,\n          minLabel = _this$props.minLabel,\n          max = _this$props.max,\n          maxLabel = _this$props.maxLabel,\n          _this$props$formatLab = _this$props.formatLabel,\n          formatLabel = _this$props$formatLab === void 0 ? defaultFormatLabel : _this$props$formatLab,\n          labelText = _this$props.labelText,\n          step = _this$props.step,\n          stepMuliplier = _this$props.stepMuliplier,\n          stepMultiplier = _this$props.stepMultiplier,\n          inputType = _this$props.inputType,\n          required = _this$props.required,\n          disabled = _this$props.disabled,\n          name = _this$props.name,\n          light = _this$props.light,\n          other = _objectWithoutProperties(_this$props, _excluded);\n\n      delete other.onRelease;\n      delete other.invalid;\n      var _this$state = this.state,\n          value = _this$state.value,\n          left = _this$state.left,\n          isValid = _this$state.isValid;\n      var scope = this.context;\n      var enabled;\n\n      if (scope.enabled) {\n        enabled = scope.enabled('enable-v11-release');\n      }\n\n      var labelId = \"\".concat(id, \"-label\");\n      var labelClasses = classNames(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n      var sliderClasses = classNames(\"\".concat(prefix, \"--slider\"), _defineProperty({}, \"\".concat(prefix, \"--slider--disabled\"), disabled), [enabled ? null : className]);\n      var inputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--slider-text-input\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames3, \"\".concat(prefix, \"--text-input--invalid\"), isValid === false), _classNames3));\n      var filledTrackStyle = {\n        transform: \"translate(0%, -50%) scaleX(\".concat(left / 100, \")\")\n      };\n      var thumbStyle = {\n        left: \"\".concat(left, \"%\")\n      };\n      var hiddenInputStyle = {\n        display: 'none'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: enabled ? classNames(\"\".concat(prefix, \"--form-item\"), className) : \"\".concat(prefix, \"--form-item\")\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: id,\n        className: labelClasses,\n        id: labelId\n      }, labelText), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider-container\")\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--slider__range-label\")\n      }, formatLabel(min, minLabel)), /*#__PURE__*/React.createElement(\"div\", _extends({\n        className: sliderClasses,\n        ref: function ref(node) {\n          _this2.element = node;\n        },\n        onMouseDown: this.onDragStart,\n        onTouchStart: this.onDragStart,\n        onKeyDown: this.onKeyDown,\n        role: \"presentation\",\n        tabIndex: -1,\n        \"data-invalid\": isValid ? null : true\n      }, other), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__thumb\"),\n        role: \"slider\",\n        id: id,\n        tabIndex: 0,\n        \"aria-labelledby\": labelId,\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": min,\n        \"aria-valuenow\": value,\n        style: thumbStyle\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__track\"),\n        ref: function ref(node) {\n          _this2.track = node;\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__filled-track\"),\n        style: filledTrackStyle\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--slider__range-label\")\n      }, formatLabel(max, maxLabel)), /*#__PURE__*/React.createElement(\"input\", {\n        type: hideTextInput ? 'hidden' : inputType,\n        style: hideTextInput ? hiddenInputStyle : null,\n        id: \"\".concat(id, \"-input-for-slider\"),\n        name: name,\n        className: inputClasses,\n        value: value,\n        \"aria-label\": ariaLabelInput,\n        disabled: disabled,\n        required: required,\n        min: min,\n        max: max,\n        step: step,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        \"data-invalid\": isValid ? null : true,\n        \"aria-invalid\": isValid ? null : true\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: // syncs invalid state and prop\n    function getDerivedStateFromProps(props, state) {\n      var isValid = state.isValid; // will override state in favor of invalid prop\n\n      if (props.invalid === true && isValid === true) {\n        return {\n          isValid: false\n        };\n      }\n\n      if (props.invalid === false && isValid === false) {\n        return {\n          isValid: true\n        };\n      } //if invalid prop is not provided, state will remain the same\n\n\n      return null;\n    }\n  }]);\n\n  return Slider;\n}(PureComponent);\n\n_defineProperty(Slider, \"propTypes\", {\n  /**\n   * The `ariaLabel` for the `<input>`.\n   */\n  ariaLabelInput: PropTypes.string,\n\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class name for the slider.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` to disable this slider.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The callback to format the label associated with the minimum/maximum value.\n   */\n  formatLabel: PropTypes.func,\n\n  /**\n   * `true` to hide the number input box.\n   */\n  hideTextInput: PropTypes.bool,\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The `type` attribute of the `<input>`.\n   */\n  inputType: PropTypes.string,\n\n  /**\n   * `true` to specify if the control is invalid.\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * The label for the slider.\n   */\n  labelText: PropTypes.node,\n\n  /**\n   * `true` to use the light version.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number.isRequired,\n\n  /**\n   * The label associated with the maximum value.\n   */\n  maxLabel: PropTypes.string,\n\n  /**\n   * The minimum value.\n   */\n  min: PropTypes.number.isRequired,\n\n  /**\n   * The label associated with the minimum value.\n   */\n  minLabel: PropTypes.string,\n\n  /**\n   * The `name` attribute of the `<input>`.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The callback to get notified of change in value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The callback to get notified of value on handle release.\n   */\n  onRelease: PropTypes.func,\n\n  /**\n   * `true` to specify if the control is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * A value determining how much the value should increase/decrease by moving the thumb by mouse.\n   */\n  step: PropTypes.number,\n\n  /**\n   * A value determining how much the value should increase/decrease by Shift+arrow keys,\n   * which will be `(max - min) / stepMuliplier`.\n   */\n  stepMuliplier: deprecate(PropTypes.number, ' The `stepMuliplier` prop has been deprecated in favor of `stepMultiplier`. It will be removed in the next major release.'),\n\n  /**\n   * A value determining how much the value should increase/decrease by Shift+arrow keys,\n   * which will be `(max - min) / stepMultiplier`.\n   */\n  stepMultiplier: PropTypes.number,\n\n  /**\n   * The value.\n   */\n  value: PropTypes.number.isRequired\n});\n\n_defineProperty(Slider, \"defaultProps\", {\n  hideTextInput: false,\n  step: 1,\n  stepMultiplier: 4,\n  disabled: false,\n  minLabel: '',\n  maxLabel: '',\n  inputType: 'number',\n  ariaLabelInput: 'Slider number input',\n  light: false\n});\n\n_defineProperty(Slider, \"contextType\", FeatureFlagContext);\n\nexport { Slider as default };","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/Slider/Slider.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","React","PureComponent","PropTypes","classNames","settings","throttle","keys","matches","deprecate","FeatureFlagContext","prefix","defaultFormatLabel","value","label","concat","EVENT_THROTTLE","DRAG_EVENT_TYPES","Set","DRAG_STOP_EVENT_TYPES","Slider","_PureComponent","_super","_this","_len","length","args","Array","_key","props","left","needsOnRelease","isValid","evt","disabled","forEach","element","ownerDocument","addEventListener","onDragStop","onDrag","removeEventListener","setState","clientX","touches","_this$calcValue","calcValue","_onDrag","leading","trailing","which","Number","parseInt","delta","ArrowDown","ArrowLeft","step","ArrowUp","ArrowRight","shiftKey","stepMultiplier","stepMuliplier","Math","floor","state","_this$calcValue2","target","targetValue","parseFloat","isNaN","_this$calcValue3","useRawValue","validity","checkValidity","_ref","_ref$clientX","_ref$value","_ref$useRawValue","range","max","min","boundingRect","getBoundingClientRect","totalSteps","width","right","leftPercent","leftOffset","steppedValue","round","steppedPercent","clamp","key","componentDidMount","_this$calcValue4","componentDidUpdate","prevProps","prevState","onChange","onRelease","val","render","_classNames3","_this2","_this$props","ariaLabelInput","className","hideTextInput","_this$props$id","id","inputId","random","toString","substr","minLabel","maxLabel","_this$props$formatLab","formatLabel","labelText","inputType","required","name","light","other","invalid","_this$state","scope","context","enabled","labelId","labelClasses","sliderClasses","inputClasses","filledTrackStyle","transform","thumbStyle","hiddenInputStyle","display","createElement","htmlFor","ref","node","onMouseDown","onDragStart","onTouchStart","onKeyDown","role","tabIndex","style","track","type","onBlur","getDerivedStateFromProps","string","children","bool","func","number","isRequired","default"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"ariaLabelInput\", \"className\", \"hideTextInput\", \"id\", \"min\", \"minLabel\", \"max\", \"maxLabel\", \"formatLabel\", \"labelText\", \"step\", \"stepMuliplier\", \"stepMultiplier\", \"inputType\", \"required\", \"disabled\", \"name\", \"light\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport throttle from 'lodash.throttle';\nimport * as keys from '../../internal/keyboard/keys';\nimport { matches } from '../../internal/keyboard/match';\nimport deprecate from '../../prop-types/deprecate';\nimport { FeatureFlagContext } from '../FeatureFlags';\nvar prefix = settings.prefix;\n\nvar defaultFormatLabel = function defaultFormatLabel(value, label) {\n  return typeof label === 'function' ? label(value) : \"\".concat(value).concat(label);\n};\n/**\n * Minimum time between processed \"drag\" events.\n */\n\n\nvar EVENT_THROTTLE = 16; // ms\n\n/**\n * Event types that trigger \"drags\".\n */\n\nvar DRAG_EVENT_TYPES = new Set(['mousemove', 'touchmove']);\n/**\n * Event types that trigger a \"drag\" to stop.\n */\n\nvar DRAG_STOP_EVENT_TYPES = new Set(['mouseup', 'touchend', 'touchcancel']);\n\nvar Slider = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n\n  var _super = _createSuper(Slider);\n\n  function Slider() {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: _this.props.value,\n      left: 0,\n      needsOnRelease: false,\n      isValid: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStart\", function (evt) {\n      // Do nothing if component is disabled\n      if (_this.props.disabled) {\n        return;\n      } // Register drag stop handlers\n\n\n      DRAG_STOP_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.addEventListener(element, _this.onDragStop);\n      }); // Register drag handlers\n\n      DRAG_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.addEventListener(element, _this.onDrag);\n      }); // Perform first recalculation since we probably didn't click exactly in the\n      // middle of the thumb\n\n      _this.onDrag(evt);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStop\", function () {\n      // Do nothing if component is disabled\n      if (_this.props.disabled) {\n        return;\n      } // Remove drag stop handlers\n\n\n      DRAG_STOP_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.removeEventListener(element, _this.onDragStop);\n      }); // Remove drag handlers\n\n      DRAG_EVENT_TYPES.forEach(function (element) {\n        _this.element.ownerDocument.removeEventListener(element, _this.onDrag);\n      }); // Set needsOnRelease flag so event fires on next update\n\n      _this.setState({\n        needsOnRelease: true,\n        isValid: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onDrag\", function (evt) {\n      // Do nothing if component is disabled or we have no event\n      if (_this.props.disabled || !evt) {\n        return;\n      }\n\n      var clientX;\n\n      if ('clientX' in evt) {\n        clientX = evt.clientX;\n      } else if ('touches' in evt && 0 in evt.touches && 'clientX' in evt.touches[0]) {\n        clientX = evt.touches[0].clientX;\n      } else {\n        // Do nothing if we have no valid clientX\n        return;\n      }\n\n      var _this$calcValue = _this.calcValue({\n        clientX: clientX\n      }),\n          value = _this$calcValue.value,\n          left = _this$calcValue.left;\n\n      _this.setState({\n        value: value,\n        left: left,\n        isValid: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDrag\", throttle(_this._onDrag, EVENT_THROTTLE, {\n      leading: true,\n      trailing: false\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (evt) {\n      // Do nothing if component is disabled or we don't have a valid event\n      if (_this.props.disabled || !('which' in evt)) {\n        return;\n      }\n\n      var which = Number.parseInt(evt.which);\n      var delta = 0;\n\n      if (matches(which, [keys.ArrowDown, keys.ArrowLeft])) {\n        delta = -_this.props.step;\n      } else if (matches(which, [keys.ArrowUp, keys.ArrowRight])) {\n        delta = _this.props.step;\n      } else {\n        // Ignore keys we don't want to handle\n        return;\n      } // If shift was held, account for the stepMultiplier\n\n\n      if (evt.shiftKey) {\n        var stepMultiplier = _this.props.stepMultiplier || _this.props.stepMuliplier;\n        delta *= stepMultiplier;\n      }\n\n      Math.floor(_this.state.value / _this.props.step) * _this.props.step;\n\n      var _this$calcValue2 = _this.calcValue({\n        // Ensures custom value from `<input>` won't cause skipping next stepping point with right arrow key,\n        // e.g. Typing 51 in `<input>`, moving focus onto the thumb and the hitting right arrow key should yield 52 instead of 54\n        value: (delta > 0 ? Math.floor(_this.state.value / _this.props.step) * _this.props.step : _this.state.value) + delta\n      }),\n          value = _this$calcValue2.value,\n          left = _this$calcValue2.left;\n\n      _this.setState({\n        value: value,\n        left: left,\n        isValid: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (evt) {\n      // Do nothing if component is disabled\n      if (_this.props.disabled) {\n        return;\n      } // Do nothing if we have no valid event, target, or value\n\n\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n\n      var targetValue = Number.parseFloat(evt.target.value); // Avoid calling calcValue for invalid numbers, but still update the state\n\n      if (isNaN(targetValue)) {\n        _this.setState({\n          value: evt.target.value\n        });\n      } else {\n        var _this$calcValue3 = _this.calcValue({\n          value: targetValue,\n          useRawValue: true\n        }),\n            value = _this$calcValue3.value,\n            left = _this$calcValue3.left;\n\n        _this.setState({\n          value: value,\n          left: left,\n          needsOnRelease: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function (evt) {\n      // Do nothing if we have no valid event, target, or value\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      } // determine validity of input change after clicking out of input\n\n\n      var validity = evt.target.checkValidity();\n\n      _this.setState({\n        isValid: validity\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calcValue\", function (_ref) {\n      var _ref$clientX = _ref.clientX,\n          clientX = _ref$clientX === void 0 ? null : _ref$clientX,\n          _ref$value = _ref.value,\n          value = _ref$value === void 0 ? null : _ref$value,\n          _ref$useRawValue = _ref.useRawValue,\n          useRawValue = _ref$useRawValue === void 0 ? false : _ref$useRawValue;\n      var range = _this.props.max - _this.props.min;\n\n      var boundingRect = _this.element.getBoundingClientRect();\n\n      var totalSteps = range / _this.props.step;\n      var width = boundingRect.right - boundingRect.left; // Enforce a minimum width of at least 1 for calculations\n\n      if (width <= 0) {\n        width = 1;\n      } // If a clientX is specified, use it to calculate the leftPercent. If not,\n      // use the provided value or state's value to calculate it instead.\n\n\n      var leftPercent;\n\n      if (clientX != null) {\n        var leftOffset = clientX - boundingRect.left;\n        leftPercent = leftOffset / width;\n      } else {\n        if (value == null) {\n          value = _this.state.value;\n        } // prevent NaN calculation if the range is 0\n\n\n        leftPercent = range === 0 ? 0 : (value - _this.props.min) / range;\n      }\n\n      if (useRawValue) {\n        // Adjusts only for min/max of thumb position\n        return {\n          value: value,\n          left: Math.min(1, Math.max(0, leftPercent)) * 100\n        };\n      }\n\n      var steppedValue = Math.round(leftPercent * totalSteps) * _this.props.step;\n\n      var steppedPercent = _this.clamp(steppedValue / range, 0, 1);\n\n      steppedValue = _this.clamp(steppedValue + _this.props.min, _this.props.min, _this.props.max);\n      return {\n        value: steppedValue,\n        left: steppedPercent * 100\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Sets up initial slider position and value in response to component mount.\n     */\n    function componentDidMount() {\n      if (this.element) {\n        var _this$calcValue4 = this.calcValue({\n          useRawValue: true\n        }),\n            value = _this$calcValue4.value,\n            left = _this$calcValue4.left;\n\n        this.setState({\n          value: value,\n          left: left\n        });\n      }\n    }\n    /**\n     * Handles firing of `onChange` and `onRelease` callbacks to parent in\n     * response to state changes.\n     *\n     * @param {*} prevProps prevProps\n     * @param {*} prevState The previous Slider state, used to see if callbacks\n     * should be called.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // Fire onChange event handler if present, if there's a usable value, and\n      // if the value is different from the last one\n      if (this.state.value !== '' && prevState.value !== this.state.value && typeof this.props.onChange === 'function') {\n        // TODO: pass event object as first param (breaking change/feat for v11)\n        this.props.onChange({\n          value: this.state.value\n        });\n      } // Fire onRelease event handler if present and if needed\n\n\n      if (this.state.needsOnRelease && typeof this.props.onRelease === 'function') {\n        // TODO: pass event object as first param (breaking change/feat for v11)\n        this.props.onRelease({\n          value: this.state.value\n        }); // Reset the flag\n\n        this.setState({\n          needsOnRelease: false\n        });\n      } // If value from props does not change, do nothing here.\n      // Otherwise, do prop -> state sync without \"value capping\".\n\n\n      if (prevProps.value === this.props.value && prevProps.max === this.props.max && prevProps.min === this.props.min) {\n        return;\n      }\n\n      this.setState(this.calcValue({\n        value: this.props.value,\n        useRawValue: true\n      }));\n    }\n    /**\n     * Synonymous to ECMA2017+ `Math.clamp`.\n     *\n     * @param {number} val\n     * @param {number} min\n     * @param {number} max\n     *\n     * @returns `val` if `max>=val>=min`; `min` if `val<min`; `max` if `val>max`.\n     */\n\n  }, {\n    key: \"clamp\",\n    value: function clamp(val, min, max) {\n      return Math.max(min, Math.min(val, max));\n    }\n    /**\n     * Sets up \"drag\" event handlers and calls `this.onDrag` in case dragging\n     * started on somewhere other than the thumb without a corresponding \"move\"\n     * event.\n     *\n     * @param {Event} evt The event.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames3,\n          _this2 = this;\n\n      var _this$props = this.props,\n          ariaLabelInput = _this$props.ariaLabelInput,\n          className = _this$props.className,\n          hideTextInput = _this$props.hideTextInput,\n          _this$props$id = _this$props.id,\n          id = _this$props$id === void 0 ? this.inputId = this.inputId || \"__carbon-slider_\".concat(Math.random().toString(36).substr(2)) : _this$props$id,\n          min = _this$props.min,\n          minLabel = _this$props.minLabel,\n          max = _this$props.max,\n          maxLabel = _this$props.maxLabel,\n          _this$props$formatLab = _this$props.formatLabel,\n          formatLabel = _this$props$formatLab === void 0 ? defaultFormatLabel : _this$props$formatLab,\n          labelText = _this$props.labelText,\n          step = _this$props.step,\n          stepMuliplier = _this$props.stepMuliplier,\n          stepMultiplier = _this$props.stepMultiplier,\n          inputType = _this$props.inputType,\n          required = _this$props.required,\n          disabled = _this$props.disabled,\n          name = _this$props.name,\n          light = _this$props.light,\n          other = _objectWithoutProperties(_this$props, _excluded);\n\n      delete other.onRelease;\n      delete other.invalid;\n      var _this$state = this.state,\n          value = _this$state.value,\n          left = _this$state.left,\n          isValid = _this$state.isValid;\n      var scope = this.context;\n      var enabled;\n\n      if (scope.enabled) {\n        enabled = scope.enabled('enable-v11-release');\n      }\n\n      var labelId = \"\".concat(id, \"-label\");\n      var labelClasses = classNames(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n      var sliderClasses = classNames(\"\".concat(prefix, \"--slider\"), _defineProperty({}, \"\".concat(prefix, \"--slider--disabled\"), disabled), [enabled ? null : className]);\n      var inputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--slider-text-input\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames3, \"\".concat(prefix, \"--text-input--invalid\"), isValid === false), _classNames3));\n      var filledTrackStyle = {\n        transform: \"translate(0%, -50%) scaleX(\".concat(left / 100, \")\")\n      };\n      var thumbStyle = {\n        left: \"\".concat(left, \"%\")\n      };\n      var hiddenInputStyle = {\n        display: 'none'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: enabled ? classNames(\"\".concat(prefix, \"--form-item\"), className) : \"\".concat(prefix, \"--form-item\")\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: id,\n        className: labelClasses,\n        id: labelId\n      }, labelText), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider-container\")\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--slider__range-label\")\n      }, formatLabel(min, minLabel)), /*#__PURE__*/React.createElement(\"div\", _extends({\n        className: sliderClasses,\n        ref: function ref(node) {\n          _this2.element = node;\n        },\n        onMouseDown: this.onDragStart,\n        onTouchStart: this.onDragStart,\n        onKeyDown: this.onKeyDown,\n        role: \"presentation\",\n        tabIndex: -1,\n        \"data-invalid\": isValid ? null : true\n      }, other), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__thumb\"),\n        role: \"slider\",\n        id: id,\n        tabIndex: 0,\n        \"aria-labelledby\": labelId,\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": min,\n        \"aria-valuenow\": value,\n        style: thumbStyle\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__track\"),\n        ref: function ref(node) {\n          _this2.track = node;\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__filled-track\"),\n        style: filledTrackStyle\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--slider__range-label\")\n      }, formatLabel(max, maxLabel)), /*#__PURE__*/React.createElement(\"input\", {\n        type: hideTextInput ? 'hidden' : inputType,\n        style: hideTextInput ? hiddenInputStyle : null,\n        id: \"\".concat(id, \"-input-for-slider\"),\n        name: name,\n        className: inputClasses,\n        value: value,\n        \"aria-label\": ariaLabelInput,\n        disabled: disabled,\n        required: required,\n        min: min,\n        max: max,\n        step: step,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        \"data-invalid\": isValid ? null : true,\n        \"aria-invalid\": isValid ? null : true\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: // syncs invalid state and prop\n    function getDerivedStateFromProps(props, state) {\n      var isValid = state.isValid; // will override state in favor of invalid prop\n\n      if (props.invalid === true && isValid === true) {\n        return {\n          isValid: false\n        };\n      }\n\n      if (props.invalid === false && isValid === false) {\n        return {\n          isValid: true\n        };\n      } //if invalid prop is not provided, state will remain the same\n\n\n      return null;\n    }\n  }]);\n\n  return Slider;\n}(PureComponent);\n\n_defineProperty(Slider, \"propTypes\", {\n  /**\n   * The `ariaLabel` for the `<input>`.\n   */\n  ariaLabelInput: PropTypes.string,\n\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class name for the slider.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` to disable this slider.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The callback to format the label associated with the minimum/maximum value.\n   */\n  formatLabel: PropTypes.func,\n\n  /**\n   * `true` to hide the number input box.\n   */\n  hideTextInput: PropTypes.bool,\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The `type` attribute of the `<input>`.\n   */\n  inputType: PropTypes.string,\n\n  /**\n   * `true` to specify if the control is invalid.\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * The label for the slider.\n   */\n  labelText: PropTypes.node,\n\n  /**\n   * `true` to use the light version.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number.isRequired,\n\n  /**\n   * The label associated with the maximum value.\n   */\n  maxLabel: PropTypes.string,\n\n  /**\n   * The minimum value.\n   */\n  min: PropTypes.number.isRequired,\n\n  /**\n   * The label associated with the minimum value.\n   */\n  minLabel: PropTypes.string,\n\n  /**\n   * The `name` attribute of the `<input>`.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The callback to get notified of change in value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The callback to get notified of value on handle release.\n   */\n  onRelease: PropTypes.func,\n\n  /**\n   * `true` to specify if the control is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * A value determining how much the value should increase/decrease by moving the thumb by mouse.\n   */\n  step: PropTypes.number,\n\n  /**\n   * A value determining how much the value should increase/decrease by Shift+arrow keys,\n   * which will be `(max - min) / stepMuliplier`.\n   */\n  stepMuliplier: deprecate(PropTypes.number, ' The `stepMuliplier` prop has been deprecated in favor of `stepMultiplier`. It will be removed in the next major release.'),\n\n  /**\n   * A value determining how much the value should increase/decrease by Shift+arrow keys,\n   * which will be `(max - min) / stepMultiplier`.\n   */\n  stepMultiplier: PropTypes.number,\n\n  /**\n   * The value.\n   */\n  value: PropTypes.number.isRequired\n});\n\n_defineProperty(Slider, \"defaultProps\", {\n  hideTextInput: false,\n  step: 1,\n  stepMultiplier: 4,\n  disabled: false,\n  minLabel: '',\n  maxLabel: '',\n  inputType: 'number',\n  ariaLabelInput: 'Slider number input',\n  light: false\n});\n\n_defineProperty(Slider, \"contextType\", FeatureFlagContext);\n\nexport { Slider as default };"]},"metadata":{},"sourceType":"module"}