{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"active\", \"children\", \"className\", \"depth\", \"disabled\", \"isExpanded\", \"label\", \"onNodeFocusEvent\", \"onSelect\", \"onToggle\", \"onTreeSelect\", \"renderIcon\", \"selected\", \"value\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CaretDown16 } from '@carbon/icons-react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { keys, match, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nvar prefix = settings.prefix;\nexport default function TreeNode(_ref) {\n  var _classNames, _objectSpread2;\n\n  var active = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      depth = _ref.depth,\n      disabled = _ref.disabled,\n      isExpanded = _ref.isExpanded,\n      label = _ref.label,\n      onNodeFocusEvent = _ref.onNodeFocusEvent,\n      onNodeSelect = _ref.onSelect,\n      onToggle = _ref.onToggle,\n      onTreeSelect = _ref.onTreeSelect,\n      Icon = _ref.renderIcon,\n      selected = _ref.selected,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(rest.id || uniqueId()),\n      id = _useRef.current;\n\n  var _useState = useState(isExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var currentNode = useRef(null);\n  var currentNodeLabel = useRef(null);\n  var nodesWithProps = React.Children.map(children, function (node) {\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      return /*#__PURE__*/React.cloneElement(node, {\n        active: active,\n        depth: depth + 1,\n        disabled: disabled,\n        onTreeSelect: onTreeSelect,\n        selected: selected,\n        tabIndex: !node.props.disabled && -1 || null\n      });\n    }\n  });\n  var isActive = active === id;\n  var isSelected = selected.includes(id);\n  var treeNodeClasses = classNames(className, \"\".concat(prefix, \"--tree-node\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--active\"), isActive), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--selected\"), isSelected), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--with-icon\"), Icon), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-leaf-node\"), !children), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-parent-node\"), children), _classNames));\n  var toggleClasses = classNames(\"\".concat(prefix, \"--tree-parent-node__toggle-icon\"), _defineProperty({}, \"\".concat(prefix, \"--tree-parent-node__toggle-icon--expanded\"), expanded));\n\n  function handleToggleClick(event) {\n    if (onToggle) {\n      onToggle(event, {\n        id: id,\n        isExpanded: !expanded,\n        label: label,\n        value: value\n      });\n    }\n\n    setExpanded(!expanded);\n  }\n\n  function handleClick(event) {\n    event.stopPropagation();\n\n    if (!disabled) {\n      if (onTreeSelect) {\n        onTreeSelect(event, {\n          id: id,\n          label: label,\n          value: value\n        });\n      }\n\n      if (onNodeSelect) {\n        onNodeSelect(event, {\n          id: id,\n          label: label,\n          value: value\n        });\n      }\n\n      if (rest.onClick) {\n        rest.onClick(event);\n      }\n    }\n  }\n\n  function handleKeyDown(event) {\n    if (matches(event, [keys.ArrowLeft, keys.ArrowRight, keys.Enter])) {\n      event.stopPropagation();\n    }\n\n    if (match(event, keys.ArrowLeft)) {\n      var findParentTreeNode = function findParentTreeNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-parent-node\"))) {\n          return node;\n        }\n\n        if (node.classList.contains(\"\".concat(prefix, \"--tree\"))) {\n          return null;\n        }\n\n        return findParentTreeNode(node.parentNode);\n      };\n\n      if (children && expanded) {\n        onToggle(event, {\n          id: id,\n          isExpanded: false,\n          label: label,\n          value: value\n        });\n        setExpanded(false);\n      } else {\n        var _findParentTreeNode;\n        /**\n         * When focus is on a leaf node or a closed parent node, move focus to\n         * its parent node (unless its depth is level 1)\n         */\n\n\n        (_findParentTreeNode = findParentTreeNode(currentNode.current.parentNode)) === null || _findParentTreeNode === void 0 ? void 0 : _findParentTreeNode.focus();\n      }\n    }\n\n    if (children && match(event, keys.ArrowRight)) {\n      if (expanded) {\n        /**\n         * When focus is on an expanded parent node, move focus to the first\n         * child node\n         */\n        currentNode.current.lastChild.firstChild.focus();\n      } else {\n        onToggle(event, {\n          id: id,\n          isExpanded: true,\n          label: label,\n          value: value\n        });\n        setExpanded(true);\n      }\n    }\n\n    if (matches(event, [keys.Enter, keys.Space])) {\n      event.preventDefault();\n      handleClick(event);\n    }\n\n    if (rest.onKeyDown) {\n      rest.onKeyDown(event);\n    }\n  }\n\n  function handleFocusEvent(event) {\n    if (event.type === 'blur' && rest.onBlur) {\n      rest.onBlur(event);\n    }\n\n    if (event.type === 'focus' && rest.onFocus) {\n      rest.onFocus(event);\n    }\n\n    onNodeFocusEvent && onNodeFocusEvent(event);\n  }\n\n  useEffect(function () {\n    /**\n     * Negative margin shifts node to align with the left side boundary of the\n     * tree\n     * Dynamically calculate padding to recreate tree node indentation\n     * - parent nodes have (depth + 1rem) left padding\n     * - leaf nodes have (depth + 2.5rem) left padding without icons (because\n     *   of expando icon + spacing)\n     * - leaf nodes have (depth + 2rem) left padding with icons (because of\n     *   reduced spacing between the expando icon and the node icon + label)\n     */\n    var calcOffset = function calcOffset() {\n      // parent node\n      if (children) {\n        return depth + 1;\n      } // leaf node with icon\n\n\n      if (Icon) {\n        return depth + 2;\n      } // leaf node without icon\n\n\n      return depth + 2.5;\n    };\n\n    if (currentNodeLabel.current) {\n      currentNodeLabel.current.style.marginLeft = \"-\".concat(calcOffset(), \"rem\");\n      currentNodeLabel.current.style.paddingLeft = \"\".concat(calcOffset(), \"rem\");\n    } // sync props and state\n\n\n    setExpanded(isExpanded);\n  }, [children, depth, Icon, isExpanded]);\n\n  var treeNodeProps = _objectSpread(_objectSpread({}, rest), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, 'aria-current', isActive || null), _defineProperty(_objectSpread2, 'aria-selected', disabled ? null : isSelected), _defineProperty(_objectSpread2, 'aria-disabled', disabled), _defineProperty(_objectSpread2, \"className\", treeNodeClasses), _defineProperty(_objectSpread2, \"id\", id), _defineProperty(_objectSpread2, \"onBlur\", handleFocusEvent), _defineProperty(_objectSpread2, \"onClick\", handleClick), _defineProperty(_objectSpread2, \"onFocus\", handleFocusEvent), _defineProperty(_objectSpread2, \"onKeyDown\", handleKeyDown), _defineProperty(_objectSpread2, \"ref\", currentNode), _defineProperty(_objectSpread2, \"role\", 'treeitem'), _objectSpread2));\n\n  if (!children) {\n    return /*#__PURE__*/React.createElement(\"li\", treeNodeProps, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--tree-node__label\"),\n      ref: currentNodeLabel\n    }, Icon && /*#__PURE__*/React.createElement(Icon, {\n      className: \"\".concat(prefix, \"--tree-node__icon\")\n    }), label));\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n    React.createElement(\"li\", _extends({}, treeNodeProps, {\n      \"aria-expanded\": !!expanded\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--tree-node__label\"),\n      ref: currentNodeLabel\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tree-parent-node__toggle\"),\n      disabled: disabled,\n      onClick: handleToggleClick\n    }, /*#__PURE__*/React.createElement(CaretDown16, {\n      className: toggleClasses\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tree-node__label__details\")\n    }, Icon && /*#__PURE__*/React.createElement(Icon, {\n      className: \"\".concat(prefix, \"--tree-node__icon\")\n    }), label)), expanded && /*#__PURE__*/React.createElement(\"ul\", {\n      role: \"group\",\n      className: \"\".concat(prefix, \"--tree-node__children\")\n    }, nodesWithProps))\n  );\n}\nTreeNode.propTypes = {\n  /**\n   * The value of the active node in the tree\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify the children of the TreeNode\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the TreeNode\n   */\n  className: PropTypes.string,\n\n  /**\n   * TreeNode depth to determine spacing, automatically calculated by default\n   */\n  depth: PropTypes.number,\n\n  /**\n   * Specify if the TreeNode is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify if the TreeNode is expanded (only applicable to parent nodes)\n   */\n  isExpanded: PropTypes.bool,\n\n  /**\n   * Rendered label for the TreeNode\n   */\n  label: PropTypes.node,\n\n  /**\n   * Callback function for when the node receives or loses focus\n   */\n  onNodeFocusEvent: PropTypes.func,\n\n  /**\n   * Callback function for when the node is selected\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Callback function for when a parent node is expanded or collapsed\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * Callback function for when any node in the tree is selected\n   */\n  onTreeSelect: PropTypes.func,\n\n  /**\n   * Optional prop to allow each node to have an associated icon.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Array containing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Specify the value of the TreeNode\n   */\n  value: PropTypes.string\n};","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/TreeView/TreeNode.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useState","useEffect","useRef","PropTypes","CaretDown16","classNames","settings","match","matches","uniqueId","prefix","TreeNode","_ref","_classNames","_objectSpread2","active","children","className","depth","disabled","isExpanded","label","onNodeFocusEvent","onNodeSelect","onSelect","onToggle","onTreeSelect","Icon","renderIcon","selected","value","rest","_useRef","id","current","_useState","_useState2","expanded","setExpanded","currentNode","currentNodeLabel","nodesWithProps","Children","map","node","isValidElement","cloneElement","tabIndex","props","isActive","isSelected","includes","treeNodeClasses","concat","toggleClasses","handleToggleClick","event","handleClick","stopPropagation","onClick","handleKeyDown","ArrowLeft","ArrowRight","Enter","findParentTreeNode","classList","contains","parentNode","_findParentTreeNode","focus","lastChild","firstChild","Space","preventDefault","onKeyDown","handleFocusEvent","type","onBlur","onFocus","calcOffset","style","marginLeft","paddingLeft","treeNodeProps","createElement","ref","role","propTypes","oneOfType","string","number","bool","func","arrayOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"active\", \"children\", \"className\", \"depth\", \"disabled\", \"isExpanded\", \"label\", \"onNodeFocusEvent\", \"onSelect\", \"onToggle\", \"onTreeSelect\", \"renderIcon\", \"selected\", \"value\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CaretDown16 } from '@carbon/icons-react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { keys, match, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nvar prefix = settings.prefix;\nexport default function TreeNode(_ref) {\n  var _classNames, _objectSpread2;\n\n  var active = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      depth = _ref.depth,\n      disabled = _ref.disabled,\n      isExpanded = _ref.isExpanded,\n      label = _ref.label,\n      onNodeFocusEvent = _ref.onNodeFocusEvent,\n      onNodeSelect = _ref.onSelect,\n      onToggle = _ref.onToggle,\n      onTreeSelect = _ref.onTreeSelect,\n      Icon = _ref.renderIcon,\n      selected = _ref.selected,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(rest.id || uniqueId()),\n      id = _useRef.current;\n\n  var _useState = useState(isExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var currentNode = useRef(null);\n  var currentNodeLabel = useRef(null);\n  var nodesWithProps = React.Children.map(children, function (node) {\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      return /*#__PURE__*/React.cloneElement(node, {\n        active: active,\n        depth: depth + 1,\n        disabled: disabled,\n        onTreeSelect: onTreeSelect,\n        selected: selected,\n        tabIndex: !node.props.disabled && -1 || null\n      });\n    }\n  });\n  var isActive = active === id;\n  var isSelected = selected.includes(id);\n  var treeNodeClasses = classNames(className, \"\".concat(prefix, \"--tree-node\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--active\"), isActive), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--selected\"), isSelected), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-node--with-icon\"), Icon), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-leaf-node\"), !children), _defineProperty(_classNames, \"\".concat(prefix, \"--tree-parent-node\"), children), _classNames));\n  var toggleClasses = classNames(\"\".concat(prefix, \"--tree-parent-node__toggle-icon\"), _defineProperty({}, \"\".concat(prefix, \"--tree-parent-node__toggle-icon--expanded\"), expanded));\n\n  function handleToggleClick(event) {\n    if (onToggle) {\n      onToggle(event, {\n        id: id,\n        isExpanded: !expanded,\n        label: label,\n        value: value\n      });\n    }\n\n    setExpanded(!expanded);\n  }\n\n  function handleClick(event) {\n    event.stopPropagation();\n\n    if (!disabled) {\n      if (onTreeSelect) {\n        onTreeSelect(event, {\n          id: id,\n          label: label,\n          value: value\n        });\n      }\n\n      if (onNodeSelect) {\n        onNodeSelect(event, {\n          id: id,\n          label: label,\n          value: value\n        });\n      }\n\n      if (rest.onClick) {\n        rest.onClick(event);\n      }\n    }\n  }\n\n  function handleKeyDown(event) {\n    if (matches(event, [keys.ArrowLeft, keys.ArrowRight, keys.Enter])) {\n      event.stopPropagation();\n    }\n\n    if (match(event, keys.ArrowLeft)) {\n      var findParentTreeNode = function findParentTreeNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-parent-node\"))) {\n          return node;\n        }\n\n        if (node.classList.contains(\"\".concat(prefix, \"--tree\"))) {\n          return null;\n        }\n\n        return findParentTreeNode(node.parentNode);\n      };\n\n      if (children && expanded) {\n        onToggle(event, {\n          id: id,\n          isExpanded: false,\n          label: label,\n          value: value\n        });\n        setExpanded(false);\n      } else {\n        var _findParentTreeNode;\n\n        /**\n         * When focus is on a leaf node or a closed parent node, move focus to\n         * its parent node (unless its depth is level 1)\n         */\n        (_findParentTreeNode = findParentTreeNode(currentNode.current.parentNode)) === null || _findParentTreeNode === void 0 ? void 0 : _findParentTreeNode.focus();\n      }\n    }\n\n    if (children && match(event, keys.ArrowRight)) {\n      if (expanded) {\n        /**\n         * When focus is on an expanded parent node, move focus to the first\n         * child node\n         */\n        currentNode.current.lastChild.firstChild.focus();\n      } else {\n        onToggle(event, {\n          id: id,\n          isExpanded: true,\n          label: label,\n          value: value\n        });\n        setExpanded(true);\n      }\n    }\n\n    if (matches(event, [keys.Enter, keys.Space])) {\n      event.preventDefault();\n      handleClick(event);\n    }\n\n    if (rest.onKeyDown) {\n      rest.onKeyDown(event);\n    }\n  }\n\n  function handleFocusEvent(event) {\n    if (event.type === 'blur' && rest.onBlur) {\n      rest.onBlur(event);\n    }\n\n    if (event.type === 'focus' && rest.onFocus) {\n      rest.onFocus(event);\n    }\n\n    onNodeFocusEvent && onNodeFocusEvent(event);\n  }\n\n  useEffect(function () {\n    /**\n     * Negative margin shifts node to align with the left side boundary of the\n     * tree\n     * Dynamically calculate padding to recreate tree node indentation\n     * - parent nodes have (depth + 1rem) left padding\n     * - leaf nodes have (depth + 2.5rem) left padding without icons (because\n     *   of expando icon + spacing)\n     * - leaf nodes have (depth + 2rem) left padding with icons (because of\n     *   reduced spacing between the expando icon and the node icon + label)\n     */\n    var calcOffset = function calcOffset() {\n      // parent node\n      if (children) {\n        return depth + 1;\n      } // leaf node with icon\n\n\n      if (Icon) {\n        return depth + 2;\n      } // leaf node without icon\n\n\n      return depth + 2.5;\n    };\n\n    if (currentNodeLabel.current) {\n      currentNodeLabel.current.style.marginLeft = \"-\".concat(calcOffset(), \"rem\");\n      currentNodeLabel.current.style.paddingLeft = \"\".concat(calcOffset(), \"rem\");\n    } // sync props and state\n\n\n    setExpanded(isExpanded);\n  }, [children, depth, Icon, isExpanded]);\n\n  var treeNodeProps = _objectSpread(_objectSpread({}, rest), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, 'aria-current', isActive || null), _defineProperty(_objectSpread2, 'aria-selected', disabled ? null : isSelected), _defineProperty(_objectSpread2, 'aria-disabled', disabled), _defineProperty(_objectSpread2, \"className\", treeNodeClasses), _defineProperty(_objectSpread2, \"id\", id), _defineProperty(_objectSpread2, \"onBlur\", handleFocusEvent), _defineProperty(_objectSpread2, \"onClick\", handleClick), _defineProperty(_objectSpread2, \"onFocus\", handleFocusEvent), _defineProperty(_objectSpread2, \"onKeyDown\", handleKeyDown), _defineProperty(_objectSpread2, \"ref\", currentNode), _defineProperty(_objectSpread2, \"role\", 'treeitem'), _objectSpread2));\n\n  if (!children) {\n    return /*#__PURE__*/React.createElement(\"li\", treeNodeProps, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--tree-node__label\"),\n      ref: currentNodeLabel\n    }, Icon && /*#__PURE__*/React.createElement(Icon, {\n      className: \"\".concat(prefix, \"--tree-node__icon\")\n    }), label));\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n    React.createElement(\"li\", _extends({}, treeNodeProps, {\n      \"aria-expanded\": !!expanded\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--tree-node__label\"),\n      ref: currentNodeLabel\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tree-parent-node__toggle\"),\n      disabled: disabled,\n      onClick: handleToggleClick\n    }, /*#__PURE__*/React.createElement(CaretDown16, {\n      className: toggleClasses\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tree-node__label__details\")\n    }, Icon && /*#__PURE__*/React.createElement(Icon, {\n      className: \"\".concat(prefix, \"--tree-node__icon\")\n    }), label)), expanded && /*#__PURE__*/React.createElement(\"ul\", {\n      role: \"group\",\n      className: \"\".concat(prefix, \"--tree-node__children\")\n    }, nodesWithProps))\n  );\n}\nTreeNode.propTypes = {\n  /**\n   * The value of the active node in the tree\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify the children of the TreeNode\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the TreeNode\n   */\n  className: PropTypes.string,\n\n  /**\n   * TreeNode depth to determine spacing, automatically calculated by default\n   */\n  depth: PropTypes.number,\n\n  /**\n   * Specify if the TreeNode is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify if the TreeNode is expanded (only applicable to parent nodes)\n   */\n  isExpanded: PropTypes.bool,\n\n  /**\n   * Rendered label for the TreeNode\n   */\n  label: PropTypes.node,\n\n  /**\n   * Callback function for when the node receives or loses focus\n   */\n  onNodeFocusEvent: PropTypes.func,\n\n  /**\n   * Callback function for when the node is selected\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Callback function for when a parent node is expanded or collapsed\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * Callback function for when any node in the tree is selected\n   */\n  onTreeSelect: PropTypes.func,\n\n  /**\n   * Optional prop to allow each node to have an associated icon.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Array containing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Specify the value of the TreeNode\n   */\n  value: PropTypes.string\n};"]},"metadata":{},"sourceType":"module"}