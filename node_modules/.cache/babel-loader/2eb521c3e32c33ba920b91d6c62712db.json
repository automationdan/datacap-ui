{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { TextDirectionContext } from './TextDirectionContext';\n\nfunction TextDirection(_ref) {\n  var children = _ref.children,\n      _ref$dir = _ref.dir,\n      dir = _ref$dir === void 0 ? 'auto' : _ref$dir,\n      getTextDirection = _ref.getTextDirection;\n  var savedCallback = useRef(getTextDirection);\n  var value = useMemo(function () {\n    return {\n      direction: dir,\n      getTextDirection: savedCallback\n    };\n  }, [dir]);\n  useEffect(function () {\n    savedCallback.current = getTextDirection;\n  });\n  return /*#__PURE__*/React.createElement(TextDirectionContext.Provider, {\n    value: value\n  }, children);\n}\n\nTextDirection.propTypes = {\n  /**\n   * Provide children to be rendered inside of this component\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the text direction for rendered children\n   */\n  dir: PropTypes.oneOf(['ltr', 'rtl', 'auto']),\n\n  /**\n   * Optionally provide a custom function to get the text direction for a piece\n   * of text. Whatever is returned will become the value of the `dir` attribute\n   * on a node of text. Should return one of: 'ltr', 'rtl', or 'auto'\n   */\n  getTextDirection: PropTypes.func\n};\nexport { TextDirection };","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/Text/TextDirection.js"],"names":["PropTypes","React","useEffect","useMemo","useRef","TextDirectionContext","TextDirection","_ref","children","_ref$dir","dir","getTextDirection","savedCallback","value","direction","current","createElement","Provider","propTypes","node","oneOf","func"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACG,GADpB;AAAA,MAEIA,GAAG,GAAGD,QAAQ,KAAK,KAAK,CAAlB,GAAsB,MAAtB,GAA+BA,QAFzC;AAAA,MAGIE,gBAAgB,GAAGJ,IAAI,CAACI,gBAH5B;AAIA,MAAIC,aAAa,GAAGR,MAAM,CAACO,gBAAD,CAA1B;AACA,MAAIE,KAAK,GAAGV,OAAO,CAAC,YAAY;AAC9B,WAAO;AACLW,MAAAA,SAAS,EAAEJ,GADN;AAELC,MAAAA,gBAAgB,EAAEC;AAFb,KAAP;AAID,GALkB,EAKhB,CAACF,GAAD,CALgB,CAAnB;AAMAR,EAAAA,SAAS,CAAC,YAAY;AACpBU,IAAAA,aAAa,CAACG,OAAd,GAAwBJ,gBAAxB;AACD,GAFQ,CAAT;AAGA,SAAO,aAAaV,KAAK,CAACe,aAAN,CAAoBX,oBAAoB,CAACY,QAAzC,EAAmD;AACrEJ,IAAAA,KAAK,EAAEA;AAD8D,GAAnD,EAEjBL,QAFiB,CAApB;AAGD;;AAEDF,aAAa,CAACY,SAAd,GAA0B;AACxB;AACF;AACA;AACEV,EAAAA,QAAQ,EAAER,SAAS,CAACmB,IAJI;;AAMxB;AACF;AACA;AACET,EAAAA,GAAG,EAAEV,SAAS,CAACoB,KAAV,CAAgB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAhB,CATmB;;AAWxB;AACF;AACA;AACA;AACA;AACET,EAAAA,gBAAgB,EAAEX,SAAS,CAACqB;AAhBJ,CAA1B;AAkBA,SAASf,aAAT","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { TextDirectionContext } from './TextDirectionContext';\n\nfunction TextDirection(_ref) {\n  var children = _ref.children,\n      _ref$dir = _ref.dir,\n      dir = _ref$dir === void 0 ? 'auto' : _ref$dir,\n      getTextDirection = _ref.getTextDirection;\n  var savedCallback = useRef(getTextDirection);\n  var value = useMemo(function () {\n    return {\n      direction: dir,\n      getTextDirection: savedCallback\n    };\n  }, [dir]);\n  useEffect(function () {\n    savedCallback.current = getTextDirection;\n  });\n  return /*#__PURE__*/React.createElement(TextDirectionContext.Provider, {\n    value: value\n  }, children);\n}\n\nTextDirection.propTypes = {\n  /**\n   * Provide children to be rendered inside of this component\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the text direction for rendered children\n   */\n  dir: PropTypes.oneOf(['ltr', 'rtl', 'auto']),\n\n  /**\n   * Optionally provide a custom function to get the text direction for a piece\n   * of text. Whatever is returned will become the value of the `dir` attribute\n   * on a node of text. Should return one of: 'ltr', 'rtl', or 'auto'\n   */\n  getTextDirection: PropTypes.func\n};\nexport { TextDirection };"]},"metadata":{},"sourceType":"module"}