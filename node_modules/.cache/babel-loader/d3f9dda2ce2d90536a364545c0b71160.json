{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"aria-label\", \"children\", \"id\", \"disabled\", \"className\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { ChevronDown16 } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix';\nimport deprecate from '../../../prop-types/deprecate';\nvar TimePickerSelect = /*#__PURE__*/React.forwardRef(function TimePickerSelect(_ref, ref) {\n  var _cx;\n\n  var _ref$ariaLabel = _ref['aria-label'],\n      ariaLabel = _ref$ariaLabel === void 0 ? 'open list of options' : _ref$ariaLabel,\n      children = _ref.children,\n      id = _ref.id,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var selectClasses = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--select\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--time-picker__select\"), true), _defineProperty(_cx, className, className), _cx));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: selectClasses\n  }, /*#__PURE__*/React.createElement(\"select\", _extends({\n    \"aria-label\": ariaLabel,\n    className: \"\".concat(prefix, \"--select-input\"),\n    disabled: disabled,\n    id: id,\n    ref: ref\n  }, rest), children), /*#__PURE__*/React.createElement(ChevronDown16, {\n    className: \"\".concat(prefix, \"--select__arrow\"),\n    \"aria-hidden\": \"true\"\n  }));\n});\nTimePickerSelect.propTypes = {\n  /**\n   * Provide the contents of your TimePickerSelect\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the node containing the label and the select box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<select>`\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a description for the twistie icon that can be read by screen readers\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop for `TimePickerSelect` is no longer needed and has ' + 'been deprecated. It will be moved in the next major release. Use \"aria-label\" instead'),\n\n  /**\n   * Specify a custom `id` for the `<select>`\n   */\n  id: PropTypes.string.isRequired\n};\nexport default TimePickerSelect;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/TimePickerSelect/next/TimePickerSelect.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","PropTypes","React","cx","ChevronDown16","usePrefix","deprecate","TimePickerSelect","forwardRef","_ref","ref","_cx","_ref$ariaLabel","ariaLabel","children","id","_ref$disabled","disabled","className","rest","prefix","selectClasses","concat","createElement","propTypes","node","string","defaultValue","any","bool","iconDescription","isRequired"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"aria-label\", \"children\", \"id\", \"disabled\", \"className\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { ChevronDown16 } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix';\nimport deprecate from '../../../prop-types/deprecate';\nvar TimePickerSelect = /*#__PURE__*/React.forwardRef(function TimePickerSelect(_ref, ref) {\n  var _cx;\n\n  var _ref$ariaLabel = _ref['aria-label'],\n      ariaLabel = _ref$ariaLabel === void 0 ? 'open list of options' : _ref$ariaLabel,\n      children = _ref.children,\n      id = _ref.id,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var selectClasses = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--select\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--time-picker__select\"), true), _defineProperty(_cx, className, className), _cx));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: selectClasses\n  }, /*#__PURE__*/React.createElement(\"select\", _extends({\n    \"aria-label\": ariaLabel,\n    className: \"\".concat(prefix, \"--select-input\"),\n    disabled: disabled,\n    id: id,\n    ref: ref\n  }, rest), children), /*#__PURE__*/React.createElement(ChevronDown16, {\n    className: \"\".concat(prefix, \"--select__arrow\"),\n    \"aria-hidden\": \"true\"\n  }));\n});\nTimePickerSelect.propTypes = {\n  /**\n   * Provide the contents of your TimePickerSelect\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the node containing the label and the select box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<select>`\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a description for the twistie icon that can be read by screen readers\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop for `TimePickerSelect` is no longer needed and has ' + 'been deprecated. It will be moved in the next major release. Use \"aria-label\" instead'),\n\n  /**\n   * Specify a custom `id` for the `<select>`\n   */\n  id: PropTypes.string.isRequired\n};\nexport default TimePickerSelect;"]},"metadata":{},"sourceType":"module"}