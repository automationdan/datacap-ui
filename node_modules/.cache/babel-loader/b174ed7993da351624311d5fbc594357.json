{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"disabled\", \"tabIndex\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { settings } from 'carbon-components';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix; // No longer used, left export for backward-compatibility\n\nexport var translationIds = {};\n/**\n * `ListBoxField` is responsible for creating the containing node for valid\n * elements inside of a field. It also provides a11y-related attributes like\n * `role` to make sure a user can focus the given field.\n */\n\nfunction ListBoxField(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      tabIndex = _ref.tabIndex,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"\".concat(prefix, \"--list-box__field\"),\n    tabIndex: !disabled && tabIndex || -1\n  }, rest), children);\n}\n\nListBoxField.propTypes = {\n  /**\n   * Typically set by `getToggleButtonProps`, this should specify whether the\n   * field has a popup.\n   */\n  'aria-haspopup': PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n  /**\n   * Provide the contents of your ListBoxField\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify if the parent <ListBox> is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The role for the component, should be set by `getToggleButtonProps` coming\n   * from Downshift\n   */\n  role: PropTypes.string,\n\n  /**\n   * Optional prop to specify the tabIndex of the <ListBox> trigger button\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nexport default ListBoxField;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/ListBox/ListBoxField.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","settings","PropTypes","prefix","translationIds","ListBoxField","_ref","children","disabled","tabIndex","rest","createElement","className","concat","propTypes","oneOfType","string","bool","node","role","number"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB,C,CAA8B;;AAE9B,OAAO,IAAIC,cAAc,GAAG,EAArB;AACP;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,QAAQ,GAAGH,IAAI,CAACG,QAFpB;AAAA,MAGIC,IAAI,GAAGZ,wBAAwB,CAACQ,IAAD,EAAOP,SAAP,CAHnC;;AAKA,SAAO,aAAaC,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2Bd,QAAQ,CAAC;AACtDe,IAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUV,MAAV,EAAkB,mBAAlB,CAD2C;AAEtDM,IAAAA,QAAQ,EAAE,CAACD,QAAD,IAAaC,QAAb,IAAyB,CAAC;AAFkB,GAAD,EAGpDC,IAHoD,CAAnC,EAGVH,QAHU,CAApB;AAID;;AAEDF,YAAY,CAACS,SAAb,GAAyB;AACvB;AACF;AACA;AACA;AACE,mBAAiBZ,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACe,IAA7B,CAApB,CALM;;AAOvB;AACF;AACA;AACEV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAVG;;AAYvB;AACF;AACA;AACEV,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAfG;;AAiBvB;AACF;AACA;AACA;AACEE,EAAAA,IAAI,EAAEjB,SAAS,CAACc,MArBO;;AAuBvB;AACF;AACA;AACEP,EAAAA,QAAQ,EAAEP,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACkB,MAAX,EAAmBlB,SAAS,CAACc,MAA7B,CAApB;AA1Ba,CAAzB;AA4BA,eAAeX,YAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"disabled\", \"tabIndex\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { settings } from 'carbon-components';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix; // No longer used, left export for backward-compatibility\n\nexport var translationIds = {};\n/**\n * `ListBoxField` is responsible for creating the containing node for valid\n * elements inside of a field. It also provides a11y-related attributes like\n * `role` to make sure a user can focus the given field.\n */\n\nfunction ListBoxField(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      tabIndex = _ref.tabIndex,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"\".concat(prefix, \"--list-box__field\"),\n    tabIndex: !disabled && tabIndex || -1\n  }, rest), children);\n}\n\nListBoxField.propTypes = {\n  /**\n   * Typically set by `getToggleButtonProps`, this should specify whether the\n   * field has a popup.\n   */\n  'aria-haspopup': PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n  /**\n   * Provide the contents of your ListBoxField\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify if the parent <ListBox> is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The role for the component, should be set by `getToggleButtonProps` coming\n   * from Downshift\n   */\n  role: PropTypes.string,\n\n  /**\n   * Optional prop to specify the tabIndex of the <ListBox> trigger button\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nexport default ListBoxField;"]},"metadata":{},"sourceType":"module"}