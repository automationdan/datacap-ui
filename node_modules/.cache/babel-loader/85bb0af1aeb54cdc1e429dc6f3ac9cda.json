{"ast":null,"code":"var _jsxFileName = \"/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/src/components/DocumentUnderstanding/DocumentUnderstanding.js\";\nimport React, { Component } from \"react\";\nimport UploadService from \"../../services/upload-files.service\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, FileUploader } from 'carbon-components-react';\nimport ResultsList from './ResultsList';\nimport { WarningFilled16 } from '@carbon/icons-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"Please Upload Your Document\",\n      results: [],\n      docUrls: [{\n        fileData: ''\n      }],\n      fileInfos: [],\n      docUrl: undefined\n    };\n  }\n\n  selectFile(event) {\n    console.log(event.target.files);\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      console.log(response.data.transactionalId);\n      var getImagePath = URL.createObjectURL(currentFile);\n      console.log(getImagePath);\n      this.setState({\n        message: \"Uploaded Document, Now Processing.....\"\n      });\n      UploadService.executeRules(response.data.transactionalId, event => {\n        this.setState({\n          progress: Math.round(100 * event.loaded / event.total)\n        });\n      }).then(response => {\n        console.log(response.data);\n        this.setState({\n          docUrls: [{\n            uri: \"http://localhost:3001/api/documentunderstanding/getdoc/\" + response.data.transactionalId + \"/pdf\"\n          }],\n          results: response.data.values,\n          message: \"Document Processed\",\n          transactionId: response.data.transactionalId,\n          docurl: \"http://localhost:3001/api/documentunderstanding/getdoc/\" + response.data.transactionalId + \"/pdf\"\n        });\n        console.log(this.state);\n        return \"stuff\";\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FileUploader, {\n          accept: ['.jpg', '.pdf'],\n          onChange: this.selectFile,\n          buttonKind: \"primary\",\n          buttonLabel: \"Add files\",\n          filenameStatus: \"edit\",\n          iconDescription: \"Clear file\",\n          labelDescription: \"only .pdf and jpg files at 500mb or less\",\n          labelTitle: \"Upload\",\n          children: [\"  \", /*#__PURE__*/_jsxDEV(WarningFilled16, {\n            \"aria-label\": \"Add\",\n            className: \"my-custom-class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !selectedFiles,\n          onClick: this.upload,\n          children: \"Process Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ResultsList, {\n        results: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), this.state.docurl != undefined && /*#__PURE__*/_jsxDEV(FileViewer, {\n        fileType: \"pdf\",\n        filePath: this.state.docUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/src/components/DocumentUnderstanding/DocumentUnderstanding.js"],"names":["React","Component","UploadService","FileViewer","Button","FileUploader","ResultsList","WarningFilled16","UploadFiles","constructor","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","results","docUrls","fileData","fileInfos","docUrl","event","console","log","target","files","setState","Math","round","loaded","total","then","response","data","transactionalId","getImagePath","URL","createObjectURL","executeRules","uri","values","transactionId","docurl","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UploadService from \"../../services/upload-files.service\";\nimport FileViewer from 'react-file-viewer';\nimport { Button,FileUploader } from 'carbon-components-react';\nimport ResultsList from './ResultsList'\nimport { WarningFilled16 } from '@carbon/icons-react';\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"Please Upload Your Document\",\n      results: [],\n      docUrls: [ { fileData: '' } ],\n      fileInfos: [],\n      docUrl: undefined\n    };\n  }\n\n  selectFile(event) {\n    console.log(event.target.files)\n    this.setState({\n      selectedFiles: event.target.files,\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n\n    this.setState({\n      progress: 0,\n      currentFile: currentFile,\n    });\n\n    UploadService.upload(currentFile, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    }).then((response) => {\n        console.log(response.data.transactionalId);\n        var getImagePath = URL.createObjectURL(currentFile);\n        console.log(getImagePath);\n        this.setState({\n            message: \"Uploaded Document, Now Processing.....\"\n\n        })\n        UploadService.executeRules(response.data.transactionalId,(event) =>{\n            this.setState({\n            progress: Math.round((100 * event.loaded) / event.total),\n          });\n        }).then((response)=>{\n          console.log(response.data)\n\n          this.setState({\n            docUrls: [{uri: \"http://localhost:3001/api/documentunderstanding/getdoc/\" + response.data.transactionalId+ \"/pdf\"}],\n            results: response.data.values,\n            message: \"Document Processed\",\n            transactionId: response.data.transactionalId,\n            docurl: \"http://localhost:3001/api/documentunderstanding/getdoc/\" + response.data.transactionalId+ \"/pdf\"\n          });\n          console.log(this.state);\n          return \"stuff\"\n        })\n      })\n      .catch(() => {\n        this.setState({\n          progress: 0,\n          message: \"Could not upload the file!\",\n          currentFile: undefined,\n        });\n      });\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos,\n    } = this.state;\n\n    return (\n  <div>\n    <h1>{this.state.message}</h1>\n      <div>\n        <FileUploader\n          accept={[\n            '.jpg',\n            '.pdf'\n          ]}\n          onChange={this.selectFile}\n          buttonKind=\"primary\"\n          buttonLabel=\"Add files\"\n          filenameStatus=\"edit\"\n          iconDescription=\"Clear file\"\n          labelDescription=\"only .pdf and jpg files at 500mb or less\"\n          labelTitle=\"Upload\"\n        >  <WarningFilled16 aria-label=\"Add\" className=\"my-custom-class\" /></FileUploader>\n        <Button disabled={!selectedFiles} onClick={this.upload}>\n          Process Document\n\n        </Button>\n      </div>\n        <ResultsList results={this.state.results} />\n       {this.state.docurl != undefined  &&\n        <FileViewer fileType=\"pdf\" filePath={this.state.docUrl} />\n      }\n\n\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}