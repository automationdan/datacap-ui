{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"currentPage\", \"id\", \"labelText\", \"totalPages\"];\n/**\n * Copyright IBM Corp. 2016, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { settings } from 'carbon-components';\nimport setupGetInstanceId from '../../../tools/setupGetInstanceId';\nimport Select from '../../Select';\nimport SelectItem from '../../SelectItem';\nvar prefix = settings.prefix;\nvar getInstanceId = setupGetInstanceId();\n\nfunction PageSelector(_ref) {\n  var className = _ref.className,\n      currentPage = _ref.currentPage,\n      id = _ref.id,\n      labelText = _ref.labelText,\n      totalPages = _ref.totalPages,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var namespace = \"\".concat(prefix, \"--unstable-pagination__page-selector\");\n  var instanceId = \"\".concat(namespace, \"__select-\").concat(getInstanceId());\n\n  var renderPages = function renderPages(total) {\n    var pages = [];\n\n    for (var counter = 1; counter <= total; counter += 1) {\n      pages.push( /*#__PURE__*/React.createElement(SelectItem, {\n        key: counter,\n        value: counter,\n        text: String(counter)\n      }));\n    }\n\n    return pages;\n  };\n\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    className: classnames(namespace, className),\n    hideLabel: true,\n    id: instanceId || id,\n    inline: true,\n    labelText: labelText,\n    value: currentPage\n  }, other), renderPages(totalPages));\n}\n\nPageSelector.propTypes = {\n  /** Extra class names to add. */\n  className: PropTypes.string,\n\n  /** The current page. */\n  currentPage: PropTypes.number.isRequired,\n\n  /** The unique ID of this component instance. */\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Translatable string to label the page selector element. */\n  labelText: PropTypes.string,\n\n  /**\n   * Total number of pages.\n   * This value is calculated using a valid `totalItems` prop passed to the parent `Unstable_Pagination`.\n   */\n  totalPages: PropTypes.number.isRequired\n};\nPageSelector.defaultProps = {\n  className: null,\n  id: 1,\n  labelText: 'Current page number'\n};\nexport default PageSelector;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/Pagination/experimental/PageSelector.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","PropTypes","classnames","settings","setupGetInstanceId","Select","SelectItem","prefix","getInstanceId","PageSelector","_ref","className","currentPage","id","labelText","totalPages","other","namespace","concat","instanceId","renderPages","total","pages","counter","push","createElement","key","value","text","String","hideLabel","inline","propTypes","string","number","isRequired","oneOfType","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"currentPage\", \"id\", \"labelText\", \"totalPages\"];\n\n/**\n * Copyright IBM Corp. 2016, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { settings } from 'carbon-components';\nimport setupGetInstanceId from '../../../tools/setupGetInstanceId';\nimport Select from '../../Select';\nimport SelectItem from '../../SelectItem';\nvar prefix = settings.prefix;\nvar getInstanceId = setupGetInstanceId();\n\nfunction PageSelector(_ref) {\n  var className = _ref.className,\n      currentPage = _ref.currentPage,\n      id = _ref.id,\n      labelText = _ref.labelText,\n      totalPages = _ref.totalPages,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var namespace = \"\".concat(prefix, \"--unstable-pagination__page-selector\");\n  var instanceId = \"\".concat(namespace, \"__select-\").concat(getInstanceId());\n\n  var renderPages = function renderPages(total) {\n    var pages = [];\n\n    for (var counter = 1; counter <= total; counter += 1) {\n      pages.push( /*#__PURE__*/React.createElement(SelectItem, {\n        key: counter,\n        value: counter,\n        text: String(counter)\n      }));\n    }\n\n    return pages;\n  };\n\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    className: classnames(namespace, className),\n    hideLabel: true,\n    id: instanceId || id,\n    inline: true,\n    labelText: labelText,\n    value: currentPage\n  }, other), renderPages(totalPages));\n}\n\nPageSelector.propTypes = {\n  /** Extra class names to add. */\n  className: PropTypes.string,\n\n  /** The current page. */\n  currentPage: PropTypes.number.isRequired,\n\n  /** The unique ID of this component instance. */\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Translatable string to label the page selector element. */\n  labelText: PropTypes.string,\n\n  /**\n   * Total number of pages.\n   * This value is calculated using a valid `totalItems` prop passed to the parent `Unstable_Pagination`.\n   */\n  totalPages: PropTypes.number.isRequired\n};\nPageSelector.defaultProps = {\n  className: null,\n  id: 1,\n  labelText: 'Current page number'\n};\nexport default PageSelector;"]},"metadata":{},"sourceType":"module"}