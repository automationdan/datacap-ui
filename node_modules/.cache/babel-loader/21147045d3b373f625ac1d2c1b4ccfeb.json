{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"className\", \"children\", \"label\", \"description\", \"enterDelayMs\", \"leaveDelayMs\", \"defaultOpen\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { Popover, PopoverContent } from '../../Popover';\nimport { keys, match } from '../../../internal/keyboard';\nimport { useDelayedState } from '../../../internal/useDelayedState';\nimport { useId } from '../../../internal/useId';\nimport { useNoInteractiveChildren } from '../../../internal/useNoInteractiveChildren';\nimport { usePrefix } from '../../../internal/usePrefix';\n\nfunction Tooltip(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'top' : _ref$align,\n      customClassName = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      description = _ref.description,\n      _ref$enterDelayMs = _ref.enterDelayMs,\n      enterDelayMs = _ref$enterDelayMs === void 0 ? 100 : _ref$enterDelayMs,\n      _ref$leaveDelayMs = _ref.leaveDelayMs,\n      leaveDelayMs = _ref$leaveDelayMs === void 0 ? 300 : _ref$leaveDelayMs,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var containerRef = useRef(null);\n  var tooltipRef = useRef(null);\n\n  var _useDelayedState = useDelayedState(defaultOpen),\n      _useDelayedState2 = _slicedToArray(_useDelayedState, 2),\n      open = _useDelayedState2[0],\n      setOpen = _useDelayedState2[1];\n\n  var id = useId('tooltip');\n  var prefix = usePrefix();\n  var child = React.Children.only(children);\n  var triggerProps = {\n    onFocus: function onFocus() {\n      return setOpen(true);\n    },\n    onBlur: function onBlur() {\n      return setOpen(false);\n    }\n  };\n\n  if (label) {\n    triggerProps['aria-labelledby'] = id;\n  } else {\n    triggerProps['aria-describedby'] = id;\n  }\n\n  function onKeyDown(event) {\n    if (open && match(event, keys.Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n\n  function onMouseEnter() {\n    setOpen(true, enterDelayMs);\n  }\n\n  function onMouseLeave() {\n    setOpen(false, leaveDelayMs);\n  }\n\n  useNoInteractiveChildren(tooltipRef, 'The Tooltip component must have no interactive content rendered by the' + '`label` or `description` prop');\n  return /*#__PURE__*/React.createElement(Popover, _extends({}, rest, {\n    align: align,\n    className: cx(\"\".concat(prefix, \"--tooltip\"), customClassName),\n    dropShadow: false,\n    highContrast: true,\n    onKeyDown: onKeyDown,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    open: open,\n    ref: containerRef\n  }), /*#__PURE__*/React.cloneElement(child, triggerProps), /*#__PURE__*/React.createElement(PopoverContent, {\n    \"aria-hidden\": \"true\",\n    className: \"\".concat(prefix, \"--tooltip-content\"),\n    id: id,\n    ref: tooltipRef,\n    role: \"tooltip\"\n  }, label || description));\n}\n\nTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n\n  /**\n   * Pass in the child to which the tooltip will be applied\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Provide the description to be rendered inside of the Tooltip. The\n   * description will use `aria-describedby` and will describe the child node\n   * in addition to the text rendered inside of the child. This means that if you\n   * have text in the child node, that it will be announced alongside the\n   * description to the screen reader.\n   *\n   * Note: if label and description are both provided, label will be used and\n   * description will not be used\n   */\n  description: PropTypes.node,\n\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip\n   */\n  enterDelayMs: PropTypes.number,\n\n  /**\n   * Provide the label to be rendered inside of the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node, that it will not be\n   * announced to the screen reader.\n   *\n   * Note: if label and description are both provided, description will not be\n   * used\n   */\n  label: PropTypes.node,\n\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number\n};\nexport { Tooltip };","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/Tooltip/next/index.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","cx","PropTypes","React","useRef","Popover","PopoverContent","keys","match","useDelayedState","useId","useNoInteractiveChildren","usePrefix","Tooltip","_ref","_ref$align","align","customClassName","className","children","label","description","_ref$enterDelayMs","enterDelayMs","_ref$leaveDelayMs","leaveDelayMs","_ref$defaultOpen","defaultOpen","rest","containerRef","tooltipRef","_useDelayedState","_useDelayedState2","open","setOpen","id","prefix","child","Children","only","triggerProps","onFocus","onBlur","onKeyDown","event","Escape","stopPropagation","onMouseEnter","onMouseLeave","createElement","concat","dropShadow","highContrast","ref","cloneElement","role","propTypes","oneOf","node","string","bool","number"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"className\", \"children\", \"label\", \"description\", \"enterDelayMs\", \"leaveDelayMs\", \"defaultOpen\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { Popover, PopoverContent } from '../../Popover';\nimport { keys, match } from '../../../internal/keyboard';\nimport { useDelayedState } from '../../../internal/useDelayedState';\nimport { useId } from '../../../internal/useId';\nimport { useNoInteractiveChildren } from '../../../internal/useNoInteractiveChildren';\nimport { usePrefix } from '../../../internal/usePrefix';\n\nfunction Tooltip(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'top' : _ref$align,\n      customClassName = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      description = _ref.description,\n      _ref$enterDelayMs = _ref.enterDelayMs,\n      enterDelayMs = _ref$enterDelayMs === void 0 ? 100 : _ref$enterDelayMs,\n      _ref$leaveDelayMs = _ref.leaveDelayMs,\n      leaveDelayMs = _ref$leaveDelayMs === void 0 ? 300 : _ref$leaveDelayMs,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var containerRef = useRef(null);\n  var tooltipRef = useRef(null);\n\n  var _useDelayedState = useDelayedState(defaultOpen),\n      _useDelayedState2 = _slicedToArray(_useDelayedState, 2),\n      open = _useDelayedState2[0],\n      setOpen = _useDelayedState2[1];\n\n  var id = useId('tooltip');\n  var prefix = usePrefix();\n  var child = React.Children.only(children);\n  var triggerProps = {\n    onFocus: function onFocus() {\n      return setOpen(true);\n    },\n    onBlur: function onBlur() {\n      return setOpen(false);\n    }\n  };\n\n  if (label) {\n    triggerProps['aria-labelledby'] = id;\n  } else {\n    triggerProps['aria-describedby'] = id;\n  }\n\n  function onKeyDown(event) {\n    if (open && match(event, keys.Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n\n  function onMouseEnter() {\n    setOpen(true, enterDelayMs);\n  }\n\n  function onMouseLeave() {\n    setOpen(false, leaveDelayMs);\n  }\n\n  useNoInteractiveChildren(tooltipRef, 'The Tooltip component must have no interactive content rendered by the' + '`label` or `description` prop');\n  return /*#__PURE__*/React.createElement(Popover, _extends({}, rest, {\n    align: align,\n    className: cx(\"\".concat(prefix, \"--tooltip\"), customClassName),\n    dropShadow: false,\n    highContrast: true,\n    onKeyDown: onKeyDown,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    open: open,\n    ref: containerRef\n  }), /*#__PURE__*/React.cloneElement(child, triggerProps), /*#__PURE__*/React.createElement(PopoverContent, {\n    \"aria-hidden\": \"true\",\n    className: \"\".concat(prefix, \"--tooltip-content\"),\n    id: id,\n    ref: tooltipRef,\n    role: \"tooltip\"\n  }, label || description));\n}\n\nTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top']),\n\n  /**\n   * Pass in the child to which the tooltip will be applied\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Provide the description to be rendered inside of the Tooltip. The\n   * description will use `aria-describedby` and will describe the child node\n   * in addition to the text rendered inside of the child. This means that if you\n   * have text in the child node, that it will be announced alongside the\n   * description to the screen reader.\n   *\n   * Note: if label and description are both provided, label will be used and\n   * description will not be used\n   */\n  description: PropTypes.node,\n\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip\n   */\n  enterDelayMs: PropTypes.number,\n\n  /**\n   * Provide the label to be rendered inside of the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node, that it will not be\n   * announced to the screen reader.\n   *\n   * Note: if label and description are both provided, description will not be\n   * used\n   */\n  label: PropTypes.node,\n\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number\n};\nexport { Tooltip };"]},"metadata":{},"sourceType":"module"}