{"ast":null,"code":"import _classCallCheck from\"/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import http from\"../http-common\";var UploadFilesService=/*#__PURE__*/function(){function UploadFilesService(){_classCallCheck(this,UploadFilesService);}_createClass(UploadFilesService,[{key:\"upload\",value:function upload(file,onUploadProgress){var formData=new FormData();formData.append(\"uploadFile\",file);return http.post(\"/uploadAndPrepare/Passport_Page\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"},onUploadProgress:onUploadProgress});}},{key:\"executeRules\",value:function executeRules(transactionalId,onUploadProgress){var formData=new FormData();var url=\"/executeRules/\"+transactionalId+\"/dan/dan/Documents,NormalOCR,GenerateText,PassportFields/xml\";console.log(url);return http.post(url,formData,{headers:{\"Content-Type\":\"multipart/form-data\"},onUploadProgress:onUploadProgress});}},{key:\"getFiles\",value:function getFiles(){return http.get(\"/files\");}}]);return UploadFilesService;}();export default new UploadFilesService();","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/src/services/upload-files.service.js"],"names":["http","UploadFilesService","file","onUploadProgress","formData","FormData","append","post","headers","transactionalId","url","console","log","get"],"mappings":"0XAAA,MAAOA,CAAAA,IAAP,KAAiB,gBAAjB,C,GAEMC,CAAAA,kB,sJACJ,gBAAOC,IAAP,CAAaC,gBAAb,CAA+B,CAC7B,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAf,CAEAD,QAAQ,CAACE,MAAT,CAAgB,YAAhB,CAA8BJ,IAA9B,EAEA,MAAOF,CAAAA,IAAI,CAACO,IAAL,CAAU,iCAAV,CAA6CH,QAA7C,CAAuD,CAC5DI,OAAO,CAAE,CACP,eAAgB,qBADT,CADmD,CAI5DL,gBAAgB,CAAhBA,gBAJ4D,CAAvD,CAAP,CAMD,C,4BAED,sBAAaM,eAAb,CAA8BN,gBAA9B,CAAgD,CAC9C,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAf,CAEA,GAAIK,CAAAA,GAAG,CAAG,iBAAmBD,eAAnB,CAAqC,8DAA/C,CACAE,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAEA,MAAOV,CAAAA,IAAI,CAACO,IAAL,CAAUG,GAAV,CAAeN,QAAf,CAAyB,CAC9BI,OAAO,CAAE,CACP,eAAgB,qBADT,CADqB,CAI9BL,gBAAgB,CAAhBA,gBAJ8B,CAAzB,CAAP,CAMD,C,wBAED,mBAAW,CACT,MAAOH,CAAAA,IAAI,CAACa,GAAL,CAAS,QAAT,CAAP,CACD,C,kCAGH,cAAe,IAAIZ,CAAAA,kBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass UploadFilesService {\n  upload(file, onUploadProgress) {\n    let formData = new FormData();\n\n    formData.append(\"uploadFile\", file);\n\n    return http.post(\"/uploadAndPrepare/Passport_Page\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  executeRules(transactionalId, onUploadProgress) {\n    let formData = new FormData();\n\n    let url = \"/executeRules/\" + transactionalId + \"/dan/dan/Documents,NormalOCR,GenerateText,PassportFields/xml\"\n    console.log(url)\n\n    return http.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new UploadFilesService();\n"]},"metadata":{},"sourceType":"module"}