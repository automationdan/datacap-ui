{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ariaLabel\", \"className\", \"enableExpando\", \"enableToggle\", \"isExpanded\", \"onExpand\", \"expandIconDescription\", \"children\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy';\nimport deprecate from '../../prop-types/deprecate';\nimport React from 'react';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar TableExpandHeader = function TableExpandHeader(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      headerClassName = _ref.className,\n      enableExpando = _ref.enableExpando,\n      enableToggle = _ref.enableToggle,\n      isExpanded = _ref.isExpanded,\n      onExpand = _ref.onExpand,\n      expandIconDescription = _ref.expandIconDescription,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var className = cx(\"\".concat(prefix, \"--table-expand\"), headerClassName);\n  var previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue\n  }, rest), enableExpando || enableToggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  })) : null, children);\n};\n\nTableExpandHeader.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.string), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.string)]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * The enableExpando prop is being replaced by enableToggle\n   */\n  enableExpando: deprecate(PropTypes.bool, 'The `enableExpando` prop has been deprecated in favor of `enableToggle`. This prop will be removed in the next major release.'),\n\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableToggle: PropTypes.bool,\n\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.bool), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.bool)]),\n\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.func)])\n};\nexport default TableExpandHeader;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/datacap-ui/node_modules/carbon-components-react/es/components/DataTable/TableExpandHeader.js"],"names":["_extends","_objectWithoutProperties","_excluded","cx","PropTypes","requiredIfGivenPropIsTruthy","deprecate","React","ChevronRight16","settings","prefix","TableExpandHeader","_ref","ariaLabel","headerClassName","className","enableExpando","enableToggle","isExpanded","onExpand","expandIconDescription","children","rest","concat","previousValue","undefined","createElement","scope","type","onClick","title","propTypes","oneOfType","string","node","bool","func"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,EAA4C,cAA5C,EAA4D,YAA5D,EAA0E,UAA1E,EAAsF,uBAAtF,EAA+G,UAA/G,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,2BAAP,MAAwC,8CAAxC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,IAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACvD,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,eAAe,GAAGF,IAAI,CAACG,SAD3B;AAAA,MAEIC,aAAa,GAAGJ,IAAI,CAACI,aAFzB;AAAA,MAGIC,YAAY,GAAGL,IAAI,CAACK,YAHxB;AAAA,MAIIC,UAAU,GAAGN,IAAI,CAACM,UAJtB;AAAA,MAKIC,QAAQ,GAAGP,IAAI,CAACO,QALpB;AAAA,MAMIC,qBAAqB,GAAGR,IAAI,CAACQ,qBANjC;AAAA,MAOIC,QAAQ,GAAGT,IAAI,CAACS,QAPpB;AAAA,MAQIC,IAAI,GAAGrB,wBAAwB,CAACW,IAAD,EAAOV,SAAP,CARnC;;AAUA,MAAIa,SAAS,GAAGZ,EAAE,CAAC,GAAGoB,MAAH,CAAUb,MAAV,EAAkB,gBAAlB,CAAD,EAAsCI,eAAtC,CAAlB;AACA,MAAIU,aAAa,GAAGN,UAAU,GAAG,WAAH,GAAiBO,SAA/C;AACA,SAAO,aAAalB,KAAK,CAACmB,aAAN,CAAoB,IAApB,EAA0B1B,QAAQ,CAAC;AACrD2B,IAAAA,KAAK,EAAE,KAD8C;AAErDZ,IAAAA,SAAS,EAAEA,SAF0C;AAGrD,2BAAuBS;AAH8B,GAAD,EAInDF,IAJmD,CAAlC,EAIVN,aAAa,IAAIC,YAAjB,GAAgC,aAAaV,KAAK,CAACmB,aAAN,CAAoB,QAApB,EAA8B;AACnFE,IAAAA,IAAI,EAAE,QAD6E;AAEnFb,IAAAA,SAAS,EAAE,GAAGQ,MAAH,CAAUb,MAAV,EAAkB,wBAAlB,CAFwE;AAGnFmB,IAAAA,OAAO,EAAEV,QAH0E;AAInFW,IAAAA,KAAK,EAAEV,qBAJ4E;AAKnF,kBAAcP;AALqE,GAA9B,EAMpD,aAAaN,KAAK,CAACmB,aAAN,CAAoBlB,cAApB,EAAoC;AAClDO,IAAAA,SAAS,EAAE,GAAGQ,MAAH,CAAUb,MAAV,EAAkB,qBAAlB,CADuC;AAElD,kBAAcU;AAFoC,GAApC,CANuC,CAA7C,GASJ,IAbc,EAaRC,QAbQ,CAApB;AAcD,CA3BD;;AA6BAV,iBAAiB,CAACoB,SAAlB,GAA8B;AAC5B;AACF;AACA;AACA;AACElB,EAAAA,SAAS,EAAET,SAAS,CAAC4B,SAAV,CAAoB,CAAC3B,2BAA2B,CAAC,eAAD,EAAkBD,SAAS,CAAC6B,MAA5B,CAA5B,EAAiE5B,2BAA2B,CAAC,cAAD,EAAiBD,SAAS,CAAC6B,MAA3B,CAA5F,CAApB,CALiB;AAM5BZ,EAAAA,QAAQ,EAAEjB,SAAS,CAAC8B,IANQ;AAO5BnB,EAAAA,SAAS,EAAEX,SAAS,CAAC6B,MAPO;;AAS5B;AACF;AACA;AACEjB,EAAAA,aAAa,EAAEV,SAAS,CAACF,SAAS,CAAC+B,IAAX,EAAiB,+HAAjB,CAZI;;AAc5B;AACF;AACA;AACElB,EAAAA,YAAY,EAAEb,SAAS,CAAC+B,IAjBI;;AAmB5B;AACF;AACA;AACEf,EAAAA,qBAAqB,EAAEhB,SAAS,CAAC6B,MAtBL;;AAwB5B;AACF;AACA;AACA;AACEf,EAAAA,UAAU,EAAEd,SAAS,CAAC4B,SAAV,CAAoB,CAAC3B,2BAA2B,CAAC,eAAD,EAAkBD,SAAS,CAAC+B,IAA5B,CAA5B,EAA+D9B,2BAA2B,CAAC,cAAD,EAAiBD,SAAS,CAAC+B,IAA3B,CAA1F,CAApB,CA5BgB;;AA8B5B;AACF;AACA;AACEhB,EAAAA,QAAQ,EAAEf,SAAS,CAAC4B,SAAV,CAAoB,CAAC3B,2BAA2B,CAAC,eAAD,EAAkBD,SAAS,CAACgC,IAA5B,CAA5B,EAA+D/B,2BAA2B,CAAC,cAAD,EAAiBD,SAAS,CAACgC,IAA3B,CAA1F,CAApB;AAjCkB,CAA9B;AAmCA,eAAezB,iBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ariaLabel\", \"className\", \"enableExpando\", \"enableToggle\", \"isExpanded\", \"onExpand\", \"expandIconDescription\", \"children\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy';\nimport deprecate from '../../prop-types/deprecate';\nimport React from 'react';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar TableExpandHeader = function TableExpandHeader(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      headerClassName = _ref.className,\n      enableExpando = _ref.enableExpando,\n      enableToggle = _ref.enableToggle,\n      isExpanded = _ref.isExpanded,\n      onExpand = _ref.onExpand,\n      expandIconDescription = _ref.expandIconDescription,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var className = cx(\"\".concat(prefix, \"--table-expand\"), headerClassName);\n  var previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue\n  }, rest), enableExpando || enableToggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  })) : null, children);\n};\n\nTableExpandHeader.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.string), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.string)]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * The enableExpando prop is being replaced by enableToggle\n   */\n  enableExpando: deprecate(PropTypes.bool, 'The `enableExpando` prop has been deprecated in favor of `enableToggle`. This prop will be removed in the next major release.'),\n\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableToggle: PropTypes.bool,\n\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.bool), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.bool)]),\n\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.func)])\n};\nexport default TableExpandHeader;"]},"metadata":{},"sourceType":"module"}