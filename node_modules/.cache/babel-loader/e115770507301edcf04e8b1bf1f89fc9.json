{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { useId } from '../../internal/useId';\nvar prefix = settings.prefix;\n\nfunction ProgressBar(_ref) {\n  var className = _ref.className,\n      hideLabel = _ref.hideLabel,\n      label = _ref.label,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      value = _ref.value,\n      helperText = _ref.helperText;\n  var labelId = useId('progress-bar');\n  var helperId = useId('progress-bar-helper');\n  var indeterminate = value === null || value === undefined;\n  var cappedValue = value;\n\n  if (cappedValue > max) {\n    cappedValue = max;\n  }\n\n  if (cappedValue < 0) {\n    cappedValue = 0;\n  }\n\n  var percentage = cappedValue / max;\n  var wrapperClasses = classNames(\"\".concat(prefix, \"--progress-bar\"), _defineProperty({}, \"\".concat(prefix, \"--progress-bar--indeterminate\"), indeterminate), className);\n  var labelClasses = classNames(\"\".concat(prefix, \"--progress-bar__label\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: labelClasses,\n    id: labelId\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__track\"),\n    role: \"progressbar\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": helperText ? helperId : null,\n    \"aria-valuemin\": !indeterminate ? 0 : null,\n    \"aria-valuemax\": !indeterminate ? max : null,\n    \"aria-valuenow\": !indeterminate ? cappedValue : null\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__bar\"),\n    style: {\n      transform: \"scaleX(\".concat(percentage, \")\")\n    }\n  })), helperText && /*#__PURE__*/React.createElement(\"div\", {\n    id: helperId,\n    className: \"\".concat(prefix, \"--progress-bar__helper-text\")\n  }, helperText));\n}\n\nProgressBar.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current progress as a textual representation.\n   */\n  helperText: PropTypes.string,\n\n  /**\n   * Whether the label should be visually hidden.\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * A label describing the progress bar.\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number,\n\n  /**\n   * The current value.\n   */\n  value: PropTypes.number\n};\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/danielcrow/Documents/development/cloudfoundry/capture/capture-ui/node_modules/carbon-components-react/es/components/ProgressBar/ProgressBar.js"],"names":["_defineProperty","React","PropTypes","classNames","settings","useId","prefix","ProgressBar","_ref","className","hideLabel","label","_ref$max","max","value","helperText","labelId","helperId","indeterminate","undefined","cappedValue","percentage","wrapperClasses","concat","labelClasses","createElement","id","role","style","transform","propTypes","string","bool","isRequired","number"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { useId } from '../../internal/useId';\nvar prefix = settings.prefix;\n\nfunction ProgressBar(_ref) {\n  var className = _ref.className,\n      hideLabel = _ref.hideLabel,\n      label = _ref.label,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      value = _ref.value,\n      helperText = _ref.helperText;\n  var labelId = useId('progress-bar');\n  var helperId = useId('progress-bar-helper');\n  var indeterminate = value === null || value === undefined;\n  var cappedValue = value;\n\n  if (cappedValue > max) {\n    cappedValue = max;\n  }\n\n  if (cappedValue < 0) {\n    cappedValue = 0;\n  }\n\n  var percentage = cappedValue / max;\n  var wrapperClasses = classNames(\"\".concat(prefix, \"--progress-bar\"), _defineProperty({}, \"\".concat(prefix, \"--progress-bar--indeterminate\"), indeterminate), className);\n  var labelClasses = classNames(\"\".concat(prefix, \"--progress-bar__label\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: labelClasses,\n    id: labelId\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__track\"),\n    role: \"progressbar\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": helperText ? helperId : null,\n    \"aria-valuemin\": !indeterminate ? 0 : null,\n    \"aria-valuemax\": !indeterminate ? max : null,\n    \"aria-valuenow\": !indeterminate ? cappedValue : null\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__bar\"),\n    style: {\n      transform: \"scaleX(\".concat(percentage, \")\")\n    }\n  })), helperText && /*#__PURE__*/React.createElement(\"div\", {\n    id: helperId,\n    className: \"\".concat(prefix, \"--progress-bar__helper-text\")\n  }, helperText));\n}\n\nProgressBar.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current progress as a textual representation.\n   */\n  helperText: PropTypes.string,\n\n  /**\n   * Whether the label should be visually hidden.\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * A label describing the progress bar.\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number,\n\n  /**\n   * The current value.\n   */\n  value: PropTypes.number\n};\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}