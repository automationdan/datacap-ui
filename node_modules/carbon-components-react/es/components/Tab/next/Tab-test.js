import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from 'react';
import { default as Tab } from './Tab';
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
describe('Tab', function () {
  it('adds extra classes that are passed via className', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(Tab, {
              className: "custom-class",
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            _context.next = 3;
            return expect(screen.getByRole('presentation').classList.contains('custom-class')).toBe(true);

          case 3:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  it('sets tabIndex on <button> if one is passed via props', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1" // eslint-disable-next-line jsx-a11y/tabindex-no-positive
              ,
              tabIndex: 2,
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            _context2.next = 3;
            return expect(screen.getByRole('tab').tabIndex).toEqual(2);

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
  it('renders <li> with [role="presentation"]', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(Tab, {
              className: "custom-class",
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            _context3.next = 3;
            return expect(screen.getByRole('presentation')).toBeTruthy();

          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  })));
  it('renders <button> with tabindex set to 0 by default', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            _context4.next = 3;
            return expect(screen.getByRole('tab').tabIndex).toEqual(0);

          case 3:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  })));
  it('renders <button> with tabindex set to -1 if disabled', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {
    return _regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false,
              disabled: true
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            _context5.next = 3;
            return expect(screen.getByRole('tab').tabIndex).toEqual(-1);

          case 3:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  })));
  it('uses label to set children on <button> when passed via props', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {
    return _regeneratorRuntime.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            _context6.next = 3;
            return expect(screen.getByRole('tab').textContent).toBe('Tab 1');

          case 3:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  })));
  it('has aria-disabled that matches disabled', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {
    return _regeneratorRuntime.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false,
              disabled: true
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            _context7.next = 3;
            return expect(screen.getByRole('tab')).toHaveAttribute('aria-disabled');

          case 3:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  })));
});
describe('Click events', function () {
  it('invokes handleTabClick from handleTabClick prop', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {
    var handleTabClick, button;
    return _regeneratorRuntime.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            handleTabClick = jest.fn();
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              handleTabClick: handleTabClick,
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              selected: false
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            button = screen.getByRole('tab');
            userEvent.click(button);
            _context8.next = 6;
            return expect(handleTabClick).toHaveBeenCalled();

          case 6:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  })));
  it('invokes onClick when a function is passed to onClick prop', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {
    var onClick, button;
    return _regeneratorRuntime.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            onClick = jest.fn();
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: onClick,
              onKeyDown: function onKeyDown() {},
              selected: false
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            button = screen.getByRole('tab');
            userEvent.click(button);
            _context9.next = 6;
            return expect(onClick).toHaveBeenCalled();

          case 6:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  })));
  it('does not invoke click handler if tab is disabled', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {
    var onClick, button;
    return _regeneratorRuntime.wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            onClick = jest.fn();
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: onClick,
              onKeyDown: function onKeyDown() {},
              selected: false,
              disabled: true
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            button = screen.getByRole('tab');
            userEvent.click(button);
            _context10.next = 6;
            return expect(onClick).not.toHaveBeenCalled();

          case 6:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  })));
});
describe('Keyboard events', function () {
  it('invokes onKeyDown from onKeyDown prop', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {
    var onKeyDown, button;
    return _regeneratorRuntime.wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            onKeyDown = jest.fn();
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: onKeyDown,
              selected: true
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            button = screen.getByRole('tab');
            userEvent.type(button, '[ArrowLeft]');
            _context11.next = 6;
            return expect(onKeyDown).toHaveBeenCalled();

          case 6:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  })));
  it('invokes handleTabKeyDown from handleTabKeyDown prop', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {
    var handleTabKeyDown, button;
    return _regeneratorRuntime.wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            handleTabKeyDown = jest.fn();
            render( /*#__PURE__*/React.createElement(Tab, {
              label: "Tab 1",
              onClick: function onClick() {},
              onKeyDown: function onKeyDown() {},
              handleTabKeyDown: handleTabKeyDown,
              selected: true
            }, /*#__PURE__*/React.createElement("p", null, "Content for first tab goes here.")));
            button = screen.getByRole('tab');
            userEvent.type(button, '[ArrowRight]');
            _context12.next = 6;
            return expect(handleTabKeyDown).toHaveBeenCalled();

          case 6:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  })));
});