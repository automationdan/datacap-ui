{"version":3,"sources":["components/DataCapHeader/index.js","components/DataCapHeader/DataCapHeader.js","content/LandingPage/LandingPage.js","content/LandingPage/index.js","http-common.js","services/upload-files.service.js","components/DocumentUnderstanding/ResultsList/ResultsList.js","components/DocumentUnderstanding/ResultsList/index.js","components/DocumentUnderstanding/index.js","components/DocumentUnderstanding/DocumentUnderstanding.js","content/DataCap/index.js","content/DataCap/DataCap.js","content/Invoices/index.js","content/Invoices/Invoices.js","App.js","reportWebVitals.js","index.js"],"names":["DataCapHeader","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar","HeaderGlobalAction","props","selected","role","tabIndex","LandingPage","className","Breadcrumb","BreadcrumbItem","href","Tabs","Tab","label","Button","axios","create","baseURL","process","headers","file","page","onUploadProgress","formData","FormData","append","http","post","transactionalId","application","workflow","rules","docId","url","console","log","ext","get","ResultsList","StructuredList","ariaLabel","head","this","results","map","d","fieldName","fieldValue","Component","DocumentUnderstanding","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","docUrls","fileData","fileInfos","docUrl","docStatus","event","thepage","target","files","UploadService","setState","Math","round","loaded","total","then","response","data","getImagePath","URL","createObjectURL","transactionaId","rulesToExecute","counter","ruleExec","length","executeRule","executeRules","getTransactionalFile","values","transactionId","split","Grid","Row","Column","lg","style","width","FileUploaderDropContainer","accept","onAddFiles","buttonkind","buttonlabel","filenamestatus","icondescription","labelText","disabled","fileType","filePath","InlineLoading","description","DataCap","Invoices","App","Content","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b43b1d.chunk.js","sourcesContent":["import DataCapHeader from './DataCapHeader';\nexport default DataCapHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  AppSwitcher20,\n  Notification20,\n  UserAvatar20,\n} from '@carbon/icons-react';\n\nconst DataCapHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"Carbon Tutorial\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"IBM\">\n          DataCap\n        </HeaderName>\n        <HeaderNavigation aria-label=\"DataCap\">\n          <HeaderMenuItem element={Link} to=\"/DataCap\">Passports</HeaderMenuItem>\n        </HeaderNavigation>\n        <HeaderNavigation aria-label=\"Invoices\">\n          <HeaderMenuItem element={Link} to=\"/Invoices\">Invoices</HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem element={Link} to=\"/DataCap\">Passports</HeaderMenuItem>\n            </HeaderSideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem element={Link} to=\"/Invoices\">Invoices</HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar>\n      <HeaderGlobalAction aria-label=\"Notifications\">\n        <Notification20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"User Avatar\">\n        <UserAvatar20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"App Switcher\">\n        <AppSwitcher20 />\n      </HeaderGlobalAction>\n    </HeaderGlobalBar>\n      </Header>\n    )}\n  />\n);\n\nexport default DataCapHeader;\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\n\nconst props = {\n  tabs: {\n    selected: 0,\n    role: 'navigation',\n  },\n  tab: {\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\n\nconst LandingPage = () => {\n  return  <div className=\"bx--grid bx--grid--full-width landing-page\">\n  <div className=\"bx--row landing-page__banner\">\n    <div className=\"bx--col-lg-16\">\n      <Breadcrumb aria-label=\"Page navigation\">\n        <BreadcrumbItem>\n          <a href=\"/\">Getting started</a>\n          </BreadcrumbItem>\n          </Breadcrumb>\n      <h1 className=\"landing-page__heading\">Capturing Document Information</h1>\n    </div>\n  </div>\n  <div className=\"bx--row landing-page__r2\">\n    <div className=\"bx--col bx--no-gutter\">\n      <Tabs {...props.tabs} aria-label=\"Tab navigation\">\n      <Tab {...props.tab} label=\"About\">\n<div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n  <div className=\"bx--row landing-page__tab-content\">\n    <div className=\"bx--col-md-4 bx--col-lg-7\">\n      <h2 className=\"landing-page__subheading\">\n        What is Carbon?\n      </h2>\n      <p className=\"landing-page__p\">\n        Carbon is IBM’s open-source design system for digital\n        products and experiences. With the IBM Design Language\n        as its foundation, the system consists of working code,\n        design tools and resources, human interface guidelines,\n        and a vibrant community of contributors.\n      </p>\n      <Button>Learn more</Button>\n    </div>\n    \n  </div>\n</div>\n</Tab>\n        <Tab {...props.tab} label=\"Design\">\n          <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n            <div className=\"bx--row landing-page__tab-content\">\n              <div className=\"bx--col-lg-16\">\n                Rapidly build beautiful and accessible experiences. The Carbon kit\n                contains all resources you need to get started.\n              </div>\n            </div>\n          </div>\n        </Tab>\n        <Tab {...props.tab} label=\"Develop\">\n          <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n            <div className=\"bx--row landing-page__tab-content\">\n              <div className=\"bx--col-lg-16\">\n                Carbon provides styles and components in Vanilla, React, Angular,\n                and Vue for anyone building on the web.\n              </div>\n            </div>\n          </div>\n        </Tab>\n      </Tabs>\n    </div>\n  </div>\n  <div className=\"bx--row landing-page__r3\">\n  <div className=\"bx--col-md-4 bx--col-lg-4\">\n    <h3 className=\"landing-page__label\">The Principles</h3>\n  </div>\n  <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Open</div>\n  <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Modular</div>\n  <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Consistent</div>\n</div>\n  </div>;\n};\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import axios from \"axios\";\n\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_DCAPPROXY + \"/api/documentunderstanding/\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import http from \"../http-common\";\n\nclass UploadFilesService {\n  upload(file,page, onUploadProgress) {\n    let formData = new FormData();\n\n    formData.append(\"uploadFile\", file);\n\n    return http.post(\"/uploadAndPrepare/\" + page, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  executeRule(transactionalId,application, workflow, rules, docId, onUploadProgress) {\n    let formData = new FormData();\n\n    let url = \"/executeRule/\" + transactionalId + \"/\" + application + \"/\"+workflow +\"/\"+rules\n    console.log(url)\n\n    return http.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  executeRules(transactionalId,application, workflow, rules, docId, onUploadProgress) {\n    let formData = new FormData();\n\n    let url = \"/executeRules/\" + transactionalId + \"/\" + application + \"/\"+workflow +\"/\"+rules+\"/xml/\"+ docId\n    console.log(url)\n\n    return http.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  getTransactionalFile(transactionalId,ext, docId, onUploadProgress) {\n    let formData = new FormData();\n\n    let url = \"/getDataFile/\" + transactionalId + \"/\" + ext + \"/\"+docId\n    console.log(url)\n\n    return http.get(url, formData, {\n      onUploadProgress,\n    });\n  }\n\n\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new UploadFilesService();\n","import React, { Component } from \"react\";\nimport {StructuredListWrapper,StructuredListHead,StructuredListRow,StructuredListBody,StructuredListCell } from 'carbon-components-react';\n\n\nexport default class ResultsList extends Component {\n  render() {\n    return (\n    <StructuredListWrapper ariaLabel=\"Structured list\">\n      <StructuredListHead>\n        <StructuredListRow head tabIndex={0}>\n          <StructuredListCell head>Name</StructuredListCell>\n          <StructuredListCell head>Value</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        {this.props.results.map(d => (<StructuredListRow key={d.fieldName}>\n                                        <StructuredListCell><h5>{d.fieldName}</h5> </StructuredListCell>\n                                        <StructuredListCell> {d.fieldValue}</StructuredListCell>\n                                      </StructuredListRow>))}\n\n\n      </StructuredListBody>\n    </StructuredListWrapper>)\n  }\n}\n","import ResultsList from './ResultsList';\nexport default ResultsList;\n","import DocumentUnderstanding from './DocumentUnderstanding';\nexport default DocumentUnderstanding;\n","import React, { Component } from \"react\";\nimport UploadService from \"../../services/upload-files.service\";\nimport FileViewer from 'react-file-viewer';\nimport { Button,FileUploaderDropContainer,Breadcrumb,BreadcrumbItem,InlineLoading } from 'carbon-components-react';\nimport ResultsList from './ResultsList'\nimport { Grid, Row, Column } from 'carbon-components-react';\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"Please Upload Your \" +this.props.page,\n      results: [],\n      docUrls: [ { fileData: '' } ],\n      fileInfos: [],\n      docUrl: undefined,\n      docStatus: \"Begin\"\n    };\n  }\n\n  selectFile(event) {\n    //console.log(event.target.files)\n    let thepage = this.props.page\n    /*this.setState({\n      selectedFiles: event.target.files,\n    });*/\n    console.log(\"hello world\")\n    let currentFile = event.target.files[0];\n    event.target.files = null;\n    UploadService.upload(currentFile,thepage, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    }).then((response) => {\n        console.log(response.data.transactionalId);\n        var getImagePath = URL.createObjectURL(currentFile);\n        console.log(getImagePath);\n        this.setState({\n            transactionalId: response.data.transactionalId,\n            message: \"Uploaded Document\",\n            docUrl: \"/api/documentunderstanding/getdoc/\" + response.data.transactionalId+ \"/pdf\",\n            selectedFiles: currentFile\n        })\n      })\n\n\n\n\n\n  }\n\n  executeRules(transactionaId, application, workflow,docId,rulesToExecute, counter){\n\n    console.log(counter);\n    console.log(rulesToExecute[counter]);\n    console.log(rulesToExecute)\n\n    let ruleExec = rulesToExecute[counter];\n\n    this.setState({\n      message: \"Rules processed\"\n    })\n    if(rulesToExecute.length > counter){\n      if(workflow === \"TradeFinance\"){\n          ruleExec = \"Configuration,Convert,InsightRecognition,Classify,AnalysePageLayout,EntitySearch,Collection\";\n          counter = 7\n      }\n\n      UploadService.executeRule(this.state.transactionalId,application,workflow,ruleExec,docId,(event) =>{\n        this.setState({\n          progress: Math.round((100 * event.loaded) / event.total),\n        });\n      }).then((response)=>{\n        this.setState({\n          message: rulesToExecute[counter] + \"processed\"\n        })\n        counter++\n        console.log(counter);\n        this.executeRules(transactionaId,application,workflow,docId,rulesToExecute,counter);\n      })\n    }else{\n      UploadService.getTransactionalFile(transactionaId,\"xml\", docId, (event) =>{\n        this.setState({\n          progress: Math.round((100 * event.loaded) / event.total),\n        });\n      }).then((response)=>{\n        console.log(response.data)\n          this.setState({\n            results: response.data.values,\n            message: \"Document Processed\",\n            transactionId: response.data.transactionalId,\n            docStatus: \"Done\"\n          })\n\n          console.log(counter);\n          //this.executeRules(transactionaId,application,workflow,docId,rulesToExecute,counter);\n        })\n\n    }\n  }\n  upload() {\n\n    let application = this.props.application\n    let workflow = this.props.workflow\n    let rules = this.props.rules\n    let docId = this.props.docId\n    let currentRule = 0;\n    console.log(\"upload\" + this.state.transactionalId);\n    this.setState({\n      docStatus: \"Processing\",\n    });\n\n    var rulesToExecute =rules.split(\",\")\n    console.log(rulesToExecute);\n    console.log(rulesToExecute.length);\n    this.executeRules(this.state.transactionalId,application,workflow,docId,rulesToExecute,currentRule);\n\n\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n  upload2() {\n\n    let application = this.props.application\n    let workflow = this.props.workflow\n    let rules = this.props.rules\n    let docId = this.props.docId\n    console.log(\"upload\" + this.state.transactionalId);\n    this.setState({\n      docStatus: \"Processing\",\n    });\n\n    var rulesToExecute =rules.split(\",\")\n    console.log(rulesToExecute.length);\n    let currentRule = 0;\n    UploadService.executeRules(this.state.transactionalId,application,workflow,rulesToExecute[currentRule],docId,(event) =>{\n        this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    }).then((response)=>{\n      console.log(response.data)\n\n      this.setState({\n        results: response.data.values,\n        message: \"Document Processed\",\n        transactionId: response.data.transactionalId,\n        docStatus: \"Done\"\n      });\n      console.log(this.state);\n      return \"stuff\"\n    })\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n\n\n  render() {\n    const {\n      selectedFiles\n    } = this.state;\n\n    return (\n  <div>\n\n  <Grid>\n    <Row>\n      <Column lg={16}>\n        <Breadcrumb aria-label=\"Page navigation\">\n          <BreadcrumbItem>\n            <a href=\"/\">{this.props.page}</a>\n            </BreadcrumbItem>\n            </Breadcrumb>\n            <h1 className=\"landing-page__heading\">{this.state.message}</h1>\n      </Column>\n    </Row>\n    <Row>\n      <Column lg={16}>\n        <div style={{ width: '500px' }}>\n        <FileUploaderDropContainer\n          accept={[\n            '.jpg',\n            '.pdf',\n            '.tif'\n          ]}\n          onAddFiles={this.selectFile}\n          buttonkind=\"primary\"\n          buttonlabel=\"Add files\"\n          filenamestatus=\"edit\"\n          icondescription=\"Clear file\"\n          labelText=\"Add File to this container\"\n          className=\"bx--file__container\"\n          ></FileUploaderDropContainer>\n          </div>\n\n      </Column>\n    </Row>\n    <Row>\n      <Column lg={16}>\n       <Button disabled={!selectedFiles} onClick={this.upload} style={{ width: '1500px' }}>\n         Process Document\n         </Button>\n      </Column>\n    </Row>\n    <Row>\n    <Column>\n      <h1>Document</h1>\n    {this.state.docUrl !== undefined  &&\n\n\n     <FileViewer fileType=\"pdf\" filePath={this.state.docUrl} />\n\n    }\n\n    </Column>\n      <Column>\n      <h1>Document Details</h1>\n        {this.state.docStatus===\"Processing\" &&\n          <InlineLoading description=\"Processing...\" />\n        }\n        {this.state.message===\"Document Processed\" &&\n\n          <ResultsList results={this.state.results} />\n\n        }\n      </Column>\n\n\n\n    </Row>\n</Grid>\n\n\n\n\n\n\n\n      </div>\n    );\n  }\n}\n","import DataCap from './DataCap';\nexport default DataCap;\n","import React from 'react';\nimport DocumentUnderstanding from '../../components/DocumentUnderstanding'\n\n\nconst DataCap = () => {\n  return <div>\n<DocumentUnderstanding page=\"Passport_Page\" application=\"dan\" workflow=\"dan\" rules=\"Documents,NormalOCR,GenerateText,PassportFields\" docId=\"tm000001\" />\n  </div>;\n};\n\nexport default DataCap;\n","import Invoices from './Invoices';\nexport default Invoices;\n","import React from 'react';\nimport DocumentUnderstanding from '../../components/DocumentUnderstanding'\n\n\nconst Invoices = () => {\n  return <div>\n    <DocumentUnderstanding page=\"Other\" application=\"TradeFinance\" workflow=\"TradeFinance\"\n    rules=\"Configuration,Convert,InsightRecognition,Classify,AnalysePageLayout\" docId=\"TM000002\" />\n  </div>;\n};\n\nexport default Invoices;\n","import React, {Component} from 'react'\n\nimport './App.css';\nimport './App.scss';\nimport { Content } from 'carbon-components-react';\nimport DataCapHeader from './components/DataCapHeader';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport DataCap from './content/DataCap';\nimport Invoices from './content/Invoices';\nclass App extends Component {\n\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n      message : \"\"\n    }\n  }\n  render(){\n    return (\n      <div>\n      {console.log(process.env.REACT_APP_DCAPPROXY)}\n        <DataCapHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/DataCap\" component={DataCap} />\n            <Route path=\"/Invoices\" component={Invoices} />\n          </Switch>\n      </Content>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n    </Router>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}