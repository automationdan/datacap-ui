{"version":3,"sources":["components/DataCapHeader/index.js","components/DataCapHeader/DataCapHeader.js","content/LandingPage/LandingPage.js","content/LandingPage/index.js","http-common.js","services/upload-files.service.js","components/DocumentUnderstanding/ResultsList/index.js","components/DocumentUnderstanding/ResultsList/ResultsList.js","components/DocumentUnderstanding/index.js","components/DocumentUnderstanding/DocumentUnderstanding.js","content/DataCap/index.js","content/DataCap/DataCap.js","content/Invoices/index.js","content/Invoices/Invoices.js","App.js","reportWebVitals.js","index.js"],"names":["DataCapHeader","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","aria-label","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar","HeaderGlobalAction","props","selected","role","tabIndex","LandingPage","className","Breadcrumb","BreadcrumbItem","href","Tabs","Tab","label","Button","axios","create","baseURL","headers","file","page","onUploadProgress","formData","FormData","append","http","post","transactionalId","application","workflow","rules","url","console","log","get","ResultsList","StructuredList","ariaLabel","head","this","results","map","d","fieldName","fieldValue","Component","DocumentUnderstanding","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","docUrls","fileData","fileInfos","docUrl","docStatus","event","thepage","setState","target","files","UploadService","Math","round","loaded","total","then","response","data","getImagePath","URL","createObjectURL","executeRules","values","transactionId","class","FileUploaderDropContainer","accept","onAddFiles","buttonKind","buttonLabel","filenameStatus","iconDescription","labelText","disabled","InlineLoading","description","fileType","filePath","DataCap","Invoices","App","Content","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.137f9533.chunk.js","sourcesContent":["import DataCapHeader from './DataCapHeader';\nexport default DataCapHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  AppSwitcher20,\n  Notification20,\n  UserAvatar20,\n} from '@carbon/icons-react';\n\nconst DataCapHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"Carbon Tutorial\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"IBM\">\n          DataCap\n        </HeaderName>\n        <HeaderNavigation aria-label=\"DataCap\">\n          <HeaderMenuItem element={Link} to=\"/DataCap\">Passports</HeaderMenuItem>\n        </HeaderNavigation>\n        <HeaderNavigation aria-label=\"Invoices\">\n          <HeaderMenuItem element={Link} to=\"/Invoices\">Invoices</HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem element={Link} to=\"/DataCap\">Passports</HeaderMenuItem>\n            </HeaderSideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem element={Link} to=\"/Invoices\">Invoices</HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar>\n      <HeaderGlobalAction aria-label=\"Notifications\">\n        <Notification20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"User Avatar\">\n        <UserAvatar20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"App Switcher\">\n        <AppSwitcher20 />\n      </HeaderGlobalAction>\n    </HeaderGlobalBar>\n      </Header>\n    )}\n  />\n);\n\nexport default DataCapHeader;\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\n\nconst props = {\n  tabs: {\n    selected: 0,\n    role: 'navigation',\n  },\n  tab: {\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\n\nconst LandingPage = () => {\n  return  <div className=\"bx--grid bx--grid--full-width landing-page\">\n  <div className=\"bx--row landing-page__banner\">\n    <div className=\"bx--col-lg-16\">\n      <Breadcrumb aria-label=\"Page navigation\">\n        <BreadcrumbItem>\n          <a href=\"/\">Getting started</a>\n          </BreadcrumbItem>\n          </Breadcrumb>\n      <h1 className=\"landing-page__heading\">Capturing Document Information</h1>\n    </div>\n  </div>\n  <div className=\"bx--row landing-page__r2\">\n    <div className=\"bx--col bx--no-gutter\">\n      <Tabs {...props.tabs} aria-label=\"Tab navigation\">\n      <Tab {...props.tab} label=\"About\">\n<div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n  <div className=\"bx--row landing-page__tab-content\">\n    <div className=\"bx--col-md-4 bx--col-lg-7\">\n      <h2 className=\"landing-page__subheading\">\n        What is Carbon?\n      </h2>\n      <p className=\"landing-page__p\">\n        Carbon is IBM’s open-source design system for digital\n        products and experiences. With the IBM Design Language\n        as its foundation, the system consists of working code,\n        design tools and resources, human interface guidelines,\n        and a vibrant community of contributors.\n      </p>\n      <Button>Learn more</Button>\n    </div>\n    \n  </div>\n</div>\n</Tab>\n        <Tab {...props.tab} label=\"Design\">\n          <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n            <div className=\"bx--row landing-page__tab-content\">\n              <div className=\"bx--col-lg-16\">\n                Rapidly build beautiful and accessible experiences. The Carbon kit\n                contains all resources you need to get started.\n              </div>\n            </div>\n          </div>\n        </Tab>\n        <Tab {...props.tab} label=\"Develop\">\n          <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n            <div className=\"bx--row landing-page__tab-content\">\n              <div className=\"bx--col-lg-16\">\n                Carbon provides styles and components in Vanilla, React, Angular,\n                and Vue for anyone building on the web.\n              </div>\n            </div>\n          </div>\n        </Tab>\n      </Tabs>\n    </div>\n  </div>\n  <div className=\"bx--row landing-page__r3\">\n  <div className=\"bx--col-md-4 bx--col-lg-4\">\n    <h3 className=\"landing-page__label\">The Principles</h3>\n  </div>\n  <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Open</div>\n  <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Modular</div>\n  <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Consistent</div>\n</div>\n  </div>;\n};\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"/api/documentunderstanding/\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import http from \"../http-common\";\n\nclass UploadFilesService {\n  upload(file,page, onUploadProgress) {\n    let formData = new FormData();\n\n    formData.append(\"uploadFile\", file);\n\n    return http.post(\"/uploadAndPrepare/\" + page, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  executeRules(transactionalId,application, workflow, rules, onUploadProgress) {\n    let formData = new FormData();\n\n    let url = \"/executeRules/\" + transactionalId + \"/\" + application + \"/\"+workflow +\"/\"+rules+\"/xml\"\n    console.log(url)\n\n    return http.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new UploadFilesService();\n","import ResultsList from './ResultsList';\nexport default ResultsList;\n","import React, { Component } from \"react\";\nimport {StructuredListWrapper,StructuredListHead,StructuredListRow,StructuredListBody,StructuredListCell } from 'carbon-components-react';\n\n\nexport default class ResultsList extends Component {\n  render() {\n    return (\n    <StructuredListWrapper ariaLabel=\"Structured list\">\n      <StructuredListHead>\n        <StructuredListRow head tabIndex={0}>\n          <StructuredListCell head>Name</StructuredListCell>\n          <StructuredListCell head>Value</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        {this.props.results.map(d => (<StructuredListRow key={d.fieldName}>\n                                        <StructuredListCell><h5>{d.fieldName}</h5> </StructuredListCell>\n                                        <StructuredListCell> {d.fieldValue}</StructuredListCell>\n                                      </StructuredListRow>))}\n\n\n      </StructuredListBody>\n    </StructuredListWrapper>)\n  }\n}\n","import DocumentUnderstanding from './DocumentUnderstanding';\nexport default DocumentUnderstanding;\n","import React, { Component } from \"react\";\nimport UploadService from \"../../services/upload-files.service\";\nimport FileViewer from 'react-file-viewer';\nimport { Button,FileUploaderDropContainer,Breadcrumb,BreadcrumbItem,InlineLoading } from 'carbon-components-react';\nimport ResultsList from './ResultsList'\nimport { WarningFilled16 } from '@carbon/icons-react';\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"Please Upload Your Document\",\n      results: [],\n      docUrls: [ { fileData: '' } ],\n      fileInfos: [],\n      docUrl: undefined,\n      docStatus: \"Begin\"\n    };\n  }\n\n  selectFile(event) {\n    //console.log(event.target.files)\n    let thepage = this.props.page\n    this.setState({\n      selectedFiles: event.target.files,\n    });\n    let currentFile = event.target.files[0];\n    UploadService.upload(currentFile,thepage, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    }).then((response) => {\n        console.log(response.data.transactionalId);\n        var getImagePath = URL.createObjectURL(currentFile);\n        console.log(getImagePath);\n        this.setState({\n            transactionalId: response.data.transactionalId,\n            message: \"Uploaded Document\",\n            docUrl: \"/api/documentunderstanding/getdoc/\" + response.data.transactionalId+ \"/pdf\"\n        })\n      })\n\n\n\n\n\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    let application = this.props.application\n    let workflow = this.props.workflow\n    let rules = this.props.rules\n    console.log(\"upload\" + this.state.transactionalId);\n    this.setState({\n      docStatus: \"Processing\",\n    });\n    UploadService.executeRules(this.state.transactionalId,application,workflow,rules,(event) =>{\n        this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    }).then((response)=>{\n      console.log(response.data)\n\n      this.setState({\n        results: response.data.values,\n        message: \"Document Processed\",\n        transactionId: response.data.transactionalId,\n        docStatus: \"Done\"\n      });\n      console.log(this.state);\n      return \"stuff\"\n    })\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos,\n    } = this.state;\n\n    return (\n  <div>\n\n  <div class=\"bx--grid--full-width\">\n    <div class=\"bx--row\">\n      <div class=\"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\">\n      <Breadcrumb aria-label=\"Page navigation\">\n        <BreadcrumbItem>\n          <a href=\"/\">{this.props.workflow}:{this.props.page}:{this.props.application}:{this.props.rules}</a>\n          </BreadcrumbItem>\n          </Breadcrumb>\n        <h1 className=\"landing-page__heading\">{this.state.message}</h1>\n      </div>\n    </div>\n    <div class=\"bx--row\">\n      <div class=\"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\">\n        <FileUploaderDropContainer\n          accept={[\n            '.jpg',\n            '.pdf'\n          ]}\n          onAddFiles={this.selectFile}\n          buttonKind=\"primary\"\n          buttonLabel=\"Add files\"\n          filenameStatus=\"edit\"\n          iconDescription=\"Clear file\"\n          labelText=\"Add File to this container\"\n          class=\"fileuploader-dcap\"\n          ></FileUploaderDropContainer>\n\n      </div>\n    </div>\n    <div class=\"bx--row\">\n      <div class=\"bx--col-lg-16 bx--col-md-8 bx--col-sm-4\">\n       <Button disabled={!selectedFiles} onClick={this.upload} >\n         Process Document\n         </Button>\n      </div>\n    </div>\n    <div class=\"bx--row\">\n      <div class=\"bx--col-lg-12 bx--col-md-6 bx--col-sm-1\">\n        {this.state.docStatus==\"Processing\" &&\n          <InlineLoading description=\"Processing...\" />\n        }\n        {this.state.message==\"Document Processed\" &&\n\n          <ResultsList results={this.state.results} />\n\n        }\n      </div>\n      <div class=\"bx--col-lg-4 bx--col-md-2 bx--col-sm-1\">\n      {this.state.docUrl != undefined  &&\n        <div>\n\n       <FileViewer fileType=\"pdf\" filePath={this.state.docUrl} />\n       </div>\n      }\n      </div>\n\n\n    </div>\n  </div>\n\n\n\n\n\n\n\n      </div>\n    );\n  }\n}\n","import DataCap from './DataCap';\nexport default DataCap;\n","import React from 'react';\nimport DocumentUnderstanding from '../../components/DocumentUnderstanding'\n\n\nconst DataCap = () => {\n  return <div>\n<DocumentUnderstanding page=\"Passport_Page\" application=\"dan\" workflow=\"dan\" rules=\"Documents,NormalOCR,GenerateText,PassportFields\" />\n  </div>;\n};\n\nexport default DataCap;\n","import Invoices from './Invoices';\nexport default Invoices;\n","import React from 'react';\nimport DocumentUnderstanding from '../../components/DocumentUnderstanding'\n\n\nconst Invoices = () => {\n  return <div>\n    <DocumentUnderstanding page=\"Invoice_Page\" application=\"dan\" workflow=\"dan\" rules=\"Documents,NormalOCR,GenerateText,InvoiceRules\" />\n  </div>;\n};\n\nexport default Invoices;\n","import React, {Component} from 'react'\n\nimport './App.css';\nimport './App.scss';\nimport { Content } from 'carbon-components-react';\nimport DataCapHeader from './components/DataCapHeader';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport DataCap from './content/DataCap';\nimport Invoices from './content/Invoices';\nclass App extends Component {\n\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n      message : \"\"\n    }\n  }\n  render(){\n    return (\n      <div>\n\n        <DataCapHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/DataCap\" component={DataCap} />\n            <Route path=\"/Invoices\" component={Invoices} />\n          </Switch>\n      </Content>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'core-js/modules/es.array.includes';\nimport 'core-js/modules/es.array.fill';\nimport 'core-js/modules/es.string.includes';\nimport 'core-js/modules/es.string.trim';\nimport 'core-js/modules/es.object.values';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n    </Router>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}